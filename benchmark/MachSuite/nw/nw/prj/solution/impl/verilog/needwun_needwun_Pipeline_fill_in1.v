// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module needwun_needwun_Pipeline_fill_in1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ptr_address0,
        ptr_ce0,
        ptr_we0,
        ptr_d0,
        ptr_q0,
        M_0_address0,
        M_0_ce0,
        M_0_we0,
        M_0_d0,
        M_0_q0,
        M_0_address1,
        M_0_ce1,
        M_0_q1,
        SEQA_0_address0,
        SEQA_0_ce0,
        SEQA_0_q0,
        SEQA_1_address0,
        SEQA_1_ce0,
        SEQA_1_q0,
        SEQB_load_3,
        p_cast21,
        empty_16,
        M_1_address0,
        M_1_ce0,
        M_1_we0,
        M_1_d0,
        M_1_q0,
        M_1_address1,
        M_1_ce1,
        M_1_q1,
        empty
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] ptr_address0;
output   ptr_ce0;
output   ptr_we0;
output  [15:0] ptr_d0;
input  [15:0] ptr_q0;
output  [12:0] M_0_address0;
output   M_0_ce0;
output   M_0_we0;
output  [63:0] M_0_d0;
input  [63:0] M_0_q0;
output  [12:0] M_0_address1;
output   M_0_ce1;
input  [63:0] M_0_q1;
output  [4:0] SEQA_0_address0;
output   SEQA_0_ce0;
input  [15:0] SEQA_0_q0;
output  [4:0] SEQA_1_address0;
output   SEQA_1_ce0;
input  [15:0] SEQA_1_q0;
input  [15:0] SEQB_load_3;
input  [3:0] p_cast21;
input  [14:0] empty_16;
output  [12:0] M_1_address0;
output   M_1_ce0;
output   M_1_we0;
output  [63:0] M_1_d0;
input  [63:0] M_1_q0;
output  [12:0] M_1_address1;
output   M_1_ce1;
input  [63:0] M_1_q1;
input  [14:0] empty;

reg ap_idle;
reg[13:0] ptr_address0;
reg ptr_ce0;
reg ptr_we0;
reg[12:0] M_0_address0;
reg M_0_ce0;
reg M_0_we0;
reg[12:0] M_0_address1;
reg M_0_ce1;
reg SEQA_0_ce0;
reg SEQA_1_ce0;
reg[12:0] M_1_address0;
reg M_1_ce0;
reg M_1_we0;
reg[12:0] M_1_address1;
reg M_1_ce1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_state25_pp0_stage4_iter4;
wire    ap_block_state30_pp0_stage4_iter5;
wire    ap_block_state35_pp0_stage4_iter6;
wire    ap_block_state40_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln31_reg_1146;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_291;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state22_pp0_stage1_iter4;
wire    ap_block_state27_pp0_stage1_iter5;
wire    ap_block_state32_pp0_stage1_iter6;
wire    ap_block_state37_pp0_stage1_iter7;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_state23_pp0_stage2_iter4;
wire    ap_block_state28_pp0_stage2_iter5;
wire    ap_block_state33_pp0_stage2_iter6;
wire    ap_block_state38_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
reg   [63:0] reg_295;
reg   [63:0] reg_300;
reg   [0:0] tmp_22_reg_1258;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state26_pp0_stage0_iter5;
wire    ap_block_state31_pp0_stage0_iter6;
wire    ap_block_state36_pp0_stage0_iter7;
wire    ap_block_state41_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
reg   [7:0] a_idx_5_reg_1139;
wire   [0:0] icmp_ln31_fu_322_p2;
reg   [0:0] icmp_ln31_reg_1146_pp0_iter1_reg;
reg   [0:0] icmp_ln31_reg_1146_pp0_iter2_reg;
reg   [0:0] icmp_ln31_reg_1146_pp0_iter3_reg;
reg   [0:0] icmp_ln31_reg_1146_pp0_iter4_reg;
reg   [0:0] icmp_ln31_reg_1146_pp0_iter5_reg;
reg   [0:0] icmp_ln31_reg_1146_pp0_iter6_reg;
wire   [14:0] add_ln41_fu_358_p2;
reg   [14:0] add_ln41_reg_1160;
reg   [14:0] add_ln41_reg_1160_pp0_iter1_reg;
reg   [14:0] add_ln41_reg_1160_pp0_iter2_reg;
reg   [14:0] add_ln41_reg_1160_pp0_iter3_reg;
reg   [14:0] add_ln41_reg_1160_pp0_iter4_reg;
reg   [14:0] add_ln41_reg_1160_pp0_iter5_reg;
reg   [14:0] add_ln41_reg_1160_pp0_iter6_reg;
wire   [14:0] add_ln42_fu_370_p2;
reg   [14:0] add_ln42_reg_1166;
reg   [14:0] add_ln42_reg_1166_pp0_iter1_reg;
reg   [14:0] add_ln42_reg_1166_pp0_iter2_reg;
reg   [14:0] add_ln42_reg_1166_pp0_iter3_reg;
reg   [14:0] add_ln42_reg_1166_pp0_iter4_reg;
reg   [14:0] add_ln42_reg_1166_pp0_iter5_reg;
reg   [14:0] add_ln42_reg_1166_pp0_iter6_reg;
wire   [14:0] add_ln43_fu_382_p2;
reg   [14:0] add_ln43_reg_1172;
reg   [14:0] add_ln43_reg_1172_pp0_iter1_reg;
reg   [14:0] add_ln43_reg_1172_pp0_iter2_reg;
reg   [14:0] add_ln43_reg_1172_pp0_iter3_reg;
reg   [14:0] add_ln43_reg_1172_pp0_iter4_reg;
reg   [14:0] add_ln43_reg_1172_pp0_iter5_reg;
reg   [14:0] add_ln43_reg_1172_pp0_iter6_reg;
wire   [14:0] add_ln47_fu_388_p2;
reg   [14:0] add_ln47_reg_1178;
reg   [14:0] add_ln47_reg_1178_pp0_iter1_reg;
reg   [14:0] add_ln47_reg_1178_pp0_iter2_reg;
reg   [14:0] add_ln47_reg_1178_pp0_iter3_reg;
reg   [14:0] add_ln47_reg_1178_pp0_iter4_reg;
reg   [14:0] add_ln47_reg_1178_pp0_iter5_reg;
reg   [14:0] add_ln47_reg_1178_pp0_iter6_reg;
wire   [7:0] tmp_s_fu_464_p4;
reg   [7:0] tmp_s_reg_1184;
reg   [7:0] tmp_s_reg_1184_pp0_iter1_reg;
reg   [7:0] tmp_s_reg_1184_pp0_iter2_reg;
reg   [7:0] tmp_s_reg_1184_pp0_iter3_reg;
reg   [7:0] tmp_s_reg_1184_pp0_iter4_reg;
reg   [7:0] tmp_s_reg_1184_pp0_iter5_reg;
reg   [7:0] tmp_s_reg_1184_pp0_iter6_reg;
reg   [7:0] tmp_s_reg_1184_pp0_iter7_reg;
wire   [13:0] trunc_ln41_fu_494_p1;
reg   [13:0] trunc_ln41_reg_1189;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_state24_pp0_stage3_iter4;
wire    ap_block_state29_pp0_stage3_iter5;
wire    ap_block_state34_pp0_stage3_iter6;
wire    ap_block_state39_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
reg   [13:0] trunc_ln41_reg_1189_pp0_iter4_reg;
reg   [13:0] trunc_ln41_reg_1189_pp0_iter5_reg;
wire   [13:0] trunc_ln42_fu_504_p1;
reg   [13:0] trunc_ln42_reg_1195;
reg   [13:0] trunc_ln42_reg_1195_pp0_iter4_reg;
reg   [13:0] trunc_ln42_reg_1195_pp0_iter5_reg;
wire   [13:0] trunc_ln43_fu_514_p1;
reg   [13:0] trunc_ln43_reg_1201;
wire    ap_block_pp0_stage4_11001;
reg   [13:0] trunc_ln43_reg_1201_pp0_iter4_reg;
reg   [13:0] trunc_ln43_reg_1201_pp0_iter5_reg;
wire   [14:0] grp_fu_479_p2;
reg   [14:0] urem_ln47_reg_1207;
reg   [14:0] urem_ln47_reg_1207_pp0_iter4_reg;
reg   [14:0] urem_ln47_reg_1207_pp0_iter5_reg;
reg   [14:0] urem_ln47_reg_1207_pp0_iter6_reg;
wire   [13:0] trunc_ln47_fu_524_p1;
reg   [13:0] trunc_ln47_reg_1212;
reg   [13:0] trunc_ln47_reg_1212_pp0_iter4_reg;
reg   [13:0] trunc_ln47_reg_1212_pp0_iter5_reg;
reg   [1:0] tmp_18_reg_1238;
wire  signed [30:0] grp_fu_1059_p2;
reg   [30:0] mul_ln47_reg_1248;
wire   [5:0] shl_ln41_1_fu_593_p3;
reg   [5:0] shl_ln41_1_reg_1292;
wire   [31:0] trunc_ln41_1_fu_611_p1;
reg   [31:0] trunc_ln41_1_reg_1297;
reg   [0:0] tmp_17_reg_1302;
reg   [12:0] M_0_addr_4_reg_1317;
reg   [12:0] M_1_addr_4_reg_1322;
reg   [13:0] ptr_addr_reg_1327;
wire   [0:0] addr_cmp_fu_641_p2;
reg   [0:0] addr_cmp_reg_1332;
wire   [31:0] trunc_ln41_2_fu_661_p1;
reg   [31:0] trunc_ln41_2_reg_1337;
wire   [31:0] trunc_ln42_1_fu_682_p1;
reg   [31:0] trunc_ln42_1_reg_1342;
wire   [31:0] trunc_ln42_2_fu_696_p1;
reg   [31:0] trunc_ln42_2_reg_1347;
reg   [0:0] tmp_19_reg_1352;
reg   [0:0] tmp_21_reg_1357;
reg   [63:0] M_0_load_4_reg_1362;
reg   [15:0] ptr_load_reg_1367;
wire   [31:0] up_left_fu_756_p2;
reg   [31:0] up_left_reg_1372;
wire   [31:0] up_fu_779_p2;
reg   [31:0] up_reg_1378;
wire   [31:0] left_fu_829_p2;
reg   [31:0] left_reg_1384;
wire   [0:0] icmp_ln45_fu_835_p2;
reg   [0:0] icmp_ln45_reg_1390;
wire   [15:0] zext_ln50_fu_1001_p1;
reg   [15:0] zext_ln50_reg_1395;
wire   [15:0] shl_ln50_1_fu_1009_p2;
reg   [15:0] shl_ln50_1_reg_1400;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln32_1_fu_352_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln41_2_fu_571_p1;
wire   [63:0] zext_ln42_2_fu_580_p1;
wire   [63:0] zext_ln43_2_fu_622_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln47_3_fu_632_p1;
wire   [63:0] zext_ln47_1_fu_628_p1;
reg   [63:0] reuse_addr_reg_fu_134;
wire    ap_loop_init;
reg   [15:0] reuse_reg_fu_138;
wire   [15:0] or_ln50_1_fu_1041_p2;
reg   [7:0] a_idx_fu_142;
wire   [7:0] add_ln31_fu_484_p2;
reg   [7:0] ap_sig_allocacmp_a_idx_5;
wire    ap_block_pp0_stage4;
wire   [7:0] add_ln32_fu_336_p2;
wire   [4:0] trunc_ln32_2_fu_332_p1;
wire   [4:0] add_ln32_1_fu_346_p2;
wire   [14:0] zext_ln32_fu_342_p1;
wire   [14:0] grp_fu_364_p0;
wire   [14:0] zext_ln31_fu_328_p1;
wire   [14:0] grp_fu_376_p0;
wire   [5:0] trunc_ln32_1_fu_397_p1;
wire   [6:0] trunc_ln32_fu_394_p1;
wire   [6:0] add_ln32_3_fu_406_p2;
wire   [5:0] add_ln32_2_fu_400_p2;
wire   [0:0] tmp_13_fu_420_p3;
wire   [3:0] and_ln32_1_fu_428_p3;
wire   [15:0] zext_ln32_2_fu_436_p1;
wire   [15:0] lshr_ln32_fu_440_p2;
wire   [15:0] zext_ln32_3_fu_450_p1;
wire   [15:0] lshr_ln32_1_fu_454_p2;
wire   [7:0] tmp_s_fu_464_p1;
wire   [7:0] tmp_s_fu_464_p2;
wire   [0:0] tmp_s_fu_464_p3;
wire   [13:0] grp_fu_364_p2;
wire    ap_block_pp0_stage3;
wire   [13:0] grp_fu_498_p0;
wire   [13:0] grp_fu_376_p2;
wire   [13:0] grp_fu_508_p0;
wire   [13:0] grp_fu_474_p2;
wire   [13:0] grp_fu_518_p0;
wire   [13:0] grp_fu_528_p0;
wire   [30:0] tmp_18_fu_546_p1;
wire  signed [30:0] grp_fu_1052_p2;
wire   [30:0] tmp_22_fu_561_p1;
wire   [13:0] grp_fu_498_p2;
wire   [13:0] grp_fu_508_p2;
wire   [28:0] tmp_15_fu_586_p1;
wire  signed [28:0] grp_fu_1066_p2;
wire   [0:0] tmp_15_fu_586_p3;
wire   [63:0] zext_ln41_3_fu_601_p1;
wire   [63:0] lshr_ln41_fu_605_p2;
wire   [28:0] tmp_17_fu_615_p1;
wire  signed [28:0] grp_fu_1073_p2;
wire   [13:0] grp_fu_518_p2;
wire   [13:0] grp_fu_528_p2;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln41_4_fu_652_p1;
wire   [63:0] lshr_ln41_1_fu_655_p2;
wire   [5:0] shl_ln42_1_fu_665_p3;
wire   [63:0] zext_ln42_3_fu_672_p1;
wire   [63:0] lshr_ln42_fu_676_p2;
wire   [63:0] zext_ln42_4_fu_686_p1;
wire   [63:0] lshr_ln42_1_fu_690_p2;
wire   [28:0] tmp_19_fu_700_p1;
wire  signed [28:0] grp_fu_1080_p2;
wire   [28:0] tmp_21_fu_707_p1;
wire  signed [28:0] grp_fu_1087_p2;
wire   [15:0] zext_ln32_4_fu_714_p1;
wire   [15:0] lshr_ln32_2_fu_717_p2;
wire   [7:0] trunc_ln32_5_fu_722_p1;
wire   [0:0] icmp_ln32_fu_726_p2;
wire   [30:0] tmp_14_fu_739_p1;
wire  signed [30:0] grp_fu_1094_p2;
wire   [1:0] tmp_9_fu_748_p3;
wire   [31:0] tmp_9_fu_748_p4;
wire   [31:0] up_left_fu_756_p1;
wire   [30:0] tmp_16_fu_762_p1;
wire  signed [30:0] grp_fu_1101_p2;
wire   [1:0] tmp_10_fu_771_p3;
wire   [31:0] tmp_10_fu_771_p4;
wire   [5:0] shl_ln43_1_fu_785_p3;
wire   [63:0] zext_ln43_3_fu_792_p1;
wire   [63:0] lshr_ln43_fu_796_p2;
wire   [63:0] zext_ln43_4_fu_806_p1;
wire   [63:0] lshr_ln43_1_fu_810_p2;
wire   [31:0] tmp_20_fu_820_p1;
wire   [31:0] tmp_20_fu_820_p2;
wire   [31:0] tmp_20_fu_820_p4;
wire   [31:0] select_ln45_fu_841_p3;
wire   [0:0] icmp_ln45_1_fu_846_p2;
wire   [5:0] shl_ln47_1_fu_858_p3;
wire   [63:0] zext_ln47_6_fu_865_p1;
wire   [63:0] shl_ln47_3_fu_869_p2;
wire   [63:0] xor_ln47_1_fu_875_p2;
wire   [31:0] max_fu_851_p3;
wire   [63:0] zext_ln47_7_fu_886_p1;
wire   [63:0] and_ln47_1_fu_881_p2;
wire   [63:0] shl_ln47_4_fu_890_p2;
wire   [63:0] zext_ln47_4_fu_903_p1;
wire   [63:0] shl_ln47_fu_907_p2;
wire   [63:0] xor_ln47_fu_913_p2;
wire   [63:0] zext_ln47_5_fu_925_p1;
wire   [63:0] and_ln47_fu_919_p2;
wire   [63:0] shl_ln47_2_fu_929_p2;
wire   [0:0] icmp_ln48_fu_942_p2;
wire   [0:0] icmp_ln50_fu_954_p2;
wire   [0:0] xor_ln48_fu_959_p2;
wire   [0:0] and_ln50_fu_965_p2;
wire   [0:0] or_ln50_fu_979_p2;
wire   [6:0] select_ln50_fu_971_p3;
wire   [0:0] tmp_23_fu_947_p3;
wire   [3:0] tmp_24_fu_993_p3;
wire   [6:0] select_ln50_1_fu_985_p3;
wire   [15:0] zext_ln50_1_fu_1005_p1;
wire   [15:0] shl_ln50_fu_1024_p2;
wire   [15:0] reuse_select_fu_1018_p3;
wire   [15:0] xor_ln50_fu_1029_p2;
wire   [15:0] and_ln50_1_fu_1035_p2;
wire   [14:0] grp_fu_1052_p0;
wire   [15:0] grp_fu_1052_p1;
wire   [14:0] grp_fu_1059_p0;
wire   [15:0] grp_fu_1059_p1;
wire   [13:0] grp_fu_1066_p0;
wire   [14:0] grp_fu_1066_p1;
wire   [13:0] grp_fu_1073_p0;
wire   [14:0] grp_fu_1073_p1;
wire   [13:0] grp_fu_1080_p0;
wire   [14:0] grp_fu_1080_p1;
wire   [13:0] grp_fu_1087_p0;
wire   [14:0] grp_fu_1087_p1;
wire   [14:0] grp_fu_1094_p0;
wire   [15:0] grp_fu_1094_p1;
wire   [14:0] grp_fu_1101_p0;
wire   [15:0] grp_fu_1101_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_condition_exit_pp0_iter7_stage0;
reg    ap_idle_pp0_0to6;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_1to8;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [30:0] grp_fu_1052_p00;
wire   [30:0] grp_fu_1059_p00;
wire   [28:0] grp_fu_1066_p00;
wire   [28:0] grp_fu_1073_p00;
wire   [28:0] grp_fu_1080_p00;
wire   [28:0] grp_fu_1087_p00;
wire   [30:0] grp_fu_1094_p00;
wire   [30:0] grp_fu_1101_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

needwun_urem_15ns_15ns_14_19_1 #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 14 ))
urem_15ns_15ns_14_19_1_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_364_p0),
    .din1(15'd8321),
    .ce(1'b1),
    .dout(grp_fu_364_p2)
);

needwun_urem_15ns_15ns_14_19_1 #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 14 ))
urem_15ns_15ns_14_19_1_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_376_p0),
    .din1(15'd8321),
    .ce(1'b1),
    .dout(grp_fu_376_p2)
);

needwun_mux_21_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 8 ))
mux_21_8_1_1_U55(
    .din0(tmp_s_fu_464_p1),
    .din1(tmp_s_fu_464_p2),
    .din2(tmp_s_fu_464_p3),
    .dout(tmp_s_fu_464_p4)
);

needwun_urem_15ns_15ns_14_19_1 #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 14 ))
urem_15ns_15ns_14_19_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln43_reg_1172),
    .din1(15'd8321),
    .ce(1'b1),
    .dout(grp_fu_474_p2)
);

needwun_urem_15ns_15ns_15_19_1 #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 15 ))
urem_15ns_15ns_15_19_1_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln47_reg_1178),
    .din1(15'd8321),
    .ce(1'b1),
    .dout(grp_fu_479_p2)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_498_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_498_p2)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_508_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_508_p2)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_518_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_518_p2)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_528_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_528_p2)
);

needwun_mux_22_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_22_32_1_1_U62(
    .din0(trunc_ln41_1_reg_1297),
    .din1(trunc_ln41_2_reg_1337),
    .din2(tmp_9_fu_748_p3),
    .dout(tmp_9_fu_748_p4)
);

needwun_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32ns_32_1_1_U63(
    .din0(tmp_9_fu_748_p4),
    .din1(up_left_fu_756_p1),
    .dout(up_left_fu_756_p2)
);

needwun_mux_22_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_22_32_1_1_U64(
    .din0(trunc_ln42_1_reg_1342),
    .din1(trunc_ln42_2_reg_1347),
    .din2(tmp_10_fu_771_p3),
    .dout(tmp_10_fu_771_p4)
);

needwun_add_32ns_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32s_32_1_1_U65(
    .din0(tmp_10_fu_771_p4),
    .din1(32'd4294967295),
    .dout(up_fu_779_p2)
);

needwun_mux_22_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_22_32_1_1_U66(
    .din0(tmp_20_fu_820_p1),
    .din1(tmp_20_fu_820_p2),
    .din2(tmp_18_reg_1238),
    .dout(tmp_20_fu_820_p4)
);

needwun_add_32ns_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32s_32_1_1_U67(
    .din0(tmp_20_fu_820_p4),
    .din1(32'd4294967295),
    .dout(left_fu_829_p2)
);

needwun_mul_mul_15ns_16ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_mul_15ns_16ns_31_4_1_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1052_p0),
    .din1(grp_fu_1052_p1),
    .ce(1'b1),
    .dout(grp_fu_1052_p2)
);

needwun_mul_mul_15ns_16ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_mul_15ns_16ns_31_4_1_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1059_p0),
    .din1(grp_fu_1059_p1),
    .ce(1'b1),
    .dout(grp_fu_1059_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1066_p0),
    .din1(grp_fu_1066_p1),
    .ce(1'b1),
    .dout(grp_fu_1066_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1073_p0),
    .din1(grp_fu_1073_p1),
    .ce(1'b1),
    .dout(grp_fu_1073_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1080_p0),
    .din1(grp_fu_1080_p1),
    .ce(1'b1),
    .dout(grp_fu_1080_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1087_p0),
    .din1(grp_fu_1087_p1),
    .ce(1'b1),
    .dout(grp_fu_1087_p2)
);

needwun_mul_mul_15ns_16ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_mul_15ns_16ns_31_4_1_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1094_p0),
    .din1(grp_fu_1094_p1),
    .ce(1'b1),
    .dout(grp_fu_1094_p2)
);

needwun_mul_mul_15ns_16ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_mul_15ns_16ns_31_4_1_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1101_p0),
    .din1(grp_fu_1101_p1),
    .ce(1'b1),
    .dout(grp_fu_1101_p2)
);

needwun_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_idx_fu_142 <= 8'd1;
    end else if (((icmp_ln31_reg_1146 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_idx_fu_142 <= add_ln31_fu_484_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_condition_exit_pp0_iter7_stage0) & (ap_idle_pp0_0to6 == 1'b1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            reg_295 <= M_0_q1;
        end else if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            reg_295 <= M_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reuse_addr_reg_fu_134 <= 64'd18446744073709551615;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        reuse_addr_reg_fu_134 <= zext_ln47_1_fu_628_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_reg_fu_138 <= 16'd0;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            reuse_reg_fu_138 <= or_ln50_1_fu_1041_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_22_reg_1258 == 1'd0))) begin
        M_0_addr_4_reg_1317 <= zext_ln47_3_fu_632_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_22_reg_1258 == 1'd0))) begin
        M_0_load_4_reg_1362 <= M_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_22_reg_1258 == 1'd1))) begin
        M_1_addr_4_reg_1322 <= zext_ln47_3_fu_632_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_idx_5_reg_1139 <= ap_sig_allocacmp_a_idx_5;
        add_ln41_reg_1160_pp0_iter1_reg <= add_ln41_reg_1160;
        add_ln41_reg_1160_pp0_iter2_reg <= add_ln41_reg_1160_pp0_iter1_reg;
        add_ln41_reg_1160_pp0_iter3_reg <= add_ln41_reg_1160_pp0_iter2_reg;
        add_ln41_reg_1160_pp0_iter4_reg <= add_ln41_reg_1160_pp0_iter3_reg;
        add_ln41_reg_1160_pp0_iter5_reg <= add_ln41_reg_1160_pp0_iter4_reg;
        add_ln41_reg_1160_pp0_iter6_reg <= add_ln41_reg_1160_pp0_iter5_reg;
        add_ln42_reg_1166_pp0_iter1_reg <= add_ln42_reg_1166;
        add_ln42_reg_1166_pp0_iter2_reg <= add_ln42_reg_1166_pp0_iter1_reg;
        add_ln42_reg_1166_pp0_iter3_reg <= add_ln42_reg_1166_pp0_iter2_reg;
        add_ln42_reg_1166_pp0_iter4_reg <= add_ln42_reg_1166_pp0_iter3_reg;
        add_ln42_reg_1166_pp0_iter5_reg <= add_ln42_reg_1166_pp0_iter4_reg;
        add_ln42_reg_1166_pp0_iter6_reg <= add_ln42_reg_1166_pp0_iter5_reg;
        add_ln43_reg_1172_pp0_iter1_reg <= add_ln43_reg_1172;
        add_ln43_reg_1172_pp0_iter2_reg <= add_ln43_reg_1172_pp0_iter1_reg;
        add_ln43_reg_1172_pp0_iter3_reg <= add_ln43_reg_1172_pp0_iter2_reg;
        add_ln43_reg_1172_pp0_iter4_reg <= add_ln43_reg_1172_pp0_iter3_reg;
        add_ln43_reg_1172_pp0_iter5_reg <= add_ln43_reg_1172_pp0_iter4_reg;
        add_ln43_reg_1172_pp0_iter6_reg <= add_ln43_reg_1172_pp0_iter5_reg;
        add_ln47_reg_1178_pp0_iter1_reg <= add_ln47_reg_1178;
        add_ln47_reg_1178_pp0_iter2_reg <= add_ln47_reg_1178_pp0_iter1_reg;
        add_ln47_reg_1178_pp0_iter3_reg <= add_ln47_reg_1178_pp0_iter2_reg;
        add_ln47_reg_1178_pp0_iter4_reg <= add_ln47_reg_1178_pp0_iter3_reg;
        add_ln47_reg_1178_pp0_iter5_reg <= add_ln47_reg_1178_pp0_iter4_reg;
        add_ln47_reg_1178_pp0_iter6_reg <= add_ln47_reg_1178_pp0_iter5_reg;
        icmp_ln31_reg_1146 <= icmp_ln31_fu_322_p2;
        icmp_ln31_reg_1146_pp0_iter1_reg <= icmp_ln31_reg_1146;
        icmp_ln31_reg_1146_pp0_iter2_reg <= icmp_ln31_reg_1146_pp0_iter1_reg;
        icmp_ln31_reg_1146_pp0_iter3_reg <= icmp_ln31_reg_1146_pp0_iter2_reg;
        icmp_ln31_reg_1146_pp0_iter4_reg <= icmp_ln31_reg_1146_pp0_iter3_reg;
        icmp_ln31_reg_1146_pp0_iter5_reg <= icmp_ln31_reg_1146_pp0_iter4_reg;
        icmp_ln31_reg_1146_pp0_iter6_reg <= icmp_ln31_reg_1146_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln31_fu_322_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln41_reg_1160 <= add_ln41_fu_358_p2;
        add_ln42_reg_1166 <= add_ln42_fu_370_p2;
        add_ln43_reg_1172 <= add_ln43_fu_382_p2;
        add_ln47_reg_1178 <= add_ln47_fu_388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        addr_cmp_reg_1332 <= addr_cmp_fu_641_p2;
        ptr_addr_reg_1327 <= zext_ln47_1_fu_628_p1;
        shl_ln41_1_reg_1292[5] <= shl_ln41_1_fu_593_p3[5];
        tmp_17_reg_1302 <= tmp_17_fu_615_p1[32'd27];
        tmp_s_reg_1184_pp0_iter1_reg <= tmp_s_reg_1184;
        tmp_s_reg_1184_pp0_iter2_reg <= tmp_s_reg_1184_pp0_iter1_reg;
        tmp_s_reg_1184_pp0_iter3_reg <= tmp_s_reg_1184_pp0_iter2_reg;
        tmp_s_reg_1184_pp0_iter4_reg <= tmp_s_reg_1184_pp0_iter3_reg;
        tmp_s_reg_1184_pp0_iter5_reg <= tmp_s_reg_1184_pp0_iter4_reg;
        tmp_s_reg_1184_pp0_iter6_reg <= tmp_s_reg_1184_pp0_iter5_reg;
        tmp_s_reg_1184_pp0_iter7_reg <= tmp_s_reg_1184_pp0_iter6_reg;
        trunc_ln41_1_reg_1297 <= trunc_ln41_1_fu_611_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln45_reg_1390 <= icmp_ln45_fu_835_p2;
        left_reg_1384 <= left_fu_829_p2;
        trunc_ln41_reg_1189 <= trunc_ln41_fu_494_p1;
        trunc_ln41_reg_1189_pp0_iter4_reg <= trunc_ln41_reg_1189;
        trunc_ln41_reg_1189_pp0_iter5_reg <= trunc_ln41_reg_1189_pp0_iter4_reg;
        trunc_ln42_reg_1195 <= trunc_ln42_fu_504_p1;
        trunc_ln42_reg_1195_pp0_iter4_reg <= trunc_ln42_reg_1195;
        trunc_ln42_reg_1195_pp0_iter5_reg <= trunc_ln42_reg_1195_pp0_iter4_reg;
        up_left_reg_1372 <= up_left_fu_756_p2;
        up_reg_1378 <= up_fu_779_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_ln47_reg_1248 <= grp_fu_1059_p2;
        shl_ln50_1_reg_1400 <= shl_ln50_1_fu_1009_p2;
        tmp_18_reg_1238 <= {{tmp_18_fu_546_p1[30:29]}};
        tmp_22_reg_1258 <= tmp_22_fu_561_p1[32'd29];
        trunc_ln43_reg_1201 <= trunc_ln43_fu_514_p1;
        trunc_ln43_reg_1201_pp0_iter4_reg <= trunc_ln43_reg_1201;
        trunc_ln43_reg_1201_pp0_iter5_reg <= trunc_ln43_reg_1201_pp0_iter4_reg;
        trunc_ln47_reg_1212 <= trunc_ln47_fu_524_p1;
        trunc_ln47_reg_1212_pp0_iter4_reg <= trunc_ln47_reg_1212;
        trunc_ln47_reg_1212_pp0_iter5_reg <= trunc_ln47_reg_1212_pp0_iter4_reg;
        urem_ln47_reg_1207 <= grp_fu_479_p2;
        urem_ln47_reg_1207_pp0_iter4_reg <= urem_ln47_reg_1207;
        urem_ln47_reg_1207_pp0_iter5_reg <= urem_ln47_reg_1207_pp0_iter4_reg;
        urem_ln47_reg_1207_pp0_iter6_reg <= urem_ln47_reg_1207_pp0_iter5_reg;
        zext_ln50_reg_1395[3] <= zext_ln50_fu_1001_p1[3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ptr_load_reg_1367 <= ptr_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_291 <= M_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_22_reg_1258 == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_300 <= M_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_19_reg_1352 <= tmp_19_fu_700_p1[32'd27];
        tmp_21_reg_1357 <= tmp_21_fu_707_p1[32'd27];
        trunc_ln41_2_reg_1337 <= trunc_ln41_2_fu_661_p1;
        trunc_ln42_1_reg_1342 <= trunc_ln42_1_fu_682_p1;
        trunc_ln42_2_reg_1347 <= trunc_ln42_2_fu_696_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1146 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_s_reg_1184 <= tmp_s_fu_464_p4;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            M_0_address0 = M_0_addr_4_reg_1317;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            M_0_address0 = zext_ln47_3_fu_632_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            M_0_address0 = zext_ln42_2_fu_580_p1;
        end else begin
            M_0_address0 = 'bx;
        end
    end else begin
        M_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            M_0_address1 = zext_ln43_2_fu_622_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            M_0_address1 = zext_ln41_2_fu_571_p1;
        end else begin
            M_0_address1 = 'bx;
        end
    end else begin
        M_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        M_0_ce0 = 1'b1;
    end else begin
        M_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        M_0_ce1 = 1'b1;
    end else begin
        M_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_22_reg_1258 == 1'd0))) begin
        M_0_we0 = 1'b1;
    end else begin
        M_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            M_1_address0 = M_1_addr_4_reg_1322;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            M_1_address0 = zext_ln47_3_fu_632_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            M_1_address0 = zext_ln42_2_fu_580_p1;
        end else begin
            M_1_address0 = 'bx;
        end
    end else begin
        M_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            M_1_address1 = zext_ln43_2_fu_622_p1;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            M_1_address1 = zext_ln41_2_fu_571_p1;
        end else begin
            M_1_address1 = 'bx;
        end
    end else begin
        M_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        M_1_ce0 = 1'b1;
    end else begin
        M_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        M_1_ce1 = 1'b1;
    end else begin
        M_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (tmp_22_reg_1258 == 1'd1))) begin
        M_1_we0 = 1'b1;
    end else begin
        M_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        SEQA_0_ce0 = 1'b1;
    end else begin
        SEQA_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        SEQA_1_ce0 = 1'b1;
    end else begin
        SEQA_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_1146 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln31_reg_1146_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter7_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter7_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to8 = 1'b1;
    end else begin
        ap_idle_pp0_1to8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_a_idx_5 = 8'd1;
    end else begin
        ap_sig_allocacmp_a_idx_5 = a_idx_fu_142;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ptr_address0 = ptr_addr_reg_1327;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ptr_address0 = zext_ln47_1_fu_628_p1;
    end else begin
        ptr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ptr_ce0 = 1'b1;
    end else begin
        ptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ptr_we0 = 1'b1;
    end else begin
        ptr_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((1'b1 == ap_condition_exit_pp0_iter7_stage0) & (ap_idle_pp0_0to6 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to8 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign M_0_d0 = (shl_ln47_4_fu_890_p2 | and_ln47_1_fu_881_p2);

assign M_1_d0 = (shl_ln47_2_fu_929_p2 | and_ln47_fu_919_p2);

assign SEQA_0_address0 = zext_ln32_1_fu_352_p1;

assign SEQA_1_address0 = zext_ln32_1_fu_352_p1;

assign add_ln31_fu_484_p2 = (a_idx_5_reg_1139 + 8'd1);

assign add_ln32_1_fu_346_p2 = ($signed(trunc_ln32_2_fu_332_p1) + $signed(5'd31));

assign add_ln32_2_fu_400_p2 = ($signed(trunc_ln32_1_fu_397_p1) + $signed(6'd63));

assign add_ln32_3_fu_406_p2 = ($signed(trunc_ln32_fu_394_p1) + $signed(7'd127));

assign add_ln32_fu_336_p2 = ($signed(ap_sig_allocacmp_a_idx_5) + $signed(8'd255));

assign add_ln41_fu_358_p2 = (zext_ln32_fu_342_p1 + empty_16);

assign add_ln42_fu_370_p2 = (zext_ln31_fu_328_p1 + empty_16);

assign add_ln43_fu_382_p2 = (zext_ln32_fu_342_p1 + empty);

assign add_ln47_fu_388_p2 = (zext_ln31_fu_328_p1 + empty);

assign addr_cmp_fu_641_p2 = ((reuse_addr_reg_fu_134 == zext_ln47_1_fu_628_p1) ? 1'b1 : 1'b0);

assign and_ln32_1_fu_428_p3 = {{tmp_13_fu_420_p3}, {3'd0}};

assign and_ln47_1_fu_881_p2 = (xor_ln47_1_fu_875_p2 & M_0_load_4_reg_1362);

assign and_ln47_fu_919_p2 = (xor_ln47_fu_913_p2 & reg_300);

assign and_ln50_1_fu_1035_p2 = (xor_ln50_fu_1029_p2 & reuse_select_fu_1018_p3);

assign and_ln50_fu_965_p2 = (xor_ln48_fu_959_p2 & icmp_ln50_fu_954_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign grp_fu_1052_p0 = grp_fu_1052_p00;

assign grp_fu_1052_p00 = add_ln43_reg_1172_pp0_iter6_reg;

assign grp_fu_1052_p1 = 31'd64520;

assign grp_fu_1059_p0 = grp_fu_1059_p00;

assign grp_fu_1059_p00 = add_ln47_reg_1178_pp0_iter6_reg;

assign grp_fu_1059_p1 = 31'd64520;

assign grp_fu_1066_p0 = grp_fu_1066_p00;

assign grp_fu_1066_p00 = trunc_ln41_reg_1189_pp0_iter5_reg;

assign grp_fu_1066_p1 = 29'd32257;

assign grp_fu_1073_p0 = grp_fu_1073_p00;

assign grp_fu_1073_p00 = trunc_ln42_reg_1195_pp0_iter5_reg;

assign grp_fu_1073_p1 = 29'd32257;

assign grp_fu_1080_p0 = grp_fu_1080_p00;

assign grp_fu_1080_p00 = trunc_ln43_reg_1201_pp0_iter5_reg;

assign grp_fu_1080_p1 = 29'd32257;

assign grp_fu_1087_p0 = grp_fu_1087_p00;

assign grp_fu_1087_p00 = trunc_ln47_reg_1212_pp0_iter5_reg;

assign grp_fu_1087_p1 = 29'd32257;

assign grp_fu_1094_p0 = grp_fu_1094_p00;

assign grp_fu_1094_p00 = add_ln41_reg_1160_pp0_iter6_reg;

assign grp_fu_1094_p1 = 31'd64520;

assign grp_fu_1101_p0 = grp_fu_1101_p00;

assign grp_fu_1101_p00 = add_ln42_reg_1166_pp0_iter6_reg;

assign grp_fu_1101_p1 = 31'd64520;

assign grp_fu_364_p0 = (zext_ln32_fu_342_p1 + empty_16);

assign grp_fu_376_p0 = (zext_ln31_fu_328_p1 + empty_16);

assign grp_fu_498_p0 = grp_fu_364_p2[13:0];

assign grp_fu_508_p0 = grp_fu_376_p2[13:0];

assign grp_fu_518_p0 = grp_fu_474_p2[13:0];

assign grp_fu_528_p0 = grp_fu_479_p2[13:0];

assign icmp_ln31_fu_322_p2 = ((ap_sig_allocacmp_a_idx_5 == 8'd129) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_726_p2 = ((tmp_s_reg_1184_pp0_iter7_reg == trunc_ln32_5_fu_722_p1) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_846_p2 = (($signed(up_left_reg_1372) > $signed(select_ln45_fu_841_p3)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_835_p2 = (($signed(up_fu_779_p2) > $signed(left_fu_829_p2)) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_942_p2 = ((left_reg_1384 == max_fu_851_p3) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_954_p2 = ((max_fu_851_p3 == up_reg_1378) ? 1'b1 : 1'b0);

assign lshr_ln32_1_fu_454_p2 = SEQA_1_q0 >> zext_ln32_3_fu_450_p1;

assign lshr_ln32_2_fu_717_p2 = SEQB_load_3 >> zext_ln32_4_fu_714_p1;

assign lshr_ln32_fu_440_p2 = SEQA_0_q0 >> zext_ln32_2_fu_436_p1;

assign lshr_ln41_1_fu_655_p2 = reg_291 >> zext_ln41_4_fu_652_p1;

assign lshr_ln41_fu_605_p2 = M_0_q1 >> zext_ln41_3_fu_601_p1;

assign lshr_ln42_1_fu_690_p2 = reg_300 >> zext_ln42_4_fu_686_p1;

assign lshr_ln42_fu_676_p2 = reg_295 >> zext_ln42_3_fu_672_p1;

assign lshr_ln43_1_fu_810_p2 = reg_291 >> zext_ln43_4_fu_806_p1;

assign lshr_ln43_fu_796_p2 = reg_295 >> zext_ln43_3_fu_792_p1;

assign max_fu_851_p3 = ((icmp_ln45_1_fu_846_p2[0:0] == 1'b1) ? up_left_reg_1372 : select_ln45_fu_841_p3);

assign or_ln50_1_fu_1041_p2 = (shl_ln50_1_reg_1400 | and_ln50_1_fu_1035_p2);

assign or_ln50_fu_979_p2 = (icmp_ln48_fu_942_p2 | and_ln50_fu_965_p2);

assign ptr_d0 = (shl_ln50_1_reg_1400 | and_ln50_1_fu_1035_p2);

assign reuse_select_fu_1018_p3 = ((addr_cmp_reg_1332[0:0] == 1'b1) ? reuse_reg_fu_138 : ptr_load_reg_1367);

assign select_ln45_fu_841_p3 = ((icmp_ln45_reg_1390[0:0] == 1'b1) ? up_reg_1378 : left_reg_1384);

assign select_ln50_1_fu_985_p3 = ((or_ln50_fu_979_p2[0:0] == 1'b1) ? select_ln50_fu_971_p3 : 7'd92);

assign select_ln50_fu_971_p3 = ((and_ln50_fu_965_p2[0:0] == 1'b1) ? 7'd94 : 7'd60);

assign shl_ln41_1_fu_593_p3 = {{tmp_15_fu_586_p3}, {5'd0}};

assign shl_ln42_1_fu_665_p3 = {{tmp_17_reg_1302}, {5'd0}};

assign shl_ln43_1_fu_785_p3 = {{tmp_19_reg_1352}, {5'd0}};

assign shl_ln47_1_fu_858_p3 = {{tmp_21_reg_1357}, {5'd0}};

assign shl_ln47_2_fu_929_p2 = zext_ln47_5_fu_925_p1 << zext_ln47_4_fu_903_p1;

assign shl_ln47_3_fu_869_p2 = 64'd4294967295 << zext_ln47_6_fu_865_p1;

assign shl_ln47_4_fu_890_p2 = zext_ln47_7_fu_886_p1 << zext_ln47_6_fu_865_p1;

assign shl_ln47_fu_907_p2 = 64'd4294967295 << zext_ln47_4_fu_903_p1;

assign shl_ln50_1_fu_1009_p2 = zext_ln50_1_fu_1005_p1 << zext_ln50_fu_1001_p1;

assign shl_ln50_fu_1024_p2 = 16'd255 << zext_ln50_reg_1395;

assign tmp_10_fu_771_p3 = {{tmp_16_fu_762_p1[30:29]}};

assign tmp_13_fu_420_p3 = add_ln32_2_fu_400_p2[32'd5];

assign tmp_14_fu_739_p1 = grp_fu_1094_p2;

assign tmp_15_fu_586_p1 = grp_fu_1066_p2;

assign tmp_15_fu_586_p3 = tmp_15_fu_586_p1[32'd27];

assign tmp_16_fu_762_p1 = grp_fu_1101_p2;

assign tmp_17_fu_615_p1 = grp_fu_1073_p2;

assign tmp_18_fu_546_p1 = grp_fu_1052_p2;

assign tmp_19_fu_700_p1 = grp_fu_1080_p2;

assign tmp_20_fu_820_p1 = lshr_ln43_fu_796_p2[31:0];

assign tmp_20_fu_820_p2 = lshr_ln43_1_fu_810_p2[31:0];

assign tmp_21_fu_707_p1 = grp_fu_1087_p2;

assign tmp_22_fu_561_p1 = grp_fu_1059_p2;

assign tmp_23_fu_947_p3 = mul_ln47_reg_1248[32'd29];

assign tmp_24_fu_993_p3 = {{tmp_23_fu_947_p3}, {3'd0}};

assign tmp_9_fu_748_p3 = {{tmp_14_fu_739_p1[30:29]}};

assign tmp_s_fu_464_p1 = lshr_ln32_fu_440_p2[7:0];

assign tmp_s_fu_464_p2 = lshr_ln32_1_fu_454_p2[7:0];

assign tmp_s_fu_464_p3 = add_ln32_3_fu_406_p2[32'd6];

assign trunc_ln32_1_fu_397_p1 = a_idx_5_reg_1139[5:0];

assign trunc_ln32_2_fu_332_p1 = ap_sig_allocacmp_a_idx_5[4:0];

assign trunc_ln32_5_fu_722_p1 = lshr_ln32_2_fu_717_p2[7:0];

assign trunc_ln32_fu_394_p1 = a_idx_5_reg_1139[6:0];

assign trunc_ln41_1_fu_611_p1 = lshr_ln41_fu_605_p2[31:0];

assign trunc_ln41_2_fu_661_p1 = lshr_ln41_1_fu_655_p2[31:0];

assign trunc_ln41_fu_494_p1 = grp_fu_364_p2[13:0];

assign trunc_ln42_1_fu_682_p1 = lshr_ln42_fu_676_p2[31:0];

assign trunc_ln42_2_fu_696_p1 = lshr_ln42_1_fu_690_p2[31:0];

assign trunc_ln42_fu_504_p1 = grp_fu_376_p2[13:0];

assign trunc_ln43_fu_514_p1 = grp_fu_474_p2[13:0];

assign trunc_ln47_fu_524_p1 = grp_fu_479_p2[13:0];

assign up_left_fu_756_p1 = ((icmp_ln32_fu_726_p2[0:0] == 1'b1) ? 32'd1 : 32'd4294967295);

assign xor_ln47_1_fu_875_p2 = (shl_ln47_3_fu_869_p2 ^ 64'd18446744073709551615);

assign xor_ln47_fu_913_p2 = (shl_ln47_fu_907_p2 ^ 64'd18446744073709551615);

assign xor_ln48_fu_959_p2 = (icmp_ln48_fu_942_p2 ^ 1'd1);

assign xor_ln50_fu_1029_p2 = (shl_ln50_fu_1024_p2 ^ 16'd65535);

assign zext_ln31_fu_328_p1 = ap_sig_allocacmp_a_idx_5;

assign zext_ln32_1_fu_352_p1 = add_ln32_1_fu_346_p2;

assign zext_ln32_2_fu_436_p1 = and_ln32_1_fu_428_p3;

assign zext_ln32_3_fu_450_p1 = and_ln32_1_fu_428_p3;

assign zext_ln32_4_fu_714_p1 = p_cast21;

assign zext_ln32_fu_342_p1 = add_ln32_fu_336_p2;

assign zext_ln41_2_fu_571_p1 = grp_fu_498_p2;

assign zext_ln41_3_fu_601_p1 = shl_ln41_1_fu_593_p3;

assign zext_ln41_4_fu_652_p1 = shl_ln41_1_reg_1292;

assign zext_ln42_2_fu_580_p1 = grp_fu_508_p2;

assign zext_ln42_3_fu_672_p1 = shl_ln42_1_fu_665_p3;

assign zext_ln42_4_fu_686_p1 = shl_ln42_1_fu_665_p3;

assign zext_ln43_2_fu_622_p1 = grp_fu_518_p2;

assign zext_ln43_3_fu_792_p1 = shl_ln43_1_fu_785_p3;

assign zext_ln43_4_fu_806_p1 = shl_ln43_1_fu_785_p3;

assign zext_ln47_1_fu_628_p1 = urem_ln47_reg_1207_pp0_iter6_reg;

assign zext_ln47_3_fu_632_p1 = grp_fu_528_p2;

assign zext_ln47_4_fu_903_p1 = shl_ln47_1_fu_858_p3;

assign zext_ln47_5_fu_925_p1 = max_fu_851_p3;

assign zext_ln47_6_fu_865_p1 = shl_ln47_1_fu_858_p3;

assign zext_ln47_7_fu_886_p1 = max_fu_851_p3;

assign zext_ln50_1_fu_1005_p1 = select_ln50_1_fu_985_p3;

assign zext_ln50_fu_1001_p1 = tmp_24_fu_993_p3;

always @ (posedge ap_clk) begin
    shl_ln41_1_reg_1292[4:0] <= 5'b00000;
    zext_ln50_reg_1395[2:0] <= 3'b000;
    zext_ln50_reg_1395[15:4] <= 12'b000000000000;
end

endmodule //needwun_needwun_Pipeline_fill_in1
