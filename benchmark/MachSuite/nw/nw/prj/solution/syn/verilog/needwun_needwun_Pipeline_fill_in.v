// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module needwun_needwun_Pipeline_fill_in (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ptr_address0,
        ptr_ce0,
        ptr_we0,
        ptr_d0,
        ptr_q0,
        M_0_address0,
        M_0_ce0,
        M_0_we0,
        M_0_d0,
        M_0_q0,
        M_0_address1,
        M_0_ce1,
        M_0_q1,
        SEQA_0_address0,
        SEQA_0_ce0,
        SEQA_0_q0,
        SEQA_1_address0,
        SEQA_1_ce0,
        SEQA_1_q0,
        SEQB_load,
        p_cast21,
        p_cast15,
        M_1_address0,
        M_1_ce0,
        M_1_we0,
        M_1_d0,
        M_1_q0,
        M_1_address1,
        M_1_ce1,
        M_1_q1,
        empty
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [13:0] ptr_address0;
output   ptr_ce0;
output   ptr_we0;
output  [15:0] ptr_d0;
input  [15:0] ptr_q0;
output  [12:0] M_0_address0;
output   M_0_ce0;
output   M_0_we0;
output  [63:0] M_0_d0;
input  [63:0] M_0_q0;
output  [12:0] M_0_address1;
output   M_0_ce1;
input  [63:0] M_0_q1;
output  [4:0] SEQA_0_address0;
output   SEQA_0_ce0;
input  [15:0] SEQA_0_q0;
output  [4:0] SEQA_1_address0;
output   SEQA_1_ce0;
input  [15:0] SEQA_1_q0;
input  [15:0] SEQB_load;
input  [3:0] p_cast21;
input  [13:0] p_cast15;
output  [12:0] M_1_address0;
output   M_1_ce0;
output   M_1_we0;
output  [63:0] M_1_d0;
input  [63:0] M_1_q0;
output  [12:0] M_1_address1;
output   M_1_ce1;
input  [63:0] M_1_q1;
input  [14:0] empty;

reg ap_idle;
reg[13:0] ptr_address0;
reg ptr_ce0;
reg ptr_we0;
reg[12:0] M_0_address0;
reg M_0_ce0;
reg M_0_we0;
reg[12:0] M_0_address1;
reg M_0_ce1;
reg SEQA_0_ce0;
reg SEQA_1_ce0;
reg[12:0] M_1_address0;
reg M_1_ce0;
reg M_1_we0;
reg[12:0] M_1_address1;
reg M_1_ce1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_state15_pp0_stage4_iter2;
wire    ap_block_state20_pp0_stage4_iter3;
wire    ap_block_state25_pp0_stage4_iter4;
wire    ap_block_state30_pp0_stage4_iter5;
wire    ap_block_state35_pp0_stage4_iter6;
wire    ap_block_state40_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_subdone;
reg   [0:0] icmp_ln31_reg_1163;
reg    ap_condition_exit_pp0_iter0_stage4;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] reg_295;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_state16_pp0_stage0_iter3;
wire    ap_block_state21_pp0_stage0_iter4;
wire    ap_block_state26_pp0_stage0_iter5;
wire    ap_block_state31_pp0_stage0_iter6;
wire    ap_block_state36_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_state12_pp0_stage1_iter2;
wire    ap_block_state17_pp0_stage1_iter3;
wire    ap_block_state22_pp0_stage1_iter4;
wire    ap_block_state27_pp0_stage1_iter5;
wire    ap_block_state32_pp0_stage1_iter6;
wire    ap_block_state37_pp0_stage1_iter7;
wire    ap_block_pp0_stage1_11001;
wire   [14:0] p_cast15_cast_fu_299_p1;
reg   [14:0] p_cast15_cast_reg_1150;
reg   [7:0] a_idx_reg_1156;
wire   [0:0] icmp_ln31_fu_321_p2;
wire   [14:0] zext_ln31_fu_327_p1;
reg   [14:0] zext_ln31_reg_1167;
wire   [14:0] zext_ln32_fu_341_p1;
reg   [14:0] zext_ln32_reg_1172;
wire   [14:0] add_ln43_fu_357_p2;
reg   [14:0] add_ln43_reg_1187;
reg   [14:0] add_ln43_reg_1187_pp0_iter1_reg;
reg   [14:0] add_ln43_reg_1187_pp0_iter2_reg;
reg   [14:0] add_ln43_reg_1187_pp0_iter3_reg;
reg   [14:0] add_ln43_reg_1187_pp0_iter4_reg;
reg   [14:0] add_ln43_reg_1187_pp0_iter5_reg;
reg   [14:0] add_ln43_reg_1187_pp0_iter6_reg;
wire   [14:0] add_ln47_fu_369_p2;
reg   [14:0] add_ln47_reg_1193;
reg   [14:0] add_ln47_reg_1193_pp0_iter1_reg;
reg   [14:0] add_ln47_reg_1193_pp0_iter2_reg;
reg   [14:0] add_ln47_reg_1193_pp0_iter3_reg;
reg   [14:0] add_ln47_reg_1193_pp0_iter4_reg;
reg   [14:0] add_ln47_reg_1193_pp0_iter5_reg;
reg   [14:0] add_ln47_reg_1193_pp0_iter6_reg;
wire   [7:0] tmp_5_fu_451_p4;
reg   [7:0] tmp_5_reg_1199;
reg   [7:0] tmp_5_reg_1199_pp0_iter1_reg;
reg   [7:0] tmp_5_reg_1199_pp0_iter2_reg;
reg   [7:0] tmp_5_reg_1199_pp0_iter3_reg;
reg   [7:0] tmp_5_reg_1199_pp0_iter4_reg;
reg   [7:0] tmp_5_reg_1199_pp0_iter5_reg;
reg   [7:0] tmp_5_reg_1199_pp0_iter6_reg;
reg   [7:0] tmp_5_reg_1199_pp0_iter7_reg;
wire   [14:0] add_ln41_fu_461_p2;
reg   [14:0] add_ln41_reg_1204;
reg   [14:0] add_ln41_reg_1204_pp0_iter1_reg;
reg   [14:0] add_ln41_reg_1204_pp0_iter2_reg;
reg   [14:0] add_ln41_reg_1204_pp0_iter3_reg;
reg   [14:0] add_ln41_reg_1204_pp0_iter4_reg;
reg   [14:0] add_ln41_reg_1204_pp0_iter5_reg;
wire   [13:0] select_ln41_fu_481_p3;
reg   [13:0] select_ln41_reg_1209;
reg   [13:0] select_ln41_reg_1209_pp0_iter1_reg;
reg   [13:0] select_ln41_reg_1209_pp0_iter2_reg;
reg   [13:0] select_ln41_reg_1209_pp0_iter3_reg;
reg   [13:0] select_ln41_reg_1209_pp0_iter4_reg;
reg   [13:0] select_ln41_reg_1209_pp0_iter5_reg;
wire   [14:0] add_ln42_fu_495_p2;
reg   [14:0] add_ln42_reg_1215;
reg   [14:0] add_ln42_reg_1215_pp0_iter1_reg;
reg   [14:0] add_ln42_reg_1215_pp0_iter2_reg;
reg   [14:0] add_ln42_reg_1215_pp0_iter3_reg;
reg   [14:0] add_ln42_reg_1215_pp0_iter4_reg;
reg   [14:0] add_ln42_reg_1215_pp0_iter5_reg;
wire   [13:0] select_ln42_fu_515_p3;
reg   [13:0] select_ln42_reg_1220;
reg   [13:0] select_ln42_reg_1220_pp0_iter1_reg;
reg   [13:0] select_ln42_reg_1220_pp0_iter2_reg;
reg   [13:0] select_ln42_reg_1220_pp0_iter3_reg;
reg   [13:0] select_ln42_reg_1220_pp0_iter4_reg;
reg   [13:0] select_ln42_reg_1220_pp0_iter5_reg;
wire   [13:0] grp_fu_489_p2;
reg   [13:0] urem_ln41_reg_1226;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_state14_pp0_stage3_iter2;
wire    ap_block_state19_pp0_stage3_iter3;
wire    ap_block_state24_pp0_stage3_iter4;
wire    ap_block_state29_pp0_stage3_iter5;
wire    ap_block_state34_pp0_stage3_iter6;
wire    ap_block_state39_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
reg   [13:0] urem_ln41_reg_1226_pp0_iter4_reg;
reg   [13:0] urem_ln41_reg_1226_pp0_iter5_reg;
reg   [13:0] urem_ln41_reg_1226_pp0_iter6_reg;
wire   [13:0] grp_fu_523_p2;
reg   [13:0] urem_ln42_reg_1231;
reg   [13:0] urem_ln42_reg_1231_pp0_iter4_reg;
reg   [13:0] urem_ln42_reg_1231_pp0_iter5_reg;
reg   [13:0] urem_ln42_reg_1231_pp0_iter6_reg;
wire   [13:0] trunc_ln43_fu_539_p1;
reg   [13:0] trunc_ln43_reg_1236;
reg   [13:0] trunc_ln43_reg_1236_pp0_iter4_reg;
reg   [13:0] trunc_ln43_reg_1236_pp0_iter5_reg;
wire   [14:0] grp_fu_375_p2;
reg   [14:0] urem_ln47_reg_1242;
reg   [14:0] urem_ln47_reg_1242_pp0_iter4_reg;
reg   [14:0] urem_ln47_reg_1242_pp0_iter5_reg;
reg   [14:0] urem_ln47_reg_1242_pp0_iter6_reg;
wire   [13:0] trunc_ln47_fu_549_p1;
reg   [13:0] trunc_ln47_reg_1247;
reg   [13:0] trunc_ln47_reg_1247_pp0_iter4_reg;
reg   [13:0] trunc_ln47_reg_1247_pp0_iter5_reg;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_state13_pp0_stage2_iter2;
wire    ap_block_state18_pp0_stage2_iter3;
wire    ap_block_state23_pp0_stage2_iter4;
wire    ap_block_state28_pp0_stage2_iter5;
wire    ap_block_state33_pp0_stage2_iter6;
wire    ap_block_state38_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
reg   [1:0] tmp_27_reg_1283;
reg   [0:0] tmp_28_reg_1288;
wire    ap_block_pp0_stage4_11001;
reg   [1:0] tmp_29_reg_1313;
reg   [0:0] tmp_30_reg_1318;
wire   [31:0] tmp_9_fu_660_p4;
reg   [31:0] tmp_9_reg_1333;
wire   [5:0] shl_ln2_fu_669_p3;
reg   [5:0] shl_ln2_reg_1338;
wire   [31:0] trunc_ln42_3_fu_686_p1;
reg   [31:0] trunc_ln42_3_reg_1343;
reg   [1:0] tmp_31_reg_1348;
wire   [0:0] tmp_33_fu_705_p3;
reg   [0:0] tmp_33_reg_1363;
reg   [12:0] M_0_addr_reg_1368;
reg   [12:0] M_1_addr_4_reg_1373;
reg   [13:0] ptr_addr_reg_1378;
wire   [0:0] addr_cmp_fu_725_p2;
reg   [0:0] addr_cmp_reg_1383;
wire   [31:0] tmp_11_fu_749_p4;
reg   [31:0] tmp_11_reg_1388;
reg   [0:0] tmp_32_reg_1393;
reg   [63:0] M_0_load_4_reg_1398;
reg   [0:0] tmp_34_reg_1403;
reg   [63:0] M_0_load_reg_1408;
reg   [63:0] M_1_load_4_reg_1413;
reg   [15:0] ptr_load_reg_1418;
wire   [31:0] up_left_fu_796_p2;
reg   [31:0] up_left_reg_1423;
wire   [31:0] up_fu_801_p2;
reg   [31:0] up_reg_1429;
wire   [31:0] left_fu_849_p2;
reg   [31:0] left_reg_1435;
wire   [0:0] icmp_ln45_fu_855_p2;
reg   [0:0] icmp_ln45_reg_1441;
wire   [15:0] zext_ln50_fu_1012_p1;
reg   [15:0] zext_ln50_reg_1446;
wire   [15:0] shl_ln50_2_fu_1020_p2;
reg   [15:0] shl_ln50_2_reg_1451;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln32_2_fu_351_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln41_2_fu_599_p1;
wire    ap_block_pp0_stage4;
wire   [63:0] zext_ln42_2_fu_620_p1;
wire   [63:0] zext_ln43_2_fu_699_p1;
wire   [63:0] zext_ln47_4_fu_716_p1;
wire   [63:0] zext_ln47_1_fu_712_p1;
reg   [63:0] reuse_addr_reg_fu_138;
wire    ap_loop_init;
reg   [15:0] reuse_reg_fu_142;
wire   [15:0] or_ln50_2_fu_1052_p2;
reg   [7:0] a_idx_2_fu_146;
wire   [7:0] add_ln31_fu_529_p2;
reg   [7:0] ap_sig_allocacmp_a_idx;
wire    ap_block_pp0_stage3;
wire   [7:0] add_ln32_fu_335_p2;
wire   [4:0] trunc_ln32_7_fu_331_p1;
wire   [4:0] add_ln32_2_fu_345_p2;
wire   [14:0] grp_fu_363_p0;
wire   [14:0] grp_fu_375_p0;
wire    ap_block_pp0_stage1;
wire   [5:0] trunc_ln32_6_fu_384_p1;
wire   [6:0] trunc_ln32_fu_381_p1;
wire   [6:0] add_ln32_4_fu_393_p2;
wire   [5:0] add_ln32_3_fu_387_p2;
wire   [0:0] tmp_26_fu_407_p3;
wire   [3:0] and_ln_fu_415_p3;
wire   [15:0] zext_ln32_5_fu_423_p1;
wire   [15:0] lshr_ln32_fu_427_p2;
wire   [15:0] zext_ln32_6_fu_437_p1;
wire   [15:0] lshr_ln32_3_fu_441_p2;
wire   [7:0] tmp_5_fu_451_p1;
wire   [7:0] tmp_5_fu_451_p2;
wire   [0:0] tmp_5_fu_451_p3;
wire   [13:0] trunc_ln41_fu_465_p1;
wire   [0:0] icmp_ln41_fu_469_p2;
wire   [13:0] add_ln41_1_fu_475_p2;
wire   [13:0] grp_fu_489_p0;
wire   [13:0] trunc_ln42_fu_499_p1;
wire   [0:0] icmp_ln42_fu_503_p2;
wire   [13:0] add_ln42_1_fu_509_p2;
wire   [13:0] grp_fu_523_p0;
wire   [13:0] grp_fu_363_p2;
wire   [13:0] grp_fu_543_p0;
wire   [13:0] grp_fu_553_p0;
wire    ap_block_pp0_stage2;
wire   [30:0] tmp_27_fu_577_p1;
wire  signed [30:0] grp_fu_1063_p2;
wire   [28:0] tmp_28_fu_586_p1;
wire  signed [28:0] grp_fu_1070_p2;
wire   [30:0] tmp_29_fu_604_p1;
wire  signed [30:0] grp_fu_1077_p2;
wire   [28:0] tmp_30_fu_613_p1;
wire  signed [28:0] grp_fu_1084_p2;
wire   [5:0] shl_ln1_fu_625_p3;
wire   [63:0] zext_ln41_6_fu_632_p1;
wire   [63:0] lshr_ln41_fu_636_p2;
wire   [63:0] zext_ln41_7_fu_646_p1;
wire   [63:0] lshr_ln41_2_fu_650_p2;
wire   [31:0] tmp_9_fu_660_p1;
wire   [31:0] tmp_9_fu_660_p2;
wire   [63:0] zext_ln42_6_fu_676_p1;
wire   [63:0] lshr_ln42_fu_680_p2;
wire   [30:0] tmp_31_fu_690_p1;
wire  signed [30:0] grp_fu_1091_p2;
wire   [13:0] grp_fu_543_p2;
wire   [30:0] tmp_33_fu_705_p1;
wire  signed [30:0] grp_fu_1098_p2;
wire   [13:0] grp_fu_553_p2;
wire   [63:0] zext_ln42_7_fu_736_p1;
wire   [63:0] lshr_ln42_2_fu_739_p2;
wire   [31:0] tmp_11_fu_749_p2;
wire   [28:0] tmp_32_fu_757_p1;
wire  signed [28:0] grp_fu_1105_p2;
wire   [28:0] tmp_34_fu_764_p1;
wire  signed [28:0] grp_fu_1112_p2;
wire   [15:0] zext_ln32_7_fu_771_p1;
wire   [15:0] lshr_ln32_4_fu_774_p2;
wire   [7:0] trunc_ln32_10_fu_779_p1;
wire   [0:0] icmp_ln32_fu_783_p2;
wire   [31:0] up_left_fu_796_p1;
wire   [5:0] shl_ln3_fu_806_p3;
wire   [63:0] zext_ln43_6_fu_813_p1;
wire   [63:0] lshr_ln43_fu_817_p2;
wire   [63:0] zext_ln43_7_fu_826_p1;
wire   [63:0] lshr_ln43_2_fu_830_p2;
wire   [31:0] tmp_14_fu_840_p1;
wire   [31:0] tmp_14_fu_840_p2;
wire   [31:0] tmp_14_fu_840_p4;
wire   [31:0] select_ln45_fu_861_p3;
wire   [0:0] icmp_ln45_1_fu_866_p2;
wire   [5:0] shl_ln4_fu_878_p3;
wire   [63:0] zext_ln47_11_fu_885_p1;
wire   [63:0] shl_ln47_6_fu_889_p2;
wire   [63:0] xor_ln47_2_fu_895_p2;
wire   [31:0] max_fu_871_p3;
wire   [63:0] zext_ln47_12_fu_906_p1;
wire   [63:0] and_ln47_2_fu_901_p2;
wire   [63:0] shl_ln47_7_fu_910_p2;
wire   [63:0] zext_ln47_9_fu_923_p1;
wire   [63:0] shl_ln47_fu_927_p2;
wire   [63:0] xor_ln47_fu_933_p2;
wire   [63:0] zext_ln47_10_fu_944_p1;
wire   [63:0] and_ln47_fu_939_p2;
wire   [63:0] shl_ln47_5_fu_948_p2;
wire   [0:0] icmp_ln48_fu_961_p2;
wire   [0:0] icmp_ln50_fu_973_p2;
wire   [0:0] xor_ln48_fu_978_p2;
wire   [0:0] and_ln50_fu_984_p2;
wire   [0:0] or_ln50_fu_998_p2;
wire   [6:0] select_ln50_fu_990_p3;
wire   [3:0] shl_ln_fu_966_p3;
wire   [6:0] select_ln50_1_fu_1004_p3;
wire   [15:0] zext_ln50_2_fu_1016_p1;
wire   [15:0] shl_ln50_fu_1035_p2;
wire   [15:0] reuse_select_fu_1029_p3;
wire   [15:0] xor_ln50_fu_1040_p2;
wire   [15:0] and_ln50_2_fu_1046_p2;
wire   [14:0] grp_fu_1063_p0;
wire   [15:0] grp_fu_1063_p1;
wire   [13:0] grp_fu_1070_p0;
wire   [14:0] grp_fu_1070_p1;
wire   [14:0] grp_fu_1077_p0;
wire   [15:0] grp_fu_1077_p1;
wire   [13:0] grp_fu_1084_p0;
wire   [14:0] grp_fu_1084_p1;
wire   [14:0] grp_fu_1091_p0;
wire   [15:0] grp_fu_1091_p1;
wire   [14:0] grp_fu_1098_p0;
wire   [15:0] grp_fu_1098_p1;
wire   [13:0] grp_fu_1105_p0;
wire   [14:0] grp_fu_1105_p1;
wire   [13:0] grp_fu_1112_p0;
wire   [14:0] grp_fu_1112_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg   [4:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to7;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [30:0] grp_fu_1063_p00;
wire   [28:0] grp_fu_1070_p00;
wire   [30:0] grp_fu_1077_p00;
wire   [28:0] grp_fu_1084_p00;
wire   [30:0] grp_fu_1091_p00;
wire   [30:0] grp_fu_1098_p00;
wire   [28:0] grp_fu_1105_p00;
wire   [28:0] grp_fu_1112_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

needwun_urem_15ns_15ns_14_19_1 #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 14 ))
urem_15ns_15ns_14_19_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_363_p0),
    .din1(15'd8321),
    .ce(1'b1),
    .dout(grp_fu_363_p2)
);

needwun_urem_15ns_15ns_15_19_1 #(
    .ID( 1 ),
    .NUM_STAGE( 19 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 15 ))
urem_15ns_15ns_15_19_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_375_p0),
    .din1(15'd8321),
    .ce(1'b1),
    .dout(grp_fu_375_p2)
);

needwun_mux_21_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 8 ))
mux_21_8_1_1_U18(
    .din0(tmp_5_fu_451_p1),
    .din1(tmp_5_fu_451_p2),
    .din2(tmp_5_fu_451_p3),
    .dout(tmp_5_fu_451_p4)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_489_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_489_p2)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_523_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_523_p2)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_543_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_543_p2)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_553_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_553_p2)
);

needwun_mux_22_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_22_32_1_1_U23(
    .din0(tmp_9_fu_660_p1),
    .din1(tmp_9_fu_660_p2),
    .din2(tmp_27_reg_1283),
    .dout(tmp_9_fu_660_p4)
);

needwun_mux_22_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_22_32_1_1_U24(
    .din0(trunc_ln42_3_reg_1343),
    .din1(tmp_11_fu_749_p2),
    .din2(tmp_29_reg_1313),
    .dout(tmp_11_fu_749_p4)
);

needwun_add_32ns_32ns_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32ns_32_1_1_U25(
    .din0(tmp_9_reg_1333),
    .din1(up_left_fu_796_p1),
    .dout(up_left_fu_796_p2)
);

needwun_add_32ns_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32s_32_1_1_U26(
    .din0(tmp_11_reg_1388),
    .din1(32'd4294967295),
    .dout(up_fu_801_p2)
);

needwun_mux_22_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_22_32_1_1_U27(
    .din0(tmp_14_fu_840_p1),
    .din1(tmp_14_fu_840_p2),
    .din2(tmp_31_reg_1348),
    .dout(tmp_14_fu_840_p4)
);

needwun_add_32ns_32s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
add_32ns_32s_32_1_1_U28(
    .din0(tmp_14_fu_840_p4),
    .din1(32'd4294967295),
    .dout(left_fu_849_p2)
);

needwun_mul_mul_15ns_16ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_mul_15ns_16ns_31_4_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1063_p0),
    .din1(grp_fu_1063_p1),
    .ce(1'b1),
    .dout(grp_fu_1063_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1070_p0),
    .din1(grp_fu_1070_p1),
    .ce(1'b1),
    .dout(grp_fu_1070_p2)
);

needwun_mul_mul_15ns_16ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_mul_15ns_16ns_31_4_1_U31(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1077_p0),
    .din1(grp_fu_1077_p1),
    .ce(1'b1),
    .dout(grp_fu_1077_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U32(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1084_p0),
    .din1(grp_fu_1084_p1),
    .ce(1'b1),
    .dout(grp_fu_1084_p2)
);

needwun_mul_mul_15ns_16ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_mul_15ns_16ns_31_4_1_U33(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1091_p0),
    .din1(grp_fu_1091_p1),
    .ce(1'b1),
    .dout(grp_fu_1091_p2)
);

needwun_mul_mul_15ns_16ns_31_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 15 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 31 ))
mul_mul_15ns_16ns_31_4_1_U34(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1098_p0),
    .din1(grp_fu_1098_p1),
    .ce(1'b1),
    .dout(grp_fu_1098_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U35(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1105_p0),
    .din1(grp_fu_1105_p1),
    .ce(1'b1),
    .dout(grp_fu_1105_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U36(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1112_p0),
    .din1(grp_fu_1112_p1),
    .ce(1'b1),
    .dout(grp_fu_1112_p2)
);

needwun_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage4),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage4)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_idx_2_fu_146 <= 8'd1;
    end else if (((icmp_ln31_reg_1163 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        a_idx_2_fu_146 <= add_ln31_fu_529_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            reuse_addr_reg_fu_138 <= 64'd18446744073709551615;
        end else if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
            reuse_addr_reg_fu_138 <= zext_ln47_1_fu_712_p1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        reuse_reg_fu_142 <= 16'd0;
    end else if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        reuse_reg_fu_142 <= or_ln50_2_fu_1052_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_33_fu_705_p3 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        M_0_addr_reg_1368 <= zext_ln47_4_fu_716_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        M_0_load_4_reg_1398 <= M_0_q1;
        ptr_load_reg_1418 <= ptr_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (tmp_33_reg_1363 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        M_0_load_reg_1408 <= M_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (tmp_33_fu_705_p3 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        M_1_addr_4_reg_1373 <= zext_ln47_4_fu_716_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (tmp_33_reg_1363 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        M_1_load_4_reg_1413 <= M_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_idx_reg_1156 <= ap_sig_allocacmp_a_idx;
        add_ln43_reg_1187_pp0_iter1_reg <= add_ln43_reg_1187;
        add_ln43_reg_1187_pp0_iter2_reg <= add_ln43_reg_1187_pp0_iter1_reg;
        add_ln43_reg_1187_pp0_iter3_reg <= add_ln43_reg_1187_pp0_iter2_reg;
        add_ln43_reg_1187_pp0_iter4_reg <= add_ln43_reg_1187_pp0_iter3_reg;
        add_ln43_reg_1187_pp0_iter5_reg <= add_ln43_reg_1187_pp0_iter4_reg;
        add_ln43_reg_1187_pp0_iter6_reg <= add_ln43_reg_1187_pp0_iter5_reg;
        add_ln47_reg_1193_pp0_iter1_reg <= add_ln47_reg_1193;
        add_ln47_reg_1193_pp0_iter2_reg <= add_ln47_reg_1193_pp0_iter1_reg;
        add_ln47_reg_1193_pp0_iter3_reg <= add_ln47_reg_1193_pp0_iter2_reg;
        add_ln47_reg_1193_pp0_iter4_reg <= add_ln47_reg_1193_pp0_iter3_reg;
        add_ln47_reg_1193_pp0_iter5_reg <= add_ln47_reg_1193_pp0_iter4_reg;
        add_ln47_reg_1193_pp0_iter6_reg <= add_ln47_reg_1193_pp0_iter5_reg;
        addr_cmp_reg_1383 <= addr_cmp_fu_725_p2;
        icmp_ln31_reg_1163 <= icmp_ln31_fu_321_p2;
        p_cast15_cast_reg_1150[13 : 0] <= p_cast15_cast_fu_299_p1[13 : 0];
        ptr_addr_reg_1378 <= zext_ln47_1_fu_712_p1;
        shl_ln2_reg_1338[5] <= shl_ln2_fu_669_p3[5];
        tmp_31_reg_1348 <= {{tmp_31_fu_690_p1[30:29]}};
        tmp_33_reg_1363 <= tmp_33_fu_705_p1[32'd29];
        tmp_9_reg_1333 <= tmp_9_fu_660_p4;
        trunc_ln42_3_reg_1343 <= trunc_ln42_3_fu_686_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln31_reg_1163 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln41_reg_1204 <= add_ln41_fu_461_p2;
        add_ln42_reg_1215 <= add_ln42_fu_495_p2;
        select_ln41_reg_1209 <= select_ln41_fu_481_p3;
        select_ln42_reg_1220 <= select_ln42_fu_515_p3;
        tmp_5_reg_1199 <= tmp_5_fu_451_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln41_reg_1204_pp0_iter1_reg <= add_ln41_reg_1204;
        add_ln41_reg_1204_pp0_iter2_reg <= add_ln41_reg_1204_pp0_iter1_reg;
        add_ln41_reg_1204_pp0_iter3_reg <= add_ln41_reg_1204_pp0_iter2_reg;
        add_ln41_reg_1204_pp0_iter4_reg <= add_ln41_reg_1204_pp0_iter3_reg;
        add_ln41_reg_1204_pp0_iter5_reg <= add_ln41_reg_1204_pp0_iter4_reg;
        add_ln42_reg_1215_pp0_iter1_reg <= add_ln42_reg_1215;
        add_ln42_reg_1215_pp0_iter2_reg <= add_ln42_reg_1215_pp0_iter1_reg;
        add_ln42_reg_1215_pp0_iter3_reg <= add_ln42_reg_1215_pp0_iter2_reg;
        add_ln42_reg_1215_pp0_iter4_reg <= add_ln42_reg_1215_pp0_iter3_reg;
        add_ln42_reg_1215_pp0_iter5_reg <= add_ln42_reg_1215_pp0_iter4_reg;
        select_ln41_reg_1209_pp0_iter1_reg <= select_ln41_reg_1209;
        select_ln41_reg_1209_pp0_iter2_reg <= select_ln41_reg_1209_pp0_iter1_reg;
        select_ln41_reg_1209_pp0_iter3_reg <= select_ln41_reg_1209_pp0_iter2_reg;
        select_ln41_reg_1209_pp0_iter4_reg <= select_ln41_reg_1209_pp0_iter3_reg;
        select_ln41_reg_1209_pp0_iter5_reg <= select_ln41_reg_1209_pp0_iter4_reg;
        select_ln42_reg_1220_pp0_iter1_reg <= select_ln42_reg_1220;
        select_ln42_reg_1220_pp0_iter2_reg <= select_ln42_reg_1220_pp0_iter1_reg;
        select_ln42_reg_1220_pp0_iter3_reg <= select_ln42_reg_1220_pp0_iter2_reg;
        select_ln42_reg_1220_pp0_iter4_reg <= select_ln42_reg_1220_pp0_iter3_reg;
        select_ln42_reg_1220_pp0_iter5_reg <= select_ln42_reg_1220_pp0_iter4_reg;
        tmp_11_reg_1388 <= tmp_11_fu_749_p4;
        tmp_32_reg_1393 <= tmp_32_fu_757_p1[32'd27];
        tmp_34_reg_1403 <= tmp_34_fu_764_p1[32'd27];
        tmp_5_reg_1199_pp0_iter1_reg <= tmp_5_reg_1199;
        tmp_5_reg_1199_pp0_iter2_reg <= tmp_5_reg_1199_pp0_iter1_reg;
        tmp_5_reg_1199_pp0_iter3_reg <= tmp_5_reg_1199_pp0_iter2_reg;
        tmp_5_reg_1199_pp0_iter4_reg <= tmp_5_reg_1199_pp0_iter3_reg;
        tmp_5_reg_1199_pp0_iter5_reg <= tmp_5_reg_1199_pp0_iter4_reg;
        tmp_5_reg_1199_pp0_iter6_reg <= tmp_5_reg_1199_pp0_iter5_reg;
        tmp_5_reg_1199_pp0_iter7_reg <= tmp_5_reg_1199_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln31_fu_321_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln43_reg_1187 <= add_ln43_fu_357_p2;
        add_ln47_reg_1193 <= add_ln47_fu_369_p2;
        zext_ln31_reg_1167[7 : 0] <= zext_ln31_fu_327_p1[7 : 0];
        zext_ln32_reg_1172[7 : 0] <= zext_ln32_fu_341_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        tmp_29_reg_1313 <= {{tmp_29_fu_604_p1[30:29]}};
        tmp_30_reg_1318 <= tmp_30_fu_613_p1[32'd27];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln45_reg_1441 <= icmp_ln45_fu_855_p2;
        left_reg_1435 <= left_fu_849_p2;
        up_left_reg_1423 <= up_left_fu_796_p2;
        up_reg_1429 <= up_fu_801_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_295 <= M_1_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        shl_ln50_2_reg_1451 <= shl_ln50_2_fu_1020_p2;
        tmp_27_reg_1283 <= {{tmp_27_fu_577_p1[30:29]}};
        tmp_28_reg_1288 <= tmp_28_fu_586_p1[32'd27];
        trunc_ln43_reg_1236 <= trunc_ln43_fu_539_p1;
        trunc_ln43_reg_1236_pp0_iter4_reg <= trunc_ln43_reg_1236;
        trunc_ln43_reg_1236_pp0_iter5_reg <= trunc_ln43_reg_1236_pp0_iter4_reg;
        trunc_ln47_reg_1247 <= trunc_ln47_fu_549_p1;
        trunc_ln47_reg_1247_pp0_iter4_reg <= trunc_ln47_reg_1247;
        trunc_ln47_reg_1247_pp0_iter5_reg <= trunc_ln47_reg_1247_pp0_iter4_reg;
        urem_ln41_reg_1226 <= grp_fu_489_p2;
        urem_ln41_reg_1226_pp0_iter4_reg <= urem_ln41_reg_1226;
        urem_ln41_reg_1226_pp0_iter5_reg <= urem_ln41_reg_1226_pp0_iter4_reg;
        urem_ln41_reg_1226_pp0_iter6_reg <= urem_ln41_reg_1226_pp0_iter5_reg;
        urem_ln42_reg_1231 <= grp_fu_523_p2;
        urem_ln42_reg_1231_pp0_iter4_reg <= urem_ln42_reg_1231;
        urem_ln42_reg_1231_pp0_iter5_reg <= urem_ln42_reg_1231_pp0_iter4_reg;
        urem_ln42_reg_1231_pp0_iter6_reg <= urem_ln42_reg_1231_pp0_iter5_reg;
        urem_ln47_reg_1242 <= grp_fu_375_p2;
        urem_ln47_reg_1242_pp0_iter4_reg <= urem_ln47_reg_1242;
        urem_ln47_reg_1242_pp0_iter5_reg <= urem_ln47_reg_1242_pp0_iter4_reg;
        urem_ln47_reg_1242_pp0_iter6_reg <= urem_ln47_reg_1242_pp0_iter5_reg;
        zext_ln50_reg_1446[3] <= zext_ln50_fu_1012_p1[3];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        M_0_address0 = M_0_addr_reg_1368;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        M_0_address0 = zext_ln47_4_fu_716_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        M_0_address0 = zext_ln41_2_fu_599_p1;
    end else begin
        M_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        M_0_address1 = zext_ln43_2_fu_699_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        M_0_address1 = zext_ln42_2_fu_620_p1;
    end else begin
        M_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        M_0_ce0 = 1'b1;
    end else begin
        M_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        M_0_ce1 = 1'b1;
    end else begin
        M_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (tmp_33_reg_1363 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        M_0_we0 = 1'b1;
    end else begin
        M_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        M_1_address0 = M_1_addr_4_reg_1373;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        M_1_address0 = zext_ln47_4_fu_716_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        M_1_address0 = zext_ln41_2_fu_599_p1;
    end else begin
        M_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        M_1_address1 = zext_ln43_2_fu_699_p1;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        M_1_address1 = zext_ln42_2_fu_620_p1;
    end else begin
        M_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        M_1_ce0 = 1'b1;
    end else begin
        M_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        M_1_ce1 = 1'b1;
    end else begin
        M_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (tmp_33_reg_1363 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        M_1_we0 = 1'b1;
    end else begin
        M_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        SEQA_0_ce0 = 1'b1;
    end else begin
        SEQA_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        SEQA_1_ce0 = 1'b1;
    end else begin
        SEQA_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln31_reg_1163 == 1'd1) & (1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to7 = 1'b1;
    end else begin
        ap_idle_pp0_1to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_a_idx = 8'd1;
    end else begin
        ap_sig_allocacmp_a_idx = a_idx_2_fu_146;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter7 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ptr_address0 = ptr_addr_reg_1378;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ptr_address0 = zext_ln47_1_fu_712_p1;
        end else begin
            ptr_address0 = 'bx;
        end
    end else begin
        ptr_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ptr_ce0 = 1'b1;
    end else begin
        ptr_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ptr_we0 = 1'b1;
    end else begin
        ptr_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to7 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign M_0_d0 = (shl_ln47_7_fu_910_p2 | and_ln47_2_fu_901_p2);

assign M_1_d0 = (shl_ln47_5_fu_948_p2 | and_ln47_fu_939_p2);

assign SEQA_0_address0 = zext_ln32_2_fu_351_p1;

assign SEQA_1_address0 = zext_ln32_2_fu_351_p1;

assign add_ln31_fu_529_p2 = (a_idx_reg_1156 + 8'd1);

assign add_ln32_2_fu_345_p2 = ($signed(trunc_ln32_7_fu_331_p1) + $signed(5'd31));

assign add_ln32_3_fu_387_p2 = ($signed(trunc_ln32_6_fu_384_p1) + $signed(6'd63));

assign add_ln32_4_fu_393_p2 = ($signed(trunc_ln32_fu_381_p1) + $signed(7'd127));

assign add_ln32_fu_335_p2 = ($signed(ap_sig_allocacmp_a_idx) + $signed(8'd255));

assign add_ln41_1_fu_475_p2 = (trunc_ln41_fu_465_p1 + 14'd8063);

assign add_ln41_fu_461_p2 = (zext_ln32_reg_1172 + p_cast15_cast_reg_1150);

assign add_ln42_1_fu_509_p2 = (trunc_ln42_fu_499_p1 + 14'd8063);

assign add_ln42_fu_495_p2 = (zext_ln31_reg_1167 + p_cast15_cast_reg_1150);

assign add_ln43_fu_357_p2 = (zext_ln32_fu_341_p1 + empty);

assign add_ln47_fu_369_p2 = (zext_ln31_fu_327_p1 + empty);

assign addr_cmp_fu_725_p2 = ((reuse_addr_reg_fu_138 == zext_ln47_1_fu_712_p1) ? 1'b1 : 1'b0);

assign and_ln47_2_fu_901_p2 = (xor_ln47_2_fu_895_p2 & M_0_load_reg_1408);

assign and_ln47_fu_939_p2 = (xor_ln47_fu_933_p2 & M_1_load_4_reg_1413);

assign and_ln50_2_fu_1046_p2 = (xor_ln50_fu_1040_p2 & reuse_select_fu_1029_p3);

assign and_ln50_fu_984_p2 = (xor_ln48_fu_978_p2 & icmp_ln50_fu_973_p2);

assign and_ln_fu_415_p3 = {{tmp_26_fu_407_p3}, {3'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage4;

assign grp_fu_1063_p0 = grp_fu_1063_p00;

assign grp_fu_1063_p00 = add_ln41_reg_1204_pp0_iter5_reg;

assign grp_fu_1063_p1 = 31'd64520;

assign grp_fu_1070_p0 = grp_fu_1070_p00;

assign grp_fu_1070_p00 = select_ln41_reg_1209_pp0_iter5_reg;

assign grp_fu_1070_p1 = 29'd32257;

assign grp_fu_1077_p0 = grp_fu_1077_p00;

assign grp_fu_1077_p00 = add_ln42_reg_1215_pp0_iter5_reg;

assign grp_fu_1077_p1 = 31'd64520;

assign grp_fu_1084_p0 = grp_fu_1084_p00;

assign grp_fu_1084_p00 = select_ln42_reg_1220_pp0_iter5_reg;

assign grp_fu_1084_p1 = 29'd32257;

assign grp_fu_1091_p0 = grp_fu_1091_p00;

assign grp_fu_1091_p00 = add_ln43_reg_1187_pp0_iter6_reg;

assign grp_fu_1091_p1 = 31'd64520;

assign grp_fu_1098_p0 = grp_fu_1098_p00;

assign grp_fu_1098_p00 = add_ln47_reg_1193_pp0_iter6_reg;

assign grp_fu_1098_p1 = 31'd64520;

assign grp_fu_1105_p0 = grp_fu_1105_p00;

assign grp_fu_1105_p00 = trunc_ln43_reg_1236_pp0_iter5_reg;

assign grp_fu_1105_p1 = 29'd32257;

assign grp_fu_1112_p0 = grp_fu_1112_p00;

assign grp_fu_1112_p00 = trunc_ln47_reg_1247_pp0_iter5_reg;

assign grp_fu_1112_p1 = 29'd32257;

assign grp_fu_363_p0 = (zext_ln32_fu_341_p1 + empty);

assign grp_fu_375_p0 = (zext_ln31_fu_327_p1 + empty);

assign grp_fu_489_p0 = ((icmp_ln41_fu_469_p2[0:0] == 1'b1) ? trunc_ln41_fu_465_p1 : add_ln41_1_fu_475_p2);

assign grp_fu_523_p0 = ((icmp_ln42_fu_503_p2[0:0] == 1'b1) ? trunc_ln42_fu_499_p1 : add_ln42_1_fu_509_p2);

assign grp_fu_543_p0 = grp_fu_363_p2[13:0];

assign grp_fu_553_p0 = grp_fu_375_p2[13:0];

assign icmp_ln31_fu_321_p2 = ((ap_sig_allocacmp_a_idx == 8'd129) ? 1'b1 : 1'b0);

assign icmp_ln32_fu_783_p2 = ((tmp_5_reg_1199_pp0_iter7_reg == trunc_ln32_10_fu_779_p1) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_469_p2 = ((add_ln41_fu_461_p2 < 15'd8321) ? 1'b1 : 1'b0);

assign icmp_ln42_fu_503_p2 = ((add_ln42_fu_495_p2 < 15'd8321) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_866_p2 = (($signed(up_left_reg_1423) > $signed(select_ln45_fu_861_p3)) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_855_p2 = (($signed(up_fu_801_p2) > $signed(left_fu_849_p2)) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_961_p2 = ((left_reg_1435 == max_fu_871_p3) ? 1'b1 : 1'b0);

assign icmp_ln50_fu_973_p2 = ((max_fu_871_p3 == up_reg_1429) ? 1'b1 : 1'b0);

assign lshr_ln32_3_fu_441_p2 = SEQA_1_q0 >> zext_ln32_6_fu_437_p1;

assign lshr_ln32_4_fu_774_p2 = SEQB_load >> zext_ln32_7_fu_771_p1;

assign lshr_ln32_fu_427_p2 = SEQA_0_q0 >> zext_ln32_5_fu_423_p1;

assign lshr_ln41_2_fu_650_p2 = M_1_q0 >> zext_ln41_7_fu_646_p1;

assign lshr_ln41_fu_636_p2 = M_0_q0 >> zext_ln41_6_fu_632_p1;

assign lshr_ln42_2_fu_739_p2 = reg_295 >> zext_ln42_7_fu_736_p1;

assign lshr_ln42_fu_680_p2 = M_0_q1 >> zext_ln42_6_fu_676_p1;

assign lshr_ln43_2_fu_830_p2 = reg_295 >> zext_ln43_7_fu_826_p1;

assign lshr_ln43_fu_817_p2 = M_0_load_4_reg_1398 >> zext_ln43_6_fu_813_p1;

assign max_fu_871_p3 = ((icmp_ln45_1_fu_866_p2[0:0] == 1'b1) ? up_left_reg_1423 : select_ln45_fu_861_p3);

assign or_ln50_2_fu_1052_p2 = (shl_ln50_2_reg_1451 | and_ln50_2_fu_1046_p2);

assign or_ln50_fu_998_p2 = (icmp_ln48_fu_961_p2 | and_ln50_fu_984_p2);

assign p_cast15_cast_fu_299_p1 = p_cast15;

assign ptr_d0 = (shl_ln50_2_reg_1451 | and_ln50_2_fu_1046_p2);

assign reuse_select_fu_1029_p3 = ((addr_cmp_reg_1383[0:0] == 1'b1) ? reuse_reg_fu_142 : ptr_load_reg_1418);

assign select_ln41_fu_481_p3 = ((icmp_ln41_fu_469_p2[0:0] == 1'b1) ? trunc_ln41_fu_465_p1 : add_ln41_1_fu_475_p2);

assign select_ln42_fu_515_p3 = ((icmp_ln42_fu_503_p2[0:0] == 1'b1) ? trunc_ln42_fu_499_p1 : add_ln42_1_fu_509_p2);

assign select_ln45_fu_861_p3 = ((icmp_ln45_reg_1441[0:0] == 1'b1) ? up_reg_1429 : left_reg_1435);

assign select_ln50_1_fu_1004_p3 = ((or_ln50_fu_998_p2[0:0] == 1'b1) ? select_ln50_fu_990_p3 : 7'd92);

assign select_ln50_fu_990_p3 = ((and_ln50_fu_984_p2[0:0] == 1'b1) ? 7'd94 : 7'd60);

assign shl_ln1_fu_625_p3 = {{tmp_28_reg_1288}, {5'd0}};

assign shl_ln2_fu_669_p3 = {{tmp_30_reg_1318}, {5'd0}};

assign shl_ln3_fu_806_p3 = {{tmp_32_reg_1393}, {5'd0}};

assign shl_ln47_5_fu_948_p2 = zext_ln47_10_fu_944_p1 << zext_ln47_9_fu_923_p1;

assign shl_ln47_6_fu_889_p2 = 64'd4294967295 << zext_ln47_11_fu_885_p1;

assign shl_ln47_7_fu_910_p2 = zext_ln47_12_fu_906_p1 << zext_ln47_11_fu_885_p1;

assign shl_ln47_fu_927_p2 = 64'd4294967295 << zext_ln47_9_fu_923_p1;

assign shl_ln4_fu_878_p3 = {{tmp_34_reg_1403}, {5'd0}};

assign shl_ln50_2_fu_1020_p2 = zext_ln50_2_fu_1016_p1 << zext_ln50_fu_1012_p1;

assign shl_ln50_fu_1035_p2 = 16'd255 << zext_ln50_reg_1446;

assign shl_ln_fu_966_p3 = {{tmp_33_reg_1363}, {3'd0}};

assign tmp_11_fu_749_p2 = lshr_ln42_2_fu_739_p2[31:0];

assign tmp_14_fu_840_p1 = lshr_ln43_fu_817_p2[31:0];

assign tmp_14_fu_840_p2 = lshr_ln43_2_fu_830_p2[31:0];

assign tmp_26_fu_407_p3 = add_ln32_3_fu_387_p2[32'd5];

assign tmp_27_fu_577_p1 = grp_fu_1063_p2;

assign tmp_28_fu_586_p1 = grp_fu_1070_p2;

assign tmp_29_fu_604_p1 = grp_fu_1077_p2;

assign tmp_30_fu_613_p1 = grp_fu_1084_p2;

assign tmp_31_fu_690_p1 = grp_fu_1091_p2;

assign tmp_32_fu_757_p1 = grp_fu_1105_p2;

assign tmp_33_fu_705_p1 = grp_fu_1098_p2;

assign tmp_33_fu_705_p3 = tmp_33_fu_705_p1[32'd29];

assign tmp_34_fu_764_p1 = grp_fu_1112_p2;

assign tmp_5_fu_451_p1 = lshr_ln32_fu_427_p2[7:0];

assign tmp_5_fu_451_p2 = lshr_ln32_3_fu_441_p2[7:0];

assign tmp_5_fu_451_p3 = add_ln32_4_fu_393_p2[32'd6];

assign tmp_9_fu_660_p1 = lshr_ln41_fu_636_p2[31:0];

assign tmp_9_fu_660_p2 = lshr_ln41_2_fu_650_p2[31:0];

assign trunc_ln32_10_fu_779_p1 = lshr_ln32_4_fu_774_p2[7:0];

assign trunc_ln32_6_fu_384_p1 = a_idx_reg_1156[5:0];

assign trunc_ln32_7_fu_331_p1 = ap_sig_allocacmp_a_idx[4:0];

assign trunc_ln32_fu_381_p1 = a_idx_reg_1156[6:0];

assign trunc_ln41_fu_465_p1 = add_ln41_fu_461_p2[13:0];

assign trunc_ln42_3_fu_686_p1 = lshr_ln42_fu_680_p2[31:0];

assign trunc_ln42_fu_499_p1 = add_ln42_fu_495_p2[13:0];

assign trunc_ln43_fu_539_p1 = grp_fu_363_p2[13:0];

assign trunc_ln47_fu_549_p1 = grp_fu_375_p2[13:0];

assign up_left_fu_796_p1 = ((icmp_ln32_fu_783_p2[0:0] == 1'b1) ? 32'd1 : 32'd4294967295);

assign xor_ln47_2_fu_895_p2 = (shl_ln47_6_fu_889_p2 ^ 64'd18446744073709551615);

assign xor_ln47_fu_933_p2 = (shl_ln47_fu_927_p2 ^ 64'd18446744073709551615);

assign xor_ln48_fu_978_p2 = (icmp_ln48_fu_961_p2 ^ 1'd1);

assign xor_ln50_fu_1040_p2 = (shl_ln50_fu_1035_p2 ^ 16'd65535);

assign zext_ln31_fu_327_p1 = ap_sig_allocacmp_a_idx;

assign zext_ln32_2_fu_351_p1 = add_ln32_2_fu_345_p2;

assign zext_ln32_5_fu_423_p1 = and_ln_fu_415_p3;

assign zext_ln32_6_fu_437_p1 = and_ln_fu_415_p3;

assign zext_ln32_7_fu_771_p1 = p_cast21;

assign zext_ln32_fu_341_p1 = add_ln32_fu_335_p2;

assign zext_ln41_2_fu_599_p1 = urem_ln41_reg_1226_pp0_iter6_reg;

assign zext_ln41_6_fu_632_p1 = shl_ln1_fu_625_p3;

assign zext_ln41_7_fu_646_p1 = shl_ln1_fu_625_p3;

assign zext_ln42_2_fu_620_p1 = urem_ln42_reg_1231_pp0_iter6_reg;

assign zext_ln42_6_fu_676_p1 = shl_ln2_fu_669_p3;

assign zext_ln42_7_fu_736_p1 = shl_ln2_reg_1338;

assign zext_ln43_2_fu_699_p1 = grp_fu_543_p2;

assign zext_ln43_6_fu_813_p1 = shl_ln3_fu_806_p3;

assign zext_ln43_7_fu_826_p1 = shl_ln3_fu_806_p3;

assign zext_ln47_10_fu_944_p1 = max_fu_871_p3;

assign zext_ln47_11_fu_885_p1 = shl_ln4_fu_878_p3;

assign zext_ln47_12_fu_906_p1 = max_fu_871_p3;

assign zext_ln47_1_fu_712_p1 = urem_ln47_reg_1242_pp0_iter6_reg;

assign zext_ln47_4_fu_716_p1 = grp_fu_553_p2;

assign zext_ln47_9_fu_923_p1 = shl_ln4_fu_878_p3;

assign zext_ln50_2_fu_1016_p1 = select_ln50_1_fu_1004_p3;

assign zext_ln50_fu_1012_p1 = shl_ln_fu_966_p3;

always @ (posedge ap_clk) begin
    p_cast15_cast_reg_1150[14] <= 1'b0;
    zext_ln31_reg_1167[14:8] <= 7'b0000000;
    zext_ln32_reg_1172[14:8] <= 7'b0000000;
    shl_ln2_reg_1338[4:0] <= 5'b00000;
    zext_ln50_reg_1446[2:0] <= 3'b000;
    zext_ln50_reg_1446[15:4] <= 12'b000000000000;
end

endmodule //needwun_needwun_Pipeline_fill_in
