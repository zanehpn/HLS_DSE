// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module needwun_needwun_Pipeline_init_col (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        M_0_address0,
        M_0_ce0,
        M_0_we0,
        M_0_d0,
        M_0_q0,
        M_1_address0,
        M_1_ce0,
        M_1_we0,
        M_1_d0,
        M_1_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 4'd1;
parameter    ap_ST_fsm_pp0_stage1 = 4'd2;
parameter    ap_ST_fsm_pp0_stage2 = 4'd4;
parameter    ap_ST_fsm_pp0_stage3 = 4'd8;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [12:0] M_0_address0;
output   M_0_ce0;
output   M_0_we0;
output  [63:0] M_0_d0;
input  [63:0] M_0_q0;
output  [12:0] M_1_address0;
output   M_1_ce0;
output   M_1_we0;
output  [63:0] M_1_d0;
input  [63:0] M_1_q0;

reg ap_idle;
reg[12:0] M_0_address0;
reg M_0_ce0;
reg M_0_we0;
reg[63:0] M_0_d0;
reg[12:0] M_1_address0;
reg M_1_ce0;
reg M_1_we0;
reg[63:0] M_1_d0;

(* fsm_encoding = "none" *) reg   [3:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state8_pp0_stage3_iter1;
wire    ap_block_state12_pp0_stage3_iter2;
wire    ap_block_state16_pp0_stage3_iter3;
wire    ap_block_state20_pp0_stage3_iter4;
wire    ap_block_state24_pp0_stage3_iter5;
wire    ap_block_state28_pp0_stage3_iter6;
wire    ap_block_state32_pp0_stage3_iter7;
wire    ap_block_state36_pp0_stage3_iter8;
wire    ap_block_state40_pp0_stage3_iter9;
wire    ap_block_state44_pp0_stage3_iter10;
wire    ap_block_state48_pp0_stage3_iter11;
wire    ap_block_state52_pp0_stage3_iter12;
wire    ap_block_state56_pp0_stage3_iter13;
wire    ap_block_state60_pp0_stage3_iter14;
wire    ap_block_state64_pp0_stage3_iter15;
wire    ap_block_state68_pp0_stage3_iter16;
wire    ap_block_state72_pp0_stage3_iter17;
wire    ap_block_state76_pp0_stage3_iter18;
wire    ap_block_state80_pp0_stage3_iter19;
wire    ap_block_state84_pp0_stage3_iter20;
wire    ap_block_state88_pp0_stage3_iter21;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln25_reg_485;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [63:0] b_idx_0_load_reg_467;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state6_pp0_stage1_iter1;
wire    ap_block_state10_pp0_stage1_iter2;
wire    ap_block_state14_pp0_stage1_iter3;
wire    ap_block_state18_pp0_stage1_iter4;
wire    ap_block_state22_pp0_stage1_iter5;
wire    ap_block_state26_pp0_stage1_iter6;
wire    ap_block_state30_pp0_stage1_iter7;
wire    ap_block_state34_pp0_stage1_iter8;
wire    ap_block_state38_pp0_stage1_iter9;
wire    ap_block_state42_pp0_stage1_iter10;
wire    ap_block_state46_pp0_stage1_iter11;
wire    ap_block_state50_pp0_stage1_iter12;
wire    ap_block_state54_pp0_stage1_iter13;
wire    ap_block_state58_pp0_stage1_iter14;
wire    ap_block_state62_pp0_stage1_iter15;
wire    ap_block_state66_pp0_stage1_iter16;
wire    ap_block_state70_pp0_stage1_iter17;
wire    ap_block_state74_pp0_stage1_iter18;
wire    ap_block_state78_pp0_stage1_iter19;
wire    ap_block_state82_pp0_stage1_iter20;
wire    ap_block_state86_pp0_stage1_iter21;
wire    ap_block_state90_pp0_stage1_iter22;
wire    ap_block_pp0_stage1_11001;
wire   [31:0] trunc_ln26_fu_114_p1;
reg   [31:0] trunc_ln26_reg_473;
reg   [31:0] trunc_ln26_reg_473_pp0_iter1_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter2_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter3_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter4_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter5_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter6_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter7_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter8_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter9_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter10_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter11_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter12_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter13_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter14_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter15_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter16_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter17_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter18_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter19_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter20_reg;
reg   [31:0] trunc_ln26_reg_473_pp0_iter21_reg;
wire   [63:0] add_ln26_fu_124_p2;
reg   [63:0] add_ln26_reg_479;
reg   [63:0] add_ln26_reg_479_pp0_iter1_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter2_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter3_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter4_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter5_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter6_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter7_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter8_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter9_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter10_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter11_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter12_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter13_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter14_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter15_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter16_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter17_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter18_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter19_reg;
reg   [63:0] add_ln26_reg_479_pp0_iter20_reg;
wire   [0:0] icmp_ln25_fu_141_p2;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state7_pp0_stage2_iter1;
wire    ap_block_state11_pp0_stage2_iter2;
wire    ap_block_state15_pp0_stage2_iter3;
wire    ap_block_state19_pp0_stage2_iter4;
wire    ap_block_state23_pp0_stage2_iter5;
wire    ap_block_state27_pp0_stage2_iter6;
wire    ap_block_state31_pp0_stage2_iter7;
wire    ap_block_state35_pp0_stage2_iter8;
wire    ap_block_state39_pp0_stage2_iter9;
wire    ap_block_state43_pp0_stage2_iter10;
wire    ap_block_state47_pp0_stage2_iter11;
wire    ap_block_state51_pp0_stage2_iter12;
wire    ap_block_state55_pp0_stage2_iter13;
wire    ap_block_state59_pp0_stage2_iter14;
wire    ap_block_state63_pp0_stage2_iter15;
wire    ap_block_state67_pp0_stage2_iter16;
wire    ap_block_state71_pp0_stage2_iter17;
wire    ap_block_state75_pp0_stage2_iter18;
wire    ap_block_state79_pp0_stage2_iter19;
wire    ap_block_state83_pp0_stage2_iter20;
wire    ap_block_state87_pp0_stage2_iter21;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] icmp_ln25_reg_485_pp0_iter1_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter2_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter3_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter4_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter5_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter6_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter7_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter8_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter9_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter10_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter11_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter12_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter13_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter14_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter15_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter16_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter17_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter18_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter19_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter20_reg;
reg   [0:0] icmp_ln25_reg_485_pp0_iter21_reg;
wire   [63:0] add_ln26_1_fu_153_p2;
reg   [63:0] add_ln26_1_reg_489;
reg   [63:0] add_ln26_1_reg_489_pp0_iter1_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter2_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter3_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter4_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter5_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter6_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter7_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter8_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter9_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter10_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter11_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter12_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter13_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter14_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter15_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter16_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter17_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter18_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter19_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter20_reg;
reg   [63:0] add_ln26_1_reg_489_pp0_iter21_reg;
wire   [13:0] trunc_ln26_1_fu_175_p1;
reg   [13:0] trunc_ln26_1_reg_495;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state5_pp0_stage0_iter1;
wire    ap_block_state9_pp0_stage0_iter2;
wire    ap_block_state13_pp0_stage0_iter3;
wire    ap_block_state17_pp0_stage0_iter4;
wire    ap_block_state21_pp0_stage0_iter5;
wire    ap_block_state25_pp0_stage0_iter6;
wire    ap_block_state29_pp0_stage0_iter7;
wire    ap_block_state33_pp0_stage0_iter8;
wire    ap_block_state37_pp0_stage0_iter9;
wire    ap_block_state41_pp0_stage0_iter10;
wire    ap_block_state45_pp0_stage0_iter11;
wire    ap_block_state49_pp0_stage0_iter12;
wire    ap_block_state53_pp0_stage0_iter13;
wire    ap_block_state57_pp0_stage0_iter14;
wire    ap_block_state61_pp0_stage0_iter15;
wire    ap_block_state65_pp0_stage0_iter16;
wire    ap_block_state69_pp0_stage0_iter17;
wire    ap_block_state73_pp0_stage0_iter18;
wire    ap_block_state77_pp0_stage0_iter19;
wire    ap_block_state81_pp0_stage0_iter20;
wire    ap_block_state85_pp0_stage0_iter21;
wire    ap_block_state89_pp0_stage0_iter22;
wire    ap_block_pp0_stage0_11001;
reg   [13:0] trunc_ln26_1_reg_495_pp0_iter18_reg;
reg   [13:0] trunc_ln26_1_reg_495_pp0_iter19_reg;
reg   [13:0] trunc_ln26_1_reg_495_pp0_iter20_reg;
wire   [13:0] grp_fu_159_p2;
reg   [13:0] urem_ln26_2_reg_501;
wire   [13:0] trunc_ln26_2_fu_185_p1;
reg   [13:0] trunc_ln26_2_reg_506;
wire    ap_block_pp0_stage3_11001;
reg   [13:0] trunc_ln26_2_reg_506_pp0_iter18_reg;
reg   [13:0] trunc_ln26_2_reg_506_pp0_iter19_reg;
reg   [13:0] trunc_ln26_2_reg_506_pp0_iter20_reg;
reg   [0:0] tmp_8_reg_517;
wire   [13:0] grp_fu_179_p2;
reg   [13:0] urem_ln26_1_reg_526;
reg   [12:0] M_0_addr_reg_536;
reg   [12:0] M_1_addr_reg_541;
reg   [0:0] tmp_9_reg_551;
wire   [0:0] tmp_10_fu_342_p3;
reg   [0:0] tmp_10_reg_556;
reg   [12:0] M_0_addr_1_reg_560;
reg   [12:0] M_1_addr_1_reg_565;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_condition_exit_pp0_iter21_stage3;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln26_2_fu_217_p1;
wire    ap_block_pp0_stage2;
wire   [63:0] zext_ln26_5_fu_336_p1;
wire    ap_block_pp0_stage0;
reg   [63:0] b_idx_0_fu_60;
wire   [63:0] add_ln25_fu_165_p2;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
wire   [63:0] or_ln26_2_fu_274_p2;
wire    ap_block_pp0_stage3;
wire   [63:0] or_ln26_4_fu_400_p2;
wire   [63:0] or_ln26_1_fu_313_p2;
wire   [63:0] or_ln26_3_fu_439_p2;
wire   [63:0] shl_ln26_fu_118_p2;
wire   [63:0] grp_fu_130_p0;
wire   [14:0] grp_fu_130_p1;
wire   [63:0] or_ln25_fu_136_p2;
wire   [63:0] shl_ln26_7_fu_147_p2;
wire   [63:0] grp_fu_159_p0;
wire   [14:0] grp_fu_159_p1;
wire   [13:0] grp_fu_130_p2;
wire   [13:0] grp_fu_179_p0;
wire   [13:0] grp_fu_188_p0;
wire   [63:0] grp_fu_197_p0;
wire   [65:0] grp_fu_197_p1;
wire   [78:0] grp_fu_197_p2;
wire   [28:0] tmp_fu_222_p1;
wire  signed [28:0] grp_fu_446_p2;
wire   [0:0] tmp_fu_222_p3;
wire   [5:0] shl_ln26_2_fu_229_p3;
wire   [63:0] zext_ln26_6_fu_242_p1;
wire   [63:0] shl_ln26_5_fu_246_p2;
wire   [63:0] xor_ln26_1_fu_252_p2;
wire   [31:0] sub_ln26_fu_237_p2;
wire   [63:0] zext_ln26_7_fu_264_p1;
wire   [63:0] and_ln26_1_fu_258_p2;
wire   [63:0] shl_ln26_6_fu_268_p2;
wire   [63:0] zext_ln26_3_fu_281_p1;
wire   [63:0] shl_ln26_3_fu_285_p2;
wire   [63:0] xor_ln26_fu_291_p2;
wire   [63:0] zext_ln26_4_fu_303_p1;
wire   [63:0] and_ln26_fu_297_p2;
wire   [63:0] shl_ln26_4_fu_307_p2;
wire   [63:0] grp_fu_323_p0;
wire   [65:0] grp_fu_323_p1;
wire   [28:0] tmp_9_fu_329_p1;
wire  signed [28:0] grp_fu_453_p2;
wire   [13:0] grp_fu_188_p2;
wire   [78:0] grp_fu_323_p2;
wire   [31:0] or_ln26_fu_350_p2;
wire   [5:0] shl_ln26_1_fu_355_p3;
wire   [63:0] zext_ln26_12_fu_368_p1;
wire   [63:0] shl_ln26_10_fu_372_p2;
wire   [63:0] xor_ln26_3_fu_378_p2;
wire   [31:0] sub_ln26_1_fu_362_p2;
wire   [63:0] zext_ln26_13_fu_390_p1;
wire   [63:0] and_ln26_3_fu_384_p2;
wire   [63:0] shl_ln26_11_fu_394_p2;
wire   [63:0] zext_ln26_10_fu_407_p1;
wire   [63:0] shl_ln26_8_fu_411_p2;
wire   [63:0] xor_ln26_2_fu_417_p2;
wire   [63:0] zext_ln26_11_fu_429_p1;
wire   [63:0] and_ln26_2_fu_423_p2;
wire   [63:0] shl_ln26_9_fu_433_p2;
wire   [13:0] grp_fu_446_p0;
wire   [14:0] grp_fu_446_p1;
wire   [13:0] grp_fu_453_p0;
wire   [14:0] grp_fu_453_p1;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg   [3:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to22;
wire    ap_block_pp0_stage2_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire   [78:0] grp_fu_197_p00;
wire   [78:0] grp_fu_323_p00;
wire   [28:0] grp_fu_446_p00;
wire   [28:0] grp_fu_453_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 4'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

needwun_urem_64ns_15ns_14_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 14 ))
urem_64ns_15ns_14_68_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_130_p0),
    .din1(grp_fu_130_p1),
    .ce(1'b1),
    .dout(grp_fu_130_p2)
);

needwun_urem_64ns_15ns_14_68_1 #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 14 ))
urem_64ns_15ns_14_68_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_159_p0),
    .din1(grp_fu_159_p1),
    .ce(1'b1),
    .dout(grp_fu_159_p2)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_179_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_179_p2)
);

needwun_urem_14ns_14ns_14_18_1 #(
    .ID( 1 ),
    .NUM_STAGE( 18 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 14 ))
urem_14ns_14ns_14_18_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_188_p0),
    .din1(14'd4161),
    .ce(1'b1),
    .dout(grp_fu_188_p2)
);

needwun_mul_64ns_66ns_79_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 79 ))
mul_64ns_66ns_79_2_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_197_p0),
    .din1(grp_fu_197_p1),
    .ce(1'b1),
    .dout(grp_fu_197_p2)
);

needwun_mul_64ns_66ns_79_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 79 ))
mul_64ns_66ns_79_2_1_U7(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_323_p0),
    .din1(grp_fu_323_p1),
    .ce(1'b1),
    .dout(grp_fu_323_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U8(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_446_p0),
    .din1(grp_fu_446_p1),
    .ce(1'b1),
    .dout(grp_fu_446_p2)
);

needwun_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U9(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_453_p0),
    .din1(grp_fu_453_p1),
    .ce(1'b1),
    .dout(grp_fu_453_p2)
);

needwun_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter21_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter21_stage3) | ((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)))) begin
            ap_enable_reg_pp0_iter22 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        b_idx_0_fu_60 <= 64'd0;
    end else if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln25_fu_141_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        b_idx_0_fu_60 <= add_ln25_fu_165_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_fu_342_p3 == 1'd0) & (icmp_ln25_reg_485_pp0_iter21_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        M_0_addr_1_reg_560 <= zext_ln26_5_fu_336_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_517 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        M_0_addr_reg_536 <= zext_ln26_2_fu_217_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_10_fu_342_p3 == 1'd1) & (icmp_ln25_reg_485_pp0_iter21_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        M_1_addr_1_reg_565 <= zext_ln26_5_fu_336_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_8_reg_517 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        M_1_addr_reg_541 <= zext_ln26_2_fu_217_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_fu_141_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln26_1_reg_489[63 : 1] <= add_ln26_1_fu_153_p2[63 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln26_1_reg_489_pp0_iter10_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter9_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter11_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter10_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter12_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter11_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter13_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter12_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter14_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter13_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter15_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter14_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter16_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter15_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter17_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter16_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter18_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter17_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter19_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter18_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter1_reg[63 : 1] <= add_ln26_1_reg_489[63 : 1];
        add_ln26_1_reg_489_pp0_iter20_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter19_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter21_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter20_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter2_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter1_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter3_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter2_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter4_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter3_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter5_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter4_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter6_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter5_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter7_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter6_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter8_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter7_reg[63 : 1];
        add_ln26_1_reg_489_pp0_iter9_reg[63 : 1] <= add_ln26_1_reg_489_pp0_iter8_reg[63 : 1];
        icmp_ln25_reg_485 <= icmp_ln25_fu_141_p2;
        icmp_ln25_reg_485_pp0_iter10_reg <= icmp_ln25_reg_485_pp0_iter9_reg;
        icmp_ln25_reg_485_pp0_iter11_reg <= icmp_ln25_reg_485_pp0_iter10_reg;
        icmp_ln25_reg_485_pp0_iter12_reg <= icmp_ln25_reg_485_pp0_iter11_reg;
        icmp_ln25_reg_485_pp0_iter13_reg <= icmp_ln25_reg_485_pp0_iter12_reg;
        icmp_ln25_reg_485_pp0_iter14_reg <= icmp_ln25_reg_485_pp0_iter13_reg;
        icmp_ln25_reg_485_pp0_iter15_reg <= icmp_ln25_reg_485_pp0_iter14_reg;
        icmp_ln25_reg_485_pp0_iter16_reg <= icmp_ln25_reg_485_pp0_iter15_reg;
        icmp_ln25_reg_485_pp0_iter17_reg <= icmp_ln25_reg_485_pp0_iter16_reg;
        icmp_ln25_reg_485_pp0_iter18_reg <= icmp_ln25_reg_485_pp0_iter17_reg;
        icmp_ln25_reg_485_pp0_iter19_reg <= icmp_ln25_reg_485_pp0_iter18_reg;
        icmp_ln25_reg_485_pp0_iter1_reg <= icmp_ln25_reg_485;
        icmp_ln25_reg_485_pp0_iter20_reg <= icmp_ln25_reg_485_pp0_iter19_reg;
        icmp_ln25_reg_485_pp0_iter21_reg <= icmp_ln25_reg_485_pp0_iter20_reg;
        icmp_ln25_reg_485_pp0_iter2_reg <= icmp_ln25_reg_485_pp0_iter1_reg;
        icmp_ln25_reg_485_pp0_iter3_reg <= icmp_ln25_reg_485_pp0_iter2_reg;
        icmp_ln25_reg_485_pp0_iter4_reg <= icmp_ln25_reg_485_pp0_iter3_reg;
        icmp_ln25_reg_485_pp0_iter5_reg <= icmp_ln25_reg_485_pp0_iter4_reg;
        icmp_ln25_reg_485_pp0_iter6_reg <= icmp_ln25_reg_485_pp0_iter5_reg;
        icmp_ln25_reg_485_pp0_iter7_reg <= icmp_ln25_reg_485_pp0_iter6_reg;
        icmp_ln25_reg_485_pp0_iter8_reg <= icmp_ln25_reg_485_pp0_iter7_reg;
        icmp_ln25_reg_485_pp0_iter9_reg <= icmp_ln25_reg_485_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        add_ln26_reg_479 <= add_ln26_fu_124_p2;
        add_ln26_reg_479_pp0_iter10_reg <= add_ln26_reg_479_pp0_iter9_reg;
        add_ln26_reg_479_pp0_iter11_reg <= add_ln26_reg_479_pp0_iter10_reg;
        add_ln26_reg_479_pp0_iter12_reg <= add_ln26_reg_479_pp0_iter11_reg;
        add_ln26_reg_479_pp0_iter13_reg <= add_ln26_reg_479_pp0_iter12_reg;
        add_ln26_reg_479_pp0_iter14_reg <= add_ln26_reg_479_pp0_iter13_reg;
        add_ln26_reg_479_pp0_iter15_reg <= add_ln26_reg_479_pp0_iter14_reg;
        add_ln26_reg_479_pp0_iter16_reg <= add_ln26_reg_479_pp0_iter15_reg;
        add_ln26_reg_479_pp0_iter17_reg <= add_ln26_reg_479_pp0_iter16_reg;
        add_ln26_reg_479_pp0_iter18_reg <= add_ln26_reg_479_pp0_iter17_reg;
        add_ln26_reg_479_pp0_iter19_reg <= add_ln26_reg_479_pp0_iter18_reg;
        add_ln26_reg_479_pp0_iter1_reg <= add_ln26_reg_479;
        add_ln26_reg_479_pp0_iter20_reg <= add_ln26_reg_479_pp0_iter19_reg;
        add_ln26_reg_479_pp0_iter2_reg <= add_ln26_reg_479_pp0_iter1_reg;
        add_ln26_reg_479_pp0_iter3_reg <= add_ln26_reg_479_pp0_iter2_reg;
        add_ln26_reg_479_pp0_iter4_reg <= add_ln26_reg_479_pp0_iter3_reg;
        add_ln26_reg_479_pp0_iter5_reg <= add_ln26_reg_479_pp0_iter4_reg;
        add_ln26_reg_479_pp0_iter6_reg <= add_ln26_reg_479_pp0_iter5_reg;
        add_ln26_reg_479_pp0_iter7_reg <= add_ln26_reg_479_pp0_iter6_reg;
        add_ln26_reg_479_pp0_iter8_reg <= add_ln26_reg_479_pp0_iter7_reg;
        add_ln26_reg_479_pp0_iter9_reg <= add_ln26_reg_479_pp0_iter8_reg;
        b_idx_0_load_reg_467 <= b_idx_0_fu_60;
        trunc_ln26_reg_473 <= trunc_ln26_fu_114_p1;
        trunc_ln26_reg_473_pp0_iter10_reg <= trunc_ln26_reg_473_pp0_iter9_reg;
        trunc_ln26_reg_473_pp0_iter11_reg <= trunc_ln26_reg_473_pp0_iter10_reg;
        trunc_ln26_reg_473_pp0_iter12_reg <= trunc_ln26_reg_473_pp0_iter11_reg;
        trunc_ln26_reg_473_pp0_iter13_reg <= trunc_ln26_reg_473_pp0_iter12_reg;
        trunc_ln26_reg_473_pp0_iter14_reg <= trunc_ln26_reg_473_pp0_iter13_reg;
        trunc_ln26_reg_473_pp0_iter15_reg <= trunc_ln26_reg_473_pp0_iter14_reg;
        trunc_ln26_reg_473_pp0_iter16_reg <= trunc_ln26_reg_473_pp0_iter15_reg;
        trunc_ln26_reg_473_pp0_iter17_reg <= trunc_ln26_reg_473_pp0_iter16_reg;
        trunc_ln26_reg_473_pp0_iter18_reg <= trunc_ln26_reg_473_pp0_iter17_reg;
        trunc_ln26_reg_473_pp0_iter19_reg <= trunc_ln26_reg_473_pp0_iter18_reg;
        trunc_ln26_reg_473_pp0_iter1_reg <= trunc_ln26_reg_473;
        trunc_ln26_reg_473_pp0_iter20_reg <= trunc_ln26_reg_473_pp0_iter19_reg;
        trunc_ln26_reg_473_pp0_iter21_reg <= trunc_ln26_reg_473_pp0_iter20_reg;
        trunc_ln26_reg_473_pp0_iter2_reg <= trunc_ln26_reg_473_pp0_iter1_reg;
        trunc_ln26_reg_473_pp0_iter3_reg <= trunc_ln26_reg_473_pp0_iter2_reg;
        trunc_ln26_reg_473_pp0_iter4_reg <= trunc_ln26_reg_473_pp0_iter3_reg;
        trunc_ln26_reg_473_pp0_iter5_reg <= trunc_ln26_reg_473_pp0_iter4_reg;
        trunc_ln26_reg_473_pp0_iter6_reg <= trunc_ln26_reg_473_pp0_iter5_reg;
        trunc_ln26_reg_473_pp0_iter7_reg <= trunc_ln26_reg_473_pp0_iter6_reg;
        trunc_ln26_reg_473_pp0_iter8_reg <= trunc_ln26_reg_473_pp0_iter7_reg;
        trunc_ln26_reg_473_pp0_iter9_reg <= trunc_ln26_reg_473_pp0_iter8_reg;
        urem_ln26_1_reg_526 <= grp_fu_179_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        tmp_8_reg_517 <= grp_fu_197_p2[32'd78];
        trunc_ln26_2_reg_506_pp0_iter18_reg <= trunc_ln26_2_reg_506;
        trunc_ln26_2_reg_506_pp0_iter19_reg <= trunc_ln26_2_reg_506_pp0_iter18_reg;
        trunc_ln26_2_reg_506_pp0_iter20_reg <= trunc_ln26_2_reg_506_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_485_pp0_iter21_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        tmp_10_reg_556 <= grp_fu_323_p2[32'd78];
        tmp_9_reg_551 <= tmp_9_fu_329_p1[32'd27];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        trunc_ln26_1_reg_495 <= trunc_ln26_1_fu_175_p1;
        trunc_ln26_1_reg_495_pp0_iter18_reg <= trunc_ln26_1_reg_495;
        trunc_ln26_1_reg_495_pp0_iter19_reg <= trunc_ln26_1_reg_495_pp0_iter18_reg;
        trunc_ln26_1_reg_495_pp0_iter20_reg <= trunc_ln26_1_reg_495_pp0_iter19_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_485_pp0_iter17_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        trunc_ln26_2_reg_506 <= trunc_ln26_2_fu_185_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_485_pp0_iter16_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        urem_ln26_2_reg_501 <= grp_fu_159_p2;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        M_0_address0 = M_0_addr_1_reg_560;
    end else if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        M_0_address0 = zext_ln26_5_fu_336_p1;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        M_0_address0 = M_0_addr_reg_536;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        M_0_address0 = zext_ln26_2_fu_217_p1;
    end else begin
        M_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        M_0_ce0 = 1'b1;
    end else begin
        M_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        M_0_d0 = or_ln26_4_fu_400_p2;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        M_0_d0 = or_ln26_2_fu_274_p2;
    end else begin
        M_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter22 == 1'b1) & (tmp_10_reg_556 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (tmp_8_reg_517 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        M_0_we0 = 1'b1;
    end else begin
        M_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        M_1_address0 = M_1_addr_1_reg_565;
    end else if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        M_1_address0 = zext_ln26_5_fu_336_p1;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        M_1_address0 = M_1_addr_reg_541;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2))) begin
        M_1_address0 = zext_ln26_2_fu_217_p1;
    end else begin
        M_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        M_1_ce0 = 1'b1;
    end else begin
        M_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        M_1_d0 = or_ln26_3_fu_439_p2;
    end else if (((ap_enable_reg_pp0_iter21 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3))) begin
        M_1_d0 = or_ln26_1_fu_313_p2;
    end else begin
        M_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter22 == 1'b1) & (tmp_10_reg_556 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter21 == 1'b1) & (tmp_8_reg_517 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)))) begin
        M_1_we0 = 1'b1;
    end else begin
        M_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln25_reg_485 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter21 == 1'b1) & (icmp_ln25_reg_485_pp0_iter21_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_condition_exit_pp0_iter21_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter21_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter21_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to22 = 1'b1;
    end else begin
        ap_idle_pp0_1to22 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to22 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln25_fu_165_p2 = (b_idx_0_load_reg_467 + 64'd2);

assign add_ln26_1_fu_153_p2 = (shl_ln26_7_fu_147_p2 + or_ln25_fu_136_p2);

assign add_ln26_fu_124_p2 = (shl_ln26_fu_118_p2 + b_idx_0_fu_60);

assign and_ln26_1_fu_258_p2 = (xor_ln26_1_fu_252_p2 & M_0_q0);

assign and_ln26_2_fu_423_p2 = (xor_ln26_2_fu_417_p2 & M_1_q0);

assign and_ln26_3_fu_384_p2 = (xor_ln26_3_fu_378_p2 & M_0_q0);

assign and_ln26_fu_297_p2 = (xor_ln26_fu_291_p2 & M_1_q0);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage1_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage2_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage3_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage1_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage2_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage3_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage1_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage2_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage3_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage2_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage3_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage1_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage2_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage3_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage2_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage3_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage1_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage2_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage3_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage1_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign grp_fu_130_p0 = (shl_ln26_fu_118_p2 + b_idx_0_fu_60);

assign grp_fu_130_p1 = 64'd8321;

assign grp_fu_159_p0 = (shl_ln26_7_fu_147_p2 + or_ln25_fu_136_p2);

assign grp_fu_159_p1 = 64'd8321;

assign grp_fu_179_p0 = grp_fu_130_p2[13:0];

assign grp_fu_188_p0 = urem_ln26_2_reg_501[13:0];

assign grp_fu_197_p0 = grp_fu_197_p00;

assign grp_fu_197_p00 = add_ln26_reg_479_pp0_iter20_reg;

assign grp_fu_197_p1 = 79'd36321530453510070145;

assign grp_fu_323_p0 = grp_fu_323_p00;

assign grp_fu_323_p00 = add_ln26_1_reg_489_pp0_iter21_reg;

assign grp_fu_323_p1 = 79'd36321530453510070145;

assign grp_fu_446_p0 = grp_fu_446_p00;

assign grp_fu_446_p00 = trunc_ln26_1_reg_495_pp0_iter20_reg;

assign grp_fu_446_p1 = 29'd32257;

assign grp_fu_453_p0 = grp_fu_453_p00;

assign grp_fu_453_p00 = trunc_ln26_2_reg_506_pp0_iter20_reg;

assign grp_fu_453_p1 = 29'd32257;

assign icmp_ln25_fu_141_p2 = ((or_ln25_fu_136_p2 == 64'd129) ? 1'b1 : 1'b0);

assign or_ln25_fu_136_p2 = (b_idx_0_load_reg_467 | 64'd1);

assign or_ln26_1_fu_313_p2 = (shl_ln26_4_fu_307_p2 | and_ln26_fu_297_p2);

assign or_ln26_2_fu_274_p2 = (shl_ln26_6_fu_268_p2 | and_ln26_1_fu_258_p2);

assign or_ln26_3_fu_439_p2 = (shl_ln26_9_fu_433_p2 | and_ln26_2_fu_423_p2);

assign or_ln26_4_fu_400_p2 = (shl_ln26_11_fu_394_p2 | and_ln26_3_fu_384_p2);

assign or_ln26_fu_350_p2 = (trunc_ln26_reg_473_pp0_iter21_reg | 32'd1);

assign shl_ln26_10_fu_372_p2 = 64'd4294967295 << zext_ln26_12_fu_368_p1;

assign shl_ln26_11_fu_394_p2 = zext_ln26_13_fu_390_p1 << zext_ln26_12_fu_368_p1;

assign shl_ln26_1_fu_355_p3 = {{tmp_9_reg_551}, {5'd0}};

assign shl_ln26_2_fu_229_p3 = {{tmp_fu_222_p3}, {5'd0}};

assign shl_ln26_3_fu_285_p2 = 64'd4294967295 << zext_ln26_3_fu_281_p1;

assign shl_ln26_4_fu_307_p2 = zext_ln26_4_fu_303_p1 << zext_ln26_3_fu_281_p1;

assign shl_ln26_5_fu_246_p2 = 64'd4294967295 << zext_ln26_6_fu_242_p1;

assign shl_ln26_6_fu_268_p2 = zext_ln26_7_fu_264_p1 << zext_ln26_6_fu_242_p1;

assign shl_ln26_7_fu_147_p2 = or_ln25_fu_136_p2 << 64'd7;

assign shl_ln26_8_fu_411_p2 = 64'd4294967295 << zext_ln26_10_fu_407_p1;

assign shl_ln26_9_fu_433_p2 = zext_ln26_11_fu_429_p1 << zext_ln26_10_fu_407_p1;

assign shl_ln26_fu_118_p2 = b_idx_0_fu_60 << 64'd7;

assign sub_ln26_1_fu_362_p2 = (32'd0 - or_ln26_fu_350_p2);

assign sub_ln26_fu_237_p2 = (32'd0 - trunc_ln26_reg_473_pp0_iter21_reg);

assign tmp_10_fu_342_p3 = grp_fu_323_p2[32'd78];

assign tmp_9_fu_329_p1 = grp_fu_453_p2;

assign tmp_fu_222_p1 = grp_fu_446_p2;

assign tmp_fu_222_p3 = tmp_fu_222_p1[32'd27];

assign trunc_ln26_1_fu_175_p1 = grp_fu_130_p2[13:0];

assign trunc_ln26_2_fu_185_p1 = urem_ln26_2_reg_501[13:0];

assign trunc_ln26_fu_114_p1 = b_idx_0_fu_60[31:0];

assign xor_ln26_1_fu_252_p2 = (shl_ln26_5_fu_246_p2 ^ 64'd18446744073709551615);

assign xor_ln26_2_fu_417_p2 = (shl_ln26_8_fu_411_p2 ^ 64'd18446744073709551615);

assign xor_ln26_3_fu_378_p2 = (shl_ln26_10_fu_372_p2 ^ 64'd18446744073709551615);

assign xor_ln26_fu_291_p2 = (shl_ln26_3_fu_285_p2 ^ 64'd18446744073709551615);

assign zext_ln26_10_fu_407_p1 = shl_ln26_1_fu_355_p3;

assign zext_ln26_11_fu_429_p1 = sub_ln26_1_fu_362_p2;

assign zext_ln26_12_fu_368_p1 = shl_ln26_1_fu_355_p3;

assign zext_ln26_13_fu_390_p1 = sub_ln26_1_fu_362_p2;

assign zext_ln26_2_fu_217_p1 = urem_ln26_1_reg_526;

assign zext_ln26_3_fu_281_p1 = shl_ln26_2_fu_229_p3;

assign zext_ln26_4_fu_303_p1 = sub_ln26_fu_237_p2;

assign zext_ln26_5_fu_336_p1 = grp_fu_188_p2;

assign zext_ln26_6_fu_242_p1 = shl_ln26_2_fu_229_p3;

assign zext_ln26_7_fu_264_p1 = sub_ln26_fu_237_p2;

always @ (posedge ap_clk) begin
    add_ln26_1_reg_489[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter1_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter2_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter3_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter4_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter5_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter6_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter7_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter8_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter9_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter10_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter11_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter12_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter13_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter14_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter15_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter16_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter17_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter18_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter19_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter20_reg[0] <= 1'b1;
    add_ln26_1_reg_489_pp0_iter21_reg[0] <= 1'b1;
end

endmodule //needwun_needwun_Pipeline_init_col
