// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ss_sort_hist_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        bucket_0_address0,
        bucket_0_ce0,
        bucket_0_we0,
        bucket_0_d0,
        bucket_0_q0,
        bucket_1_address0,
        bucket_1_ce0,
        bucket_1_we0,
        bucket_1_d0,
        bucket_1_q0,
        b_0_address0,
        b_0_ce0,
        b_0_q0,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        exp
);

parameter    ap_ST_fsm_pp0_stage0 = 3'd1;
parameter    ap_ST_fsm_pp0_stage1 = 3'd2;
parameter    ap_ST_fsm_pp0_stage2 = 3'd4;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [8:0] bucket_0_address0;
output   bucket_0_ce0;
output   bucket_0_we0;
output  [63:0] bucket_0_d0;
input  [63:0] bucket_0_q0;
output  [8:0] bucket_1_address0;
output   bucket_1_ce0;
output   bucket_1_we0;
output  [63:0] bucket_1_d0;
input  [63:0] bucket_1_q0;
output  [8:0] b_0_address0;
output   b_0_ce0;
input  [63:0] b_0_q0;
output  [8:0] b_1_address0;
output   b_1_ce0;
input  [63:0] b_1_q0;
input  [4:0] exp;

reg ap_idle;
reg[8:0] bucket_0_address0;
reg bucket_0_ce0;
reg bucket_0_we0;
reg[8:0] bucket_1_address0;
reg bucket_1_ce0;
reg bucket_1_we0;
reg b_0_ce0;
reg b_1_ce0;

(* fsm_encoding = "none" *) reg   [2:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln54_fu_188_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_subdone;
wire   [31:0] exp_cast_fu_166_p1;
reg   [31:0] exp_cast_reg_594;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln54_reg_599;
wire   [2:0] select_ln54_fu_212_p3;
reg   [2:0] select_ln54_reg_603;
wire   [9:0] select_ln54_1_fu_226_p3;
reg   [9:0] select_ln54_1_reg_610;
wire   [8:0] empty_25_fu_234_p1;
reg   [8:0] empty_25_reg_615;
reg   [8:0] bucket_0_addr_reg_633;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [8:0] bucket_1_addr_reg_638;
wire   [31:0] tmp_19_fu_369_p4;
reg   [31:0] tmp_19_reg_643;
wire   [5:0] shl_ln1_fu_445_p3;
reg   [5:0] shl_ln1_reg_648;
wire    ap_block_pp0_stage2_11001;
reg   [63:0] bucket_0_load_reg_653;
reg   [63:0] bucket_1_load_reg_658;
wire   [31:0] tmp_20_fu_481_p4;
reg   [31:0] tmp_20_reg_663;
reg   [0:0] tmp_35_reg_668;
reg    ap_enable_reg_pp0_iter0_reg;
wire   [63:0] zext_ln57_1_fu_260_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln58_fu_296_p1;
wire    ap_block_pp0_stage1;
reg   [2:0] i_fu_96;
wire   [2:0] add_ln55_fu_499_p2;
wire    ap_loop_init;
reg   [2:0] ap_sig_allocacmp_i_load;
reg   [9:0] blockID_fu_100;
reg   [9:0] ap_sig_allocacmp_blockID_load;
reg   [11:0] indvar_flatten_fu_104;
wire   [11:0] add_ln54_fu_194_p2;
reg   [11:0] ap_sig_allocacmp_indvar_flatten_load;
wire   [0:0] icmp_ln55_fu_206_p2;
wire   [9:0] add_ln54_1_fu_220_p2;
wire   [6:0] trunc_ln56_fu_238_p1;
wire   [8:0] zext_ln56_1_fu_250_p1;
wire   [8:0] trunc_ln56_1_fu_242_p3;
wire   [8:0] add_ln57_fu_254_p2;
wire   [8:0] add_ln52_fu_291_p2;
wire   [10:0] zext_ln55_1_fu_276_p1;
wire   [10:0] tmp_s_fu_279_p3;
wire   [9:0] zext_ln56_fu_302_p1;
wire   [9:0] shl_ln56_fu_286_p2;
wire   [10:0] add_ln56_fu_305_p2;
wire   [9:0] add_ln57_1_fu_311_p2;
wire   [0:0] tmp_33_fu_325_p3;
wire   [5:0] and_ln_fu_333_p3;
wire   [63:0] zext_ln57_2_fu_341_p1;
wire   [63:0] lshr_ln57_fu_345_p2;
wire   [63:0] zext_ln57_4_fu_355_p1;
wire   [63:0] lshr_ln57_1_fu_359_p2;
wire   [31:0] tmp_19_fu_369_p1;
wire   [31:0] tmp_19_fu_369_p2;
wire   [0:0] tmp_19_fu_369_p3;
wire    ap_block_pp0_stage2;
wire   [31:0] ashr_ln57_fu_385_p2;
wire   [1:0] trunc_ln57_2_fu_389_p1;
wire   [10:0] shl_ln_fu_393_p3;
wire   [10:0] or_ln57_fu_401_p2;
wire   [11:0] zext_ln57_3_fu_407_p1;
wire   [11:0] zext_ln55_fu_379_p1;
wire   [9:0] trunc_ln57_3_fu_411_p1;
wire   [9:0] zext_ln57_fu_382_p1;
wire   [11:0] bucket_indx_fu_415_p2;
wire   [9:0] add_ln52_1_fu_421_p2;
wire   [0:0] tmp_34_fu_437_p3;
wire   [63:0] zext_ln58_1_fu_453_p1;
wire   [63:0] lshr_ln58_fu_457_p2;
wire   [63:0] zext_ln58_2_fu_467_p1;
wire   [63:0] lshr_ln58_1_fu_471_p2;
wire   [31:0] tmp_20_fu_481_p1;
wire   [31:0] tmp_20_fu_481_p2;
wire   [1:0] tmp_20_fu_481_p3;
wire   [63:0] zext_ln58_3_fu_514_p1;
wire   [63:0] shl_ln58_fu_517_p2;
wire   [63:0] xor_ln58_fu_523_p2;
wire   [31:0] add_ln58_fu_509_p2;
wire   [63:0] zext_ln58_5_fu_534_p1;
wire   [63:0] and_ln58_1_fu_529_p2;
wire   [63:0] shl_ln58_2_fu_538_p2;
wire   [63:0] zext_ln58_4_fu_556_p1;
wire   [63:0] and_ln58_fu_551_p2;
wire   [63:0] shl_ln58_1_fu_560_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [2:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 3'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

ss_sort_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U3(
    .din0(tmp_19_fu_369_p1),
    .din1(tmp_19_fu_369_p2),
    .din2(tmp_19_fu_369_p3),
    .dout(tmp_19_fu_369_p4)
);

ss_sort_mux_22_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
mux_22_32_1_1_U4(
    .din0(tmp_20_fu_481_p1),
    .din1(tmp_20_fu_481_p2),
    .din2(tmp_20_fu_481_p3),
    .dout(tmp_20_fu_481_p4)
);

ss_sort_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln54_fu_188_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            blockID_fu_100 <= select_ln54_1_fu_226_p3;
        end else if ((ap_loop_init == 1'b1)) begin
            blockID_fu_100 <= 10'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        i_fu_96 <= 3'd0;
    end else if (((icmp_ln54_reg_599 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        i_fu_96 <= add_ln55_fu_499_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln54_fu_188_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            indvar_flatten_fu_104 <= add_ln54_fu_194_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            indvar_flatten_fu_104 <= 12'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_599 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bucket_0_addr_reg_633 <= zext_ln58_fu_296_p1;
        bucket_1_addr_reg_638 <= zext_ln58_fu_296_p1;
        tmp_19_reg_643 <= tmp_19_fu_369_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_599 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        bucket_0_load_reg_653 <= bucket_0_q0;
        bucket_1_load_reg_658 <= bucket_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_fu_188_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        empty_25_reg_615 <= empty_25_fu_234_p1;
        select_ln54_1_reg_610 <= select_ln54_1_fu_226_p3;
        select_ln54_reg_603 <= select_ln54_fu_212_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exp_cast_reg_594[4 : 0] <= exp_cast_fu_166_p1[4 : 0];
        icmp_ln54_reg_599 <= icmp_ln54_fu_188_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln54_reg_599 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        shl_ln1_reg_648[5] <= shl_ln1_fu_445_p3[5];
        tmp_20_reg_663 <= tmp_20_fu_481_p4;
        tmp_35_reg_668 <= bucket_indx_fu_415_p2[32'd10];
    end
end

always @ (*) begin
    if (((icmp_ln54_fu_188_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_blockID_load = 10'd0;
    end else begin
        ap_sig_allocacmp_blockID_load = blockID_fu_100;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_i_load = 3'd0;
    end else begin
        ap_sig_allocacmp_i_load = i_fu_96;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_indvar_flatten_load = 12'd0;
    end else begin
        ap_sig_allocacmp_indvar_flatten_load = indvar_flatten_fu_104;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_0_ce0 = 1'b1;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_0_address0 = bucket_0_addr_reg_633;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bucket_0_address0 = zext_ln58_fu_296_p1;
    end else begin
        bucket_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        bucket_0_ce0 = 1'b1;
    end else begin
        bucket_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_35_reg_668 == 1'd0))) begin
        bucket_0_we0 = 1'b1;
    end else begin
        bucket_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        bucket_1_address0 = bucket_1_addr_reg_638;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bucket_1_address0 = zext_ln58_fu_296_p1;
    end else begin
        bucket_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        bucket_1_ce0 = 1'b1;
    end else begin
        bucket_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_35_reg_668 == 1'd1))) begin
        bucket_1_we0 = 1'b1;
    end else begin
        bucket_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln52_1_fu_421_p2 = (trunc_ln57_3_fu_411_p1 + zext_ln57_fu_382_p1);

assign add_ln52_fu_291_p2 = (empty_25_reg_615 + 9'd1);

assign add_ln54_1_fu_220_p2 = (ap_sig_allocacmp_blockID_load + 10'd1);

assign add_ln54_fu_194_p2 = (ap_sig_allocacmp_indvar_flatten_load + 12'd1);

assign add_ln55_fu_499_p2 = (select_ln54_reg_603 + 3'd1);

assign add_ln56_fu_305_p2 = (zext_ln55_1_fu_276_p1 + tmp_s_fu_279_p3);

assign add_ln57_1_fu_311_p2 = (zext_ln56_fu_302_p1 + shl_ln56_fu_286_p2);

assign add_ln57_fu_254_p2 = (zext_ln56_1_fu_250_p1 + trunc_ln56_1_fu_242_p3);

assign add_ln58_fu_509_p2 = (tmp_20_reg_663 + 32'd1);

assign and_ln58_1_fu_529_p2 = (xor_ln58_fu_523_p2 & bucket_0_load_reg_653);

assign and_ln58_fu_551_p2 = (xor_ln58_fu_523_p2 & bucket_1_load_reg_658);

assign and_ln_fu_333_p3 = {{tmp_33_fu_325_p3}, {5'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ashr_ln57_fu_385_p2 = $signed(tmp_19_reg_643) >>> exp_cast_reg_594;

assign b_0_address0 = zext_ln57_1_fu_260_p1;

assign b_1_address0 = zext_ln57_1_fu_260_p1;

assign bucket_0_d0 = (shl_ln58_2_fu_538_p2 | and_ln58_1_fu_529_p2);

assign bucket_1_d0 = (shl_ln58_1_fu_560_p2 | and_ln58_fu_551_p2);

assign bucket_indx_fu_415_p2 = (zext_ln57_3_fu_407_p1 + zext_ln55_fu_379_p1);

assign empty_25_fu_234_p1 = select_ln54_1_fu_226_p3[8:0];

assign exp_cast_fu_166_p1 = exp;

assign icmp_ln54_fu_188_p2 = ((ap_sig_allocacmp_indvar_flatten_load == 12'd2048) ? 1'b1 : 1'b0);

assign icmp_ln55_fu_206_p2 = ((ap_sig_allocacmp_i_load == 3'd4) ? 1'b1 : 1'b0);

assign lshr_ln57_1_fu_359_p2 = b_1_q0 >> zext_ln57_4_fu_355_p1;

assign lshr_ln57_fu_345_p2 = b_0_q0 >> zext_ln57_2_fu_341_p1;

assign lshr_ln58_1_fu_471_p2 = bucket_1_q0 >> zext_ln58_2_fu_467_p1;

assign lshr_ln58_fu_457_p2 = bucket_0_q0 >> zext_ln58_1_fu_453_p1;

assign or_ln57_fu_401_p2 = (shl_ln_fu_393_p3 | 11'd1);

assign select_ln54_1_fu_226_p3 = ((icmp_ln55_fu_206_p2[0:0] == 1'b1) ? add_ln54_1_fu_220_p2 : ap_sig_allocacmp_blockID_load);

assign select_ln54_fu_212_p3 = ((icmp_ln55_fu_206_p2[0:0] == 1'b1) ? 3'd0 : ap_sig_allocacmp_i_load);

assign shl_ln1_fu_445_p3 = {{tmp_34_fu_437_p3}, {5'd0}};

assign shl_ln56_fu_286_p2 = select_ln54_1_reg_610 << 10'd2;

assign shl_ln58_1_fu_560_p2 = zext_ln58_4_fu_556_p1 << zext_ln58_3_fu_514_p1;

assign shl_ln58_2_fu_538_p2 = zext_ln58_5_fu_534_p1 << zext_ln58_3_fu_514_p1;

assign shl_ln58_fu_517_p2 = 64'd4294967295 << zext_ln58_3_fu_514_p1;

assign shl_ln_fu_393_p3 = {{trunc_ln57_2_fu_389_p1}, {9'd0}};

assign tmp_19_fu_369_p1 = lshr_ln57_fu_345_p2[31:0];

assign tmp_19_fu_369_p2 = lshr_ln57_1_fu_359_p2[31:0];

assign tmp_19_fu_369_p3 = add_ln56_fu_305_p2[32'd10];

assign tmp_20_fu_481_p1 = lshr_ln58_fu_457_p2[31:0];

assign tmp_20_fu_481_p2 = lshr_ln58_1_fu_471_p2[31:0];

assign tmp_20_fu_481_p3 = {{bucket_indx_fu_415_p2[11:10]}};

assign tmp_33_fu_325_p3 = add_ln57_1_fu_311_p2[32'd9];

assign tmp_34_fu_437_p3 = add_ln52_1_fu_421_p2[32'd9];

assign tmp_s_fu_279_p3 = {{empty_25_reg_615}, {2'd0}};

assign trunc_ln56_1_fu_242_p3 = {{trunc_ln56_fu_238_p1}, {2'd0}};

assign trunc_ln56_fu_238_p1 = select_ln54_1_fu_226_p3[6:0];

assign trunc_ln57_2_fu_389_p1 = ashr_ln57_fu_385_p2[1:0];

assign trunc_ln57_3_fu_411_p1 = or_ln57_fu_401_p2[9:0];

assign xor_ln58_fu_523_p2 = (shl_ln58_fu_517_p2 ^ 64'd18446744073709551615);

assign zext_ln55_1_fu_276_p1 = select_ln54_reg_603;

assign zext_ln55_fu_379_p1 = empty_25_reg_615;

assign zext_ln56_1_fu_250_p1 = select_ln54_fu_212_p3;

assign zext_ln56_fu_302_p1 = select_ln54_reg_603;

assign zext_ln57_1_fu_260_p1 = add_ln57_fu_254_p2;

assign zext_ln57_2_fu_341_p1 = and_ln_fu_333_p3;

assign zext_ln57_3_fu_407_p1 = or_ln57_fu_401_p2;

assign zext_ln57_4_fu_355_p1 = and_ln_fu_333_p3;

assign zext_ln57_fu_382_p1 = empty_25_reg_615;

assign zext_ln58_1_fu_453_p1 = shl_ln1_fu_445_p3;

assign zext_ln58_2_fu_467_p1 = shl_ln1_fu_445_p3;

assign zext_ln58_3_fu_514_p1 = shl_ln1_reg_648;

assign zext_ln58_4_fu_556_p1 = add_ln58_fu_509_p2;

assign zext_ln58_5_fu_534_p1 = add_ln58_fu_509_p2;

assign zext_ln58_fu_296_p1 = add_ln52_fu_291_p2;

always @ (posedge ap_clk) begin
    exp_cast_reg_594[31:5] <= 27'b000000000000000000000000000;
    shl_ln1_reg_648[4:0] <= 5'b00000;
end

endmodule //ss_sort_hist_1
