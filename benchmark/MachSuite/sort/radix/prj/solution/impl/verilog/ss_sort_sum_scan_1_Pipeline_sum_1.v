// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ss_sort_sum_scan_1_Pipeline_sum_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sum_0_address0,
        sum_0_ce0,
        sum_0_we0,
        sum_0_d0,
        sum_0_q0,
        sum_0_address1,
        sum_0_ce1,
        sum_0_q1,
        sum_1_address0,
        sum_1_ce0,
        sum_1_we0,
        sum_1_d0,
        sum_1_q0,
        sum_1_address1,
        sum_1_ce1,
        sum_1_q1,
        bucket_0_address0,
        bucket_0_ce0,
        bucket_0_q0,
        bucket_0_address1,
        bucket_0_ce1,
        bucket_0_q1,
        bucket_1_address0,
        bucket_1_ce0,
        bucket_1_q0,
        bucket_1_address1,
        bucket_1_ce1,
        bucket_1_q1
);

parameter    ap_ST_fsm_pp0_stage0 = 6'd1;
parameter    ap_ST_fsm_pp0_stage1 = 6'd2;
parameter    ap_ST_fsm_pp0_stage2 = 6'd4;
parameter    ap_ST_fsm_pp0_stage3 = 6'd8;
parameter    ap_ST_fsm_pp0_stage4 = 6'd16;
parameter    ap_ST_fsm_pp0_stage5 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [4:0] sum_0_address0;
output   sum_0_ce0;
output   sum_0_we0;
output  [63:0] sum_0_d0;
input  [63:0] sum_0_q0;
output  [4:0] sum_0_address1;
output   sum_0_ce1;
input  [63:0] sum_0_q1;
output  [4:0] sum_1_address0;
output   sum_1_ce0;
output   sum_1_we0;
output  [63:0] sum_1_d0;
input  [63:0] sum_1_q0;
output  [4:0] sum_1_address1;
output   sum_1_ce1;
input  [63:0] sum_1_q1;
output  [8:0] bucket_0_address0;
output   bucket_0_ce0;
input  [63:0] bucket_0_q0;
output  [8:0] bucket_0_address1;
output   bucket_0_ce1;
input  [63:0] bucket_0_q1;
output  [8:0] bucket_1_address0;
output   bucket_1_ce0;
input  [63:0] bucket_1_q0;
output  [8:0] bucket_1_address1;
output   bucket_1_ce1;
input  [63:0] bucket_1_q1;

reg ap_idle;
reg[4:0] sum_0_address0;
reg sum_0_ce0;
reg sum_0_we0;
reg[63:0] sum_0_d0;
reg[4:0] sum_0_address1;
reg sum_0_ce1;
reg[4:0] sum_1_address0;
reg sum_1_ce0;
reg sum_1_we0;
reg[63:0] sum_1_d0;
reg[4:0] sum_1_address1;
reg sum_1_ce1;
reg bucket_0_ce0;
reg bucket_0_ce1;
reg bucket_1_ce0;
reg bucket_1_ce1;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln25_reg_952;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
reg   [63:0] reg_230;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
reg   [0:0] tmp_17_reg_933;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] tmp_20_reg_981;
reg   [63:0] reg_235;
reg   [63:0] radixID_0_load_reg_880;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [0:0] tmp_reg_887;
reg   [0:0] tmp_15_reg_902;
reg   [57:0] lshr_ln27_3_reg_917;
reg   [0:0] tmp_16_reg_922;
wire   [63:0] zext_ln27_5_fu_342_p1;
reg   [63:0] zext_ln27_5_reg_927;
wire   [0:0] tmp_17_fu_348_p3;
reg   [4:0] sum_0_addr_1_reg_937;
reg   [4:0] sum_1_addr_1_reg_942;
wire   [4:0] add_ln25_2_fu_366_p2;
reg   [4:0] add_ln25_2_reg_947;
wire   [0:0] icmp_ln25_fu_384_p2;
reg   [53:0] lshr_ln27_4_reg_956;
reg   [0:0] tmp_18_reg_961;
reg   [0:0] tmp_19_reg_976;
wire   [31:0] add_ln27_1_fu_604_p2;
reg   [31:0] add_ln27_1_reg_985;
reg   [63:0] bucket_0_load_1_reg_991;
reg   [63:0] bucket_1_load_1_reg_996;
reg   [4:0] sum_0_addr_3_reg_1001;
reg   [4:0] sum_1_addr_3_reg_1007;
wire   [5:0] and_ln27_2_fu_615_p3;
reg   [5:0] and_ln27_2_reg_1013;
wire   [31:0] tmp_23_1_fu_731_p4;
reg   [31:0] tmp_23_1_reg_1019;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_11001;
wire   [31:0] add_ln27_2_fu_775_p2;
reg   [31:0] add_ln27_2_reg_1034;
wire    ap_block_pp0_stage5_11001;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state7_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln27_fu_298_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln27_3_fu_318_p1;
wire   [63:0] zext_ln27_7_fu_456_p1;
wire   [63:0] zext_ln27_9_fu_610_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage4;
reg   [63:0] radixID_0_fu_94;
wire   [63:0] add_ln25_1_fu_863_p2;
wire    ap_block_pp0_stage0_11001;
wire    ap_loop_init;
wire   [63:0] or_ln27_1_fu_653_p2;
wire    ap_block_pp0_stage3;
wire   [63:0] or_ln27_3_fu_818_p2;
wire    ap_block_pp0_stage0;
wire   [63:0] or_ln27_fu_691_p2;
wire   [63:0] or_ln27_2_fu_856_p2;
wire   [5:0] empty_21_fu_252_p1;
wire   [4:0] empty_fu_248_p1;
wire   [8:0] trunc_ln26_1_fu_264_p3;
wire   [5:0] add_ln27_5_fu_284_p2;
wire   [4:0] add_ln27_4_fu_278_p2;
wire   [9:0] trunc_ln_fu_256_p3;
wire   [9:0] add_ln26_2_fu_304_p2;
wire   [8:0] add_ln27_3_fu_272_p2;
wire   [6:0] trunc_ln25_fu_356_p1;
wire   [63:0] add_ln25_fu_360_p2;
wire   [5:0] trunc_ln26_fu_396_p1;
wire   [4:0] trunc_ln26_4_fu_408_p1;
wire   [63:0] shl_ln26_1_fu_390_p2;
wire   [8:0] trunc_ln26_3_fu_412_p3;
wire   [63:0] add_ln26_1_fu_420_p2;
wire   [9:0] trunc_ln26_2_fu_400_p3;
wire   [9:0] add_ln26_3_fu_442_p2;
wire   [8:0] add_ln27_6_fu_426_p2;
wire   [5:0] add_ln25_3_fu_372_p2;
wire   [6:0] add_ln25_4_fu_378_p2;
wire   [63:0] shl_ln26_fu_478_p2;
wire   [63:0] add_ln27_fu_489_p2;
wire   [5:0] and_ln_fu_504_p3;
wire   [63:0] zext_ln27_1_fu_511_p1;
wire   [63:0] lshr_ln27_fu_515_p2;
wire   [63:0] zext_ln27_2_fu_525_p1;
wire   [63:0] lshr_ln27_2_fu_529_p2;
wire   [31:0] tmp_s_fu_539_p1;
wire   [31:0] tmp_s_fu_539_p2;
wire   [57:0] tmp_s_fu_539_p3;
wire   [63:0] add_ln26_fu_483_p2;
wire   [5:0] and_ln27_1_fu_559_p3;
wire   [63:0] zext_ln27_4_fu_566_p1;
wire   [63:0] lshr_ln27_5_fu_570_p2;
wire   [63:0] zext_ln27_6_fu_580_p1;
wire   [63:0] lshr_ln27_6_fu_584_p2;
wire   [31:0] tmp_13_fu_594_p1;
wire   [31:0] tmp_13_fu_594_p2;
wire   [53:0] tmp_13_fu_594_p3;
wire   [31:0] tmp_13_fu_594_p4;
wire   [31:0] tmp_s_fu_539_p4;
wire   [63:0] zext_ln27_11_fu_622_p1;
wire   [63:0] shl_ln27_2_fu_626_p2;
wire   [63:0] xor_ln27_1_fu_632_p2;
wire   [63:0] zext_ln27_12_fu_644_p1;
wire   [63:0] and_ln27_5_fu_638_p2;
wire   [63:0] shl_ln27_3_fu_647_p2;
wire   [63:0] zext_ln27_8_fu_660_p1;
wire   [63:0] shl_ln27_fu_664_p2;
wire   [63:0] xor_ln27_fu_670_p2;
wire   [63:0] zext_ln27_10_fu_682_p1;
wire   [63:0] and_ln27_fu_676_p2;
wire   [63:0] shl_ln27_1_fu_685_p2;
wire   [5:0] and_ln27_3_fu_698_p3;
wire   [63:0] zext_ln27_15_fu_705_p1;
wire   [63:0] lshr_ln27_9_fu_709_p2;
wire   [63:0] zext_ln27_16_fu_718_p1;
wire   [63:0] lshr_ln27_10_fu_722_p2;
wire   [31:0] tmp_23_1_fu_731_p1;
wire   [31:0] tmp_23_1_fu_731_p2;
wire    ap_block_pp0_stage5;
wire   [63:0] zext_ln27_13_fu_740_p1;
wire   [63:0] lshr_ln27_7_fu_743_p2;
wire   [63:0] zext_ln27_14_fu_753_p1;
wire   [63:0] lshr_ln27_8_fu_756_p2;
wire   [31:0] tmp_20_1_fu_766_p1;
wire   [31:0] tmp_20_1_fu_766_p2;
wire   [31:0] tmp_20_1_fu_766_p4;
wire   [5:0] and_ln27_4_fu_780_p3;
wire   [63:0] zext_ln27_19_fu_787_p1;
wire   [63:0] shl_ln27_6_fu_791_p2;
wire   [63:0] xor_ln27_3_fu_797_p2;
wire   [63:0] zext_ln27_20_fu_809_p1;
wire   [63:0] and_ln27_7_fu_803_p2;
wire   [63:0] shl_ln27_7_fu_812_p2;
wire   [63:0] zext_ln27_17_fu_825_p1;
wire   [63:0] shl_ln27_4_fu_829_p2;
wire   [63:0] xor_ln27_2_fu_835_p2;
wire   [63:0] zext_ln27_18_fu_847_p1;
wire   [63:0] and_ln27_6_fu_841_p2;
wire   [63:0] shl_ln27_5_fu_850_p2;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
reg    ap_condition_744;
reg    ap_condition_748;
reg    ap_condition_751;
reg    ap_condition_754;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

ss_sort_mux_258_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 58 ),
    .dout_WIDTH( 32 ))
mux_258_32_1_1_U24(
    .din0(tmp_s_fu_539_p1),
    .din1(tmp_s_fu_539_p2),
    .din2(tmp_s_fu_539_p3),
    .dout(tmp_s_fu_539_p4)
);

ss_sort_mux_254_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 54 ),
    .dout_WIDTH( 32 ))
mux_254_32_1_1_U25(
    .din0(tmp_13_fu_594_p1),
    .din1(tmp_13_fu_594_p2),
    .din2(tmp_13_fu_594_p3),
    .dout(tmp_13_fu_594_p4)
);

ss_sort_mux_254_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 54 ),
    .dout_WIDTH( 32 ))
mux_254_32_1_1_U26(
    .din0(tmp_23_1_fu_731_p1),
    .din1(tmp_23_1_fu_731_p2),
    .din2(lshr_ln27_4_reg_956),
    .dout(tmp_23_1_fu_731_p4)
);

ss_sort_mux_258_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 58 ),
    .dout_WIDTH( 32 ))
mux_258_32_1_1_U27(
    .din0(tmp_20_1_fu_766_p1),
    .din1(tmp_20_1_fu_766_p2),
    .din2(lshr_ln27_3_reg_917),
    .dout(tmp_20_1_fu_766_p4)
);

ss_sort_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage5_subdone) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            radixID_0_fu_94 <= 64'd1;
        end else if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
            radixID_0_fu_94 <= add_ln25_1_fu_863_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_748)) begin
            reg_230 <= sum_0_q1;
        end else if ((1'b1 == ap_condition_744)) begin
            reg_230 <= sum_0_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if ((1'b1 == ap_condition_754)) begin
            reg_235 <= sum_1_q1;
        end else if ((1'b1 == ap_condition_751)) begin
            reg_235 <= sum_1_q0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln25_2_reg_947 <= add_ln25_2_fu_366_p2;
        icmp_ln25_reg_952 <= icmp_ln25_fu_384_p2;
        lshr_ln27_3_reg_917 <= {{radixID_0_fu_94[63:6]}};
        radixID_0_load_reg_880 <= radixID_0_fu_94;
        tmp_15_reg_902 <= add_ln26_2_fu_304_p2[32'd9];
        tmp_16_reg_922 <= radixID_0_fu_94[32'd5];
        tmp_17_reg_933 <= radixID_0_fu_94[32'd6];
        tmp_reg_887 <= add_ln27_5_fu_284_p2[32'd5];
        zext_ln27_5_reg_927[4 : 0] <= zext_ln27_5_fu_342_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln27_1_reg_985 <= add_ln27_1_fu_604_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        add_ln27_2_reg_1034 <= add_ln27_2_fu_775_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        and_ln27_2_reg_1013[5] <= and_ln27_2_fu_615_p3[5];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_952 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        bucket_0_load_1_reg_991 <= bucket_0_q0;
        bucket_1_load_1_reg_996 <= bucket_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln25_fu_384_p2 == 1'd0))) begin
        lshr_ln27_4_reg_956 <= {{add_ln26_1_fu_420_p2[63:10]}};
        tmp_18_reg_961 <= add_ln26_3_fu_442_p2[32'd9];
        tmp_19_reg_976 <= add_ln25_3_fu_372_p2[32'd5];
        tmp_20_reg_981 <= add_ln25_4_fu_378_p2[32'd6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_17_fu_348_p3 == 1'd0))) begin
        sum_0_addr_1_reg_937 <= zext_ln27_5_fu_342_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_952 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_20_reg_981 == 1'd0))) begin
        sum_0_addr_3_reg_1001 <= zext_ln27_9_fu_610_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (tmp_17_fu_348_p3 == 1'd1))) begin
        sum_1_addr_1_reg_942 <= zext_ln27_5_fu_342_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_952 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_20_reg_981 == 1'd1))) begin
        sum_1_addr_3_reg_1007 <= zext_ln27_9_fu_610_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln25_reg_952 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_23_1_reg_1019 <= tmp_23_1_fu_731_p4;
    end
end

always @ (*) begin
    if (((icmp_ln25_reg_952 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bucket_0_ce0 = 1'b1;
    end else begin
        bucket_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bucket_0_ce1 = 1'b1;
    end else begin
        bucket_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bucket_1_ce0 = 1'b1;
    end else begin
        bucket_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        bucket_1_ce1 = 1'b1;
    end else begin
        bucket_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_0_address0 = sum_0_addr_3_reg_1001;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sum_0_address0 = sum_0_addr_1_reg_937;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sum_0_address0 = zext_ln27_5_fu_342_p1;
    end else begin
        sum_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            sum_0_address1 = zext_ln27_5_reg_927;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            sum_0_address1 = zext_ln27_9_fu_610_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            sum_0_address1 = zext_ln27_fu_298_p1;
        end else begin
            sum_0_address1 = 'bx;
        end
    end else begin
        sum_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        sum_0_ce0 = 1'b1;
    end else begin
        sum_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        sum_0_ce1 = 1'b1;
    end else begin
        sum_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_0_d0 = or_ln27_3_fu_818_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sum_0_d0 = or_ln27_1_fu_653_p2;
    end else begin
        sum_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_reg_981 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_17_reg_933 == 1'd0)))) begin
        sum_0_we0 = 1'b1;
    end else begin
        sum_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_1_address0 = sum_1_addr_3_reg_1007;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sum_1_address0 = sum_1_addr_1_reg_942;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sum_1_address0 = zext_ln27_5_fu_342_p1;
    end else begin
        sum_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            sum_1_address1 = zext_ln27_5_reg_927;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            sum_1_address1 = zext_ln27_9_fu_610_p1;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            sum_1_address1 = zext_ln27_fu_298_p1;
        end else begin
            sum_1_address1 = 'bx;
        end
    end else begin
        sum_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        sum_1_ce0 = 1'b1;
    end else begin
        sum_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        sum_1_ce1 = 1'b1;
    end else begin
        sum_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        sum_1_d0 = or_ln27_2_fu_856_p2;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        sum_1_d0 = or_ln27_fu_691_p2;
    end else begin
        sum_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_20_reg_981 == 1'd1)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_17_reg_933 == 1'd1)))) begin
        sum_1_we0 = 1'b1;
    end else begin
        sum_1_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln25_1_fu_863_p2 = (radixID_0_load_reg_880 + 64'd2);

assign add_ln25_2_fu_366_p2 = (empty_fu_248_p1 + 5'd1);

assign add_ln25_3_fu_372_p2 = (empty_21_fu_252_p1 + 6'd1);

assign add_ln25_4_fu_378_p2 = (trunc_ln25_fu_356_p1 + 7'd1);

assign add_ln25_fu_360_p2 = (radixID_0_fu_94 + 64'd1);

assign add_ln26_1_fu_420_p2 = ($signed(shl_ln26_1_fu_390_p2) + $signed(64'd18446744073709551615));

assign add_ln26_2_fu_304_p2 = ($signed(trunc_ln_fu_256_p3) + $signed(10'd1008));

assign add_ln26_3_fu_442_p2 = ($signed(trunc_ln26_2_fu_400_p3) + $signed(10'd1008));

assign add_ln26_fu_483_p2 = ($signed(shl_ln26_fu_478_p2) + $signed(64'd18446744073709551615));

assign add_ln27_1_fu_604_p2 = (tmp_13_fu_594_p4 + tmp_s_fu_539_p4);

assign add_ln27_2_fu_775_p2 = (tmp_23_1_reg_1019 + tmp_20_1_fu_766_p4);

assign add_ln27_3_fu_272_p2 = ($signed(trunc_ln26_1_fu_264_p3) + $signed(9'd511));

assign add_ln27_4_fu_278_p2 = ($signed(empty_fu_248_p1) + $signed(5'd31));

assign add_ln27_5_fu_284_p2 = ($signed(empty_21_fu_252_p1) + $signed(6'd63));

assign add_ln27_6_fu_426_p2 = ($signed(trunc_ln26_3_fu_412_p3) + $signed(9'd511));

assign add_ln27_fu_489_p2 = ($signed(radixID_0_load_reg_880) + $signed(64'd18446744073709551615));

assign and_ln27_1_fu_559_p3 = {{tmp_15_reg_902}, {5'd0}};

assign and_ln27_2_fu_615_p3 = {{tmp_16_reg_922}, {5'd0}};

assign and_ln27_3_fu_698_p3 = {{tmp_18_reg_961}, {5'd0}};

assign and_ln27_4_fu_780_p3 = {{tmp_19_reg_976}, {5'd0}};

assign and_ln27_5_fu_638_p2 = (xor_ln27_1_fu_632_p2 & reg_230);

assign and_ln27_6_fu_841_p2 = (xor_ln27_2_fu_835_p2 & reg_235);

assign and_ln27_7_fu_803_p2 = (xor_ln27_3_fu_797_p2 & reg_230);

assign and_ln27_fu_676_p2 = (xor_ln27_fu_670_p2 & reg_235);

assign and_ln_fu_504_p3 = {{tmp_reg_887}, {5'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_744 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_17_reg_933 == 1'd0));
end

always @ (*) begin
    ap_condition_748 = ((icmp_ln25_reg_952 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_20_reg_981 == 1'd0));
end

always @ (*) begin
    ap_condition_751 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (tmp_17_reg_933 == 1'd1));
end

always @ (*) begin
    ap_condition_754 = ((icmp_ln25_reg_952 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (tmp_20_reg_981 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

assign bucket_0_address0 = zext_ln27_7_fu_456_p1;

assign bucket_0_address1 = zext_ln27_3_fu_318_p1;

assign bucket_1_address0 = zext_ln27_7_fu_456_p1;

assign bucket_1_address1 = zext_ln27_3_fu_318_p1;

assign empty_21_fu_252_p1 = radixID_0_fu_94[5:0];

assign empty_fu_248_p1 = radixID_0_fu_94[4:0];

assign icmp_ln25_fu_384_p2 = ((add_ln25_fu_360_p2 == 64'd128) ? 1'b1 : 1'b0);

assign lshr_ln27_10_fu_722_p2 = bucket_1_load_1_reg_996 >> zext_ln27_16_fu_718_p1;

assign lshr_ln27_2_fu_529_p2 = sum_1_q1 >> zext_ln27_2_fu_525_p1;

assign lshr_ln27_5_fu_570_p2 = bucket_0_q1 >> zext_ln27_4_fu_566_p1;

assign lshr_ln27_6_fu_584_p2 = bucket_1_q1 >> zext_ln27_6_fu_580_p1;

assign lshr_ln27_7_fu_743_p2 = sum_0_q1 >> zext_ln27_13_fu_740_p1;

assign lshr_ln27_8_fu_756_p2 = sum_1_q1 >> zext_ln27_14_fu_753_p1;

assign lshr_ln27_9_fu_709_p2 = bucket_0_load_1_reg_991 >> zext_ln27_15_fu_705_p1;

assign lshr_ln27_fu_515_p2 = sum_0_q1 >> zext_ln27_1_fu_511_p1;

assign or_ln27_1_fu_653_p2 = (shl_ln27_3_fu_647_p2 | and_ln27_5_fu_638_p2);

assign or_ln27_2_fu_856_p2 = (shl_ln27_5_fu_850_p2 | and_ln27_6_fu_841_p2);

assign or_ln27_3_fu_818_p2 = (shl_ln27_7_fu_812_p2 | and_ln27_7_fu_803_p2);

assign or_ln27_fu_691_p2 = (shl_ln27_1_fu_685_p2 | and_ln27_fu_676_p2);

assign shl_ln26_1_fu_390_p2 = add_ln25_fu_360_p2 << 64'd4;

assign shl_ln26_fu_478_p2 = radixID_0_load_reg_880 << 64'd4;

assign shl_ln27_1_fu_685_p2 = zext_ln27_10_fu_682_p1 << zext_ln27_8_fu_660_p1;

assign shl_ln27_2_fu_626_p2 = 64'd4294967295 << zext_ln27_11_fu_622_p1;

assign shl_ln27_3_fu_647_p2 = zext_ln27_12_fu_644_p1 << zext_ln27_11_fu_622_p1;

assign shl_ln27_4_fu_829_p2 = 64'd4294967295 << zext_ln27_17_fu_825_p1;

assign shl_ln27_5_fu_850_p2 = zext_ln27_18_fu_847_p1 << zext_ln27_17_fu_825_p1;

assign shl_ln27_6_fu_791_p2 = 64'd4294967295 << zext_ln27_19_fu_787_p1;

assign shl_ln27_7_fu_812_p2 = zext_ln27_20_fu_809_p1 << zext_ln27_19_fu_787_p1;

assign shl_ln27_fu_664_p2 = 64'd4294967295 << zext_ln27_8_fu_660_p1;

assign tmp_13_fu_594_p1 = lshr_ln27_5_fu_570_p2[31:0];

assign tmp_13_fu_594_p2 = lshr_ln27_6_fu_584_p2[31:0];

assign tmp_13_fu_594_p3 = {{add_ln26_fu_483_p2[63:10]}};

assign tmp_17_fu_348_p3 = radixID_0_fu_94[32'd6];

assign tmp_20_1_fu_766_p1 = lshr_ln27_7_fu_743_p2[31:0];

assign tmp_20_1_fu_766_p2 = lshr_ln27_8_fu_756_p2[31:0];

assign tmp_23_1_fu_731_p1 = lshr_ln27_9_fu_709_p2[31:0];

assign tmp_23_1_fu_731_p2 = lshr_ln27_10_fu_722_p2[31:0];

assign tmp_s_fu_539_p1 = lshr_ln27_fu_515_p2[31:0];

assign tmp_s_fu_539_p2 = lshr_ln27_2_fu_529_p2[31:0];

assign tmp_s_fu_539_p3 = {{add_ln27_fu_489_p2[63:6]}};

assign trunc_ln25_fu_356_p1 = radixID_0_fu_94[6:0];

assign trunc_ln26_1_fu_264_p3 = {{empty_fu_248_p1}, {4'd0}};

assign trunc_ln26_2_fu_400_p3 = {{trunc_ln26_fu_396_p1}, {4'd0}};

assign trunc_ln26_3_fu_412_p3 = {{trunc_ln26_4_fu_408_p1}, {4'd0}};

assign trunc_ln26_4_fu_408_p1 = add_ln25_fu_360_p2[4:0];

assign trunc_ln26_fu_396_p1 = add_ln25_fu_360_p2[5:0];

assign trunc_ln_fu_256_p3 = {{empty_21_fu_252_p1}, {4'd0}};

assign xor_ln27_1_fu_632_p2 = (shl_ln27_2_fu_626_p2 ^ 64'd18446744073709551615);

assign xor_ln27_2_fu_835_p2 = (shl_ln27_4_fu_829_p2 ^ 64'd18446744073709551615);

assign xor_ln27_3_fu_797_p2 = (shl_ln27_6_fu_791_p2 ^ 64'd18446744073709551615);

assign xor_ln27_fu_670_p2 = (shl_ln27_fu_664_p2 ^ 64'd18446744073709551615);

assign zext_ln27_10_fu_682_p1 = add_ln27_1_reg_985;

assign zext_ln27_11_fu_622_p1 = and_ln27_2_fu_615_p3;

assign zext_ln27_12_fu_644_p1 = add_ln27_1_reg_985;

assign zext_ln27_13_fu_740_p1 = and_ln27_2_reg_1013;

assign zext_ln27_14_fu_753_p1 = and_ln27_2_reg_1013;

assign zext_ln27_15_fu_705_p1 = and_ln27_3_fu_698_p3;

assign zext_ln27_16_fu_718_p1 = and_ln27_3_fu_698_p3;

assign zext_ln27_17_fu_825_p1 = and_ln27_4_fu_780_p3;

assign zext_ln27_18_fu_847_p1 = add_ln27_2_reg_1034;

assign zext_ln27_19_fu_787_p1 = and_ln27_4_fu_780_p3;

assign zext_ln27_1_fu_511_p1 = and_ln_fu_504_p3;

assign zext_ln27_20_fu_809_p1 = add_ln27_2_reg_1034;

assign zext_ln27_2_fu_525_p1 = and_ln_fu_504_p3;

assign zext_ln27_3_fu_318_p1 = add_ln27_3_fu_272_p2;

assign zext_ln27_4_fu_566_p1 = and_ln27_1_fu_559_p3;

assign zext_ln27_5_fu_342_p1 = empty_fu_248_p1;

assign zext_ln27_6_fu_580_p1 = and_ln27_1_fu_559_p3;

assign zext_ln27_7_fu_456_p1 = add_ln27_6_fu_426_p2;

assign zext_ln27_8_fu_660_p1 = and_ln27_2_fu_615_p3;

assign zext_ln27_9_fu_610_p1 = add_ln25_2_reg_947;

assign zext_ln27_fu_298_p1 = add_ln27_4_fu_278_p2;

always @ (posedge ap_clk) begin
    zext_ln27_5_reg_927[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    and_ln27_2_reg_1013[4:0] <= 5'b00000;
end

endmodule //ss_sort_sum_scan_1_Pipeline_sum_1
