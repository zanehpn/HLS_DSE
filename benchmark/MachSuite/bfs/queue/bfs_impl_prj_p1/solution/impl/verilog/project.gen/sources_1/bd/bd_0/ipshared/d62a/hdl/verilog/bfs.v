// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2.2 (64-bit)
// Version: 2022.2.2
// Copyright (C) Copyright 1986-2023 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bfs_bfs,hls_ip_2022_2_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.734000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=1,HLS_SYN_DSP=0,HLS_SYN_FF=2474,HLS_SYN_LUT=16992,HLS_VERSION=2022_2_2}" *)

module bfs (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        nodes_0_address0,
        nodes_0_ce0,
        nodes_0_q0,
        nodes_1_address0,
        nodes_1_ce0,
        nodes_1_q0,
        edges_0_address0,
        edges_0_ce0,
        edges_0_q0,
        edges_1_address0,
        edges_1_ce0,
        edges_1_q0,
        starting_node,
        level_0_address0,
        level_0_ce0,
        level_0_we0,
        level_0_d0,
        level_0_q0,
        level_1_address0,
        level_1_ce0,
        level_1_we0,
        level_1_d0,
        level_1_q0,
        level_counts_0_address0,
        level_counts_0_ce0,
        level_counts_0_we0,
        level_counts_0_d0,
        level_counts_0_q0,
        level_counts_1_address0,
        level_counts_1_ce0,
        level_counts_1_we0,
        level_counts_1_d0,
        level_counts_1_q0
);

parameter    ap_ST_fsm_state1 = 32'd1;
parameter    ap_ST_fsm_state2 = 32'd2;
parameter    ap_ST_fsm_state3 = 32'd4;
parameter    ap_ST_fsm_state4 = 32'd8;
parameter    ap_ST_fsm_state5 = 32'd16;
parameter    ap_ST_fsm_state6 = 32'd32;
parameter    ap_ST_fsm_state7 = 32'd64;
parameter    ap_ST_fsm_state8 = 32'd128;
parameter    ap_ST_fsm_state9 = 32'd256;
parameter    ap_ST_fsm_state10 = 32'd512;
parameter    ap_ST_fsm_state11 = 32'd1024;
parameter    ap_ST_fsm_state12 = 32'd2048;
parameter    ap_ST_fsm_state13 = 32'd4096;
parameter    ap_ST_fsm_state14 = 32'd8192;
parameter    ap_ST_fsm_state15 = 32'd16384;
parameter    ap_ST_fsm_state16 = 32'd32768;
parameter    ap_ST_fsm_state17 = 32'd65536;
parameter    ap_ST_fsm_state18 = 32'd131072;
parameter    ap_ST_fsm_state19 = 32'd262144;
parameter    ap_ST_fsm_state20 = 32'd524288;
parameter    ap_ST_fsm_state21 = 32'd1048576;
parameter    ap_ST_fsm_state22 = 32'd2097152;
parameter    ap_ST_fsm_state23 = 32'd4194304;
parameter    ap_ST_fsm_state24 = 32'd8388608;
parameter    ap_ST_fsm_state25 = 32'd16777216;
parameter    ap_ST_fsm_state26 = 32'd33554432;
parameter    ap_ST_fsm_state27 = 32'd67108864;
parameter    ap_ST_fsm_state28 = 32'd134217728;
parameter    ap_ST_fsm_state29 = 32'd268435456;
parameter    ap_ST_fsm_state30 = 32'd536870912;
parameter    ap_ST_fsm_state31 = 32'd1073741824;
parameter    ap_ST_fsm_state32 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] nodes_0_address0;
output   nodes_0_ce0;
input  [255:0] nodes_0_q0;
output  [5:0] nodes_1_address0;
output   nodes_1_ce0;
input  [255:0] nodes_1_q0;
output  [10:0] edges_0_address0;
output   edges_0_ce0;
input  [63:0] edges_0_q0;
output  [10:0] edges_1_address0;
output   edges_1_ce0;
input  [63:0] edges_1_q0;
input  [63:0] starting_node;
output  [6:0] level_0_address0;
output   level_0_ce0;
output   level_0_we0;
output  [7:0] level_0_d0;
input  [7:0] level_0_q0;
output  [6:0] level_1_address0;
output   level_1_ce0;
output   level_1_we0;
output  [7:0] level_1_d0;
input  [7:0] level_1_q0;
output  [1:0] level_counts_0_address0;
output   level_counts_0_ce0;
output   level_counts_0_we0;
output  [127:0] level_counts_0_d0;
input  [127:0] level_counts_0_q0;
output  [1:0] level_counts_1_address0;
output   level_counts_1_ce0;
output   level_counts_1_we0;
output  [127:0] level_counts_1_d0;
input  [127:0] level_counts_1_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] nodes_0_address0;
reg nodes_0_ce0;
reg[5:0] nodes_1_address0;
reg nodes_1_ce0;
reg[10:0] edges_0_address0;
reg edges_0_ce0;
reg[10:0] edges_1_address0;
reg edges_1_ce0;
reg[6:0] level_0_address0;
reg level_0_ce0;
reg level_0_we0;
reg[7:0] level_0_d0;
reg[6:0] level_1_address0;
reg level_1_ce0;
reg level_1_we0;
reg[7:0] level_1_d0;
reg[1:0] level_counts_0_address0;
reg level_counts_0_ce0;
reg level_counts_0_we0;
reg[127:0] level_counts_0_d0;
reg[1:0] level_counts_1_address0;
reg level_counts_1_ce0;
reg level_counts_1_we0;
reg[127:0] level_counts_1_d0;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] queue_q0;
reg   [7:0] reg_754;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state19;
wire   [1:0] level_counts_0_addr_reg_2078;
wire   [0:0] tmp_2_fu_815_p3;
reg   [0:0] tmp_2_reg_2089;
wire    ap_CS_fsm_state3;
wire   [7:0] q_out_1_fu_834_p2;
reg   [7:0] q_out_1_reg_2093;
wire   [0:0] and_ln35_fu_858_p2;
reg   [0:0] and_ln35_reg_2100;
wire   [6:0] trunc_ln20_fu_864_p1;
reg   [6:0] trunc_ln20_reg_2109;
reg   [0:0] tmp_3_reg_2114;
wire   [63:0] zext_ln39_fu_874_p1;
reg   [63:0] zext_ln39_reg_2131;
wire    ap_CS_fsm_state5;
wire   [8:0] zext_ln39_1_fu_877_p1;
reg   [8:0] zext_ln39_1_reg_2137;
wire   [63:0] tmp_begin_fu_919_p4;
wire   [63:0] tmp_end_fu_948_p4;
reg   [63:0] tmp_end_reg_2147;
reg   [6:0] level_0_addr_1_reg_2153;
reg   [6:0] level_1_addr_1_reg_2158;
wire   [0:0] icmp_ln41_fu_957_p2;
reg   [0:0] icmp_ln41_reg_2163;
wire    ap_CS_fsm_state6;
wire   [10:0] trunc_ln41_fu_962_p1;
reg   [10:0] trunc_ln41_reg_2167;
wire   [7:0] trunc_ln42_1_fu_994_p1;
reg   [7:0] trunc_ln42_1_reg_2182;
wire    ap_CS_fsm_state7;
reg   [0:0] tmp_6_reg_2187;
reg   [6:0] level_0_addr_2_reg_2192;
reg   [6:0] level_1_addr_2_reg_2197;
wire   [0:0] icmp_ln45_fu_1021_p2;
reg   [0:0] icmp_ln45_reg_2202;
wire    ap_CS_fsm_state8;
reg   [0:0] tmp_8_reg_2206;
wire    ap_CS_fsm_state9;
wire   [0:0] trunc_ln48_fu_1033_p1;
reg   [0:0] trunc_ln48_reg_2211;
reg   [1:0] level_counts_0_addr_1_reg_2216;
reg   [1:0] level_counts_1_addr_reg_2221;
wire   [6:0] shl_ln1_fu_1037_p3;
reg   [6:0] shl_ln1_reg_2226;
wire    ap_CS_fsm_state10;
reg   [127:0] level_counts_0_load_1_reg_2231;
reg   [127:0] level_counts_1_load_reg_2236;
wire   [63:0] tmp_s_fu_1072_p4;
reg   [63:0] tmp_s_reg_2241;
wire   [7:0] trunc_ln41_2_fu_1185_p1;
reg   [7:0] trunc_ln41_2_reg_2246;
wire    ap_CS_fsm_state11;
reg   [0:0] tmp_9_reg_2255;
wire   [0:0] icmp_ln41_1_fu_1210_p2;
wire   [7:0] trunc_ln42_3_fu_1279_p1;
reg   [7:0] trunc_ln42_3_reg_2279;
wire    ap_CS_fsm_state12;
reg   [0:0] tmp_10_reg_2284;
reg   [6:0] level_0_addr_3_reg_2289;
reg   [6:0] level_1_addr_3_reg_2294;
wire   [0:0] icmp_ln45_1_fu_1306_p2;
reg   [0:0] icmp_ln45_1_reg_2299;
wire    ap_CS_fsm_state13;
reg   [0:0] tmp_12_reg_2303;
wire    ap_CS_fsm_state14;
wire   [0:0] trunc_ln48_3_fu_1318_p1;
reg   [0:0] trunc_ln48_3_reg_2308;
reg   [1:0] level_counts_0_addr_2_reg_2313;
reg   [1:0] level_counts_1_addr_1_reg_2318;
wire   [6:0] shl_ln48_1_fu_1322_p3;
reg   [6:0] shl_ln48_1_reg_2323;
wire    ap_CS_fsm_state15;
reg   [127:0] level_counts_0_load_2_reg_2328;
reg   [127:0] level_counts_1_load_1_reg_2333;
wire   [63:0] add_ln48_1_fu_1366_p2;
reg   [63:0] add_ln48_1_reg_2338;
wire   [63:0] zext_ln18_1_fu_1458_p1;
wire    ap_CS_fsm_state16;
wire   [63:0] e_5_fu_1462_p2;
reg   [63:0] e_5_reg_2349;
wire    ap_CS_fsm_state18;
wire   [6:0] trunc_ln20_1_fu_1468_p1;
reg   [6:0] trunc_ln20_1_reg_2359;
reg   [0:0] tmp_11_reg_2364;
wire   [7:0] q_out_2_fu_1478_p2;
reg   [7:0] q_out_2_reg_2381;
wire    ap_CS_fsm_state20;
wire   [63:0] tmp_begin_1_fu_1523_p4;
wire   [63:0] tmp_end_1_fu_1552_p4;
reg   [63:0] tmp_end_1_reg_2391;
reg   [6:0] level_0_addr_4_reg_2397;
reg   [6:0] level_1_addr_4_reg_2402;
wire   [0:0] icmp_ln41_2_fu_1561_p2;
reg   [0:0] icmp_ln41_2_reg_2407;
wire    ap_CS_fsm_state21;
wire   [10:0] trunc_ln41_4_fu_1566_p1;
reg   [10:0] trunc_ln41_4_reg_2411;
wire   [7:0] trunc_ln42_5_fu_1598_p1;
reg   [7:0] trunc_ln42_5_reg_2426;
wire    ap_CS_fsm_state22;
reg   [0:0] tmp_14_reg_2431;
reg   [6:0] level_0_addr_5_reg_2436;
reg   [6:0] level_1_addr_5_reg_2441;
wire   [0:0] icmp_ln45_2_fu_1625_p2;
reg   [0:0] icmp_ln45_2_reg_2446;
wire    ap_CS_fsm_state23;
reg   [0:0] tmp_16_reg_2450;
wire    ap_CS_fsm_state24;
wire   [0:0] trunc_ln48_6_fu_1637_p1;
reg   [0:0] trunc_ln48_6_reg_2455;
reg   [1:0] level_counts_0_addr_3_reg_2460;
reg   [1:0] level_counts_1_addr_2_reg_2465;
wire   [6:0] shl_ln48_2_fu_1641_p3;
reg   [6:0] shl_ln48_2_reg_2470;
wire    ap_CS_fsm_state25;
reg   [127:0] level_counts_0_load_3_reg_2475;
reg   [127:0] level_counts_1_load_2_reg_2480;
wire   [63:0] add_ln48_2_fu_1685_p2;
reg   [63:0] add_ln48_2_reg_2485;
wire   [7:0] trunc_ln41_6_fu_1788_p1;
reg   [7:0] trunc_ln41_6_reg_2491;
wire    ap_CS_fsm_state26;
reg   [0:0] tmp_18_reg_2500;
wire   [0:0] icmp_ln41_3_fu_1813_p2;
wire   [7:0] trunc_ln42_7_fu_1859_p1;
reg   [7:0] trunc_ln42_7_reg_2515;
wire    ap_CS_fsm_state27;
reg   [0:0] tmp_19_reg_2520;
reg   [6:0] level_0_addr_6_reg_2525;
reg   [6:0] level_1_addr_6_reg_2530;
wire   [0:0] icmp_ln45_3_fu_1886_p2;
reg   [0:0] icmp_ln45_3_reg_2535;
wire    ap_CS_fsm_state28;
reg   [0:0] tmp_21_reg_2539;
wire    ap_CS_fsm_state29;
wire   [0:0] trunc_ln48_9_fu_1898_p1;
reg   [0:0] trunc_ln48_9_reg_2544;
reg   [1:0] level_counts_0_addr_4_reg_2549;
reg   [1:0] level_counts_1_addr_3_reg_2554;
wire   [6:0] shl_ln48_3_fu_1902_p3;
reg   [6:0] shl_ln48_3_reg_2559;
wire    ap_CS_fsm_state30;
reg   [127:0] level_counts_0_load_4_reg_2564;
reg   [127:0] level_counts_1_load_3_reg_2569;
wire   [63:0] add_ln48_3_fu_1946_p2;
reg   [63:0] add_ln48_3_reg_2574;
wire   [63:0] e_7_fu_2043_p2;
wire    ap_CS_fsm_state31;
reg   [7:0] queue_address0;
reg    queue_ce0;
reg    queue_we0;
reg   [7:0] queue_d0;
reg   [63:0] e_1_reg_553;
wire    ap_CS_fsm_state17;
reg   [63:0] q_in_1_reg_563;
wire   [63:0] zext_ln18_fu_1180_p1;
reg   [63:0] ap_phi_mux_q_in_3_phi_fu_576_p4;
reg   [63:0] q_in_3_reg_573;
reg   [63:0] ap_phi_mux_q_in_4_phi_fu_587_p4;
reg   [63:0] q_in_4_reg_584;
reg   [63:0] q_in_7_reg_596;
reg   [63:0] e_4_reg_608;
reg   [63:0] q_in_5_reg_618;
reg   [63:0] ap_phi_mux_q_in_12_phi_fu_644_p4;
wire   [63:0] zext_ln18_2_fu_1783_p1;
reg   [63:0] ap_phi_mux_q_in_9_phi_fu_632_p4;
reg   [63:0] q_in_9_reg_629;
wire   [63:0] zext_ln18_3_fu_2038_p1;
reg   [63:0] q_in_12_reg_640;
reg   [63:0] q_in_10_reg_652;
wire   [63:0] zext_ln30_fu_767_p1;
wire   [0:0] tmp_fu_773_p3;
wire   [63:0] zext_ln34_fu_823_p1;
wire   [63:0] zext_ln39_3_fu_868_p1;
wire   [63:0] zext_ln39_2_fu_880_p1;
wire   [63:0] zext_ln42_fu_966_p1;
wire   [63:0] zext_ln43_fu_998_p1;
wire   [63:0] zext_ln48_fu_1027_p1;
wire   [63:0] zext_ln49_fu_1169_p1;
wire   [63:0] zext_ln42_1_fu_1215_p1;
wire   [63:0] zext_ln43_1_fu_1283_p1;
wire   [63:0] zext_ln48_3_fu_1312_p1;
wire   [63:0] zext_ln49_1_fu_1448_p1;
wire   [63:0] zext_ln39_7_fu_1472_p1;
wire   [63:0] zext_ln39_5_fu_1484_p1;
wire   [63:0] zext_ln42_2_fu_1570_p1;
wire   [63:0] zext_ln43_2_fu_1602_p1;
wire   [63:0] zext_ln48_5_fu_1631_p1;
wire   [63:0] zext_ln49_2_fu_1772_p1;
wire   [63:0] zext_ln42_3_fu_1818_p1;
wire   [63:0] zext_ln43_3_fu_1863_p1;
wire   [63:0] zext_ln48_7_fu_1892_p1;
wire   [63:0] zext_ln49_3_fu_2028_p1;
reg   [7:0] q_out_fu_160;
reg   [8:0] dummy_fu_164;
wire   [8:0] dummy_3_fu_1832_p2;
reg   [63:0] q_in_fu_168;
wire    ap_CS_fsm_state32;
wire   [7:0] grp_fu_693_p2;
wire   [7:0] grp_fu_728_p2;
wire    ap_CS_fsm_state2;
wire   [127:0] tmp1_fu_796_p5;
wire   [127:0] or_ln48_1_fu_1116_p2;
wire   [127:0] or_ln48_3_fu_1401_p2;
wire   [127:0] or_ln48_5_fu_1720_p2;
wire   [127:0] or_ln48_7_fu_1981_p2;
wire   [7:0] empty_21_fu_762_p1;
wire   [127:0] or_ln48_fu_1138_p2;
wire   [127:0] or_ln48_2_fu_1422_p2;
wire   [127:0] or_ln48_4_fu_1741_p2;
wire   [127:0] or_ln48_6_fu_2002_p2;
wire   [7:0] grp_fu_684_p4;
wire   [7:0] grp_fu_719_p4;
wire   [6:0] empty_fu_758_p1;
wire   [8:0] or_ln_fu_840_p3;
wire   [63:0] zext_ln35_fu_848_p1;
wire   [0:0] icmp_ln35_fu_828_p2;
wire   [0:0] icmp_ln35_1_fu_852_p2;
wire   [5:0] grp_fu_674_p4;
wire   [7:0] shl_ln39_fu_885_p2;
wire   [255:0] zext_ln39_4_fu_891_p1;
wire   [255:0] lshr_ln39_fu_895_p2;
wire   [255:0] zext_ln39_6_fu_905_p1;
wire   [255:0] lshr_ln39_1_fu_909_p2;
wire   [63:0] tmp_begin_fu_919_p1;
wire   [63:0] tmp_begin_fu_919_p2;
wire   [63:0] tmp_end_fu_948_p1;
wire   [63:0] tmp_end_fu_948_p2;
wire   [0:0] tmp_dst_fu_980_p3;
wire   [63:0] tmp_dst_fu_980_p4;
wire   [6:0] trunc_ln42_fu_990_p1;
wire   [7:0] tmp_level_fu_1012_p4;
wire   [1:0] grp_fu_709_p4;
wire   [127:0] zext_ln48_1_fu_1044_p1;
wire   [127:0] lshr_ln48_fu_1048_p2;
wire   [127:0] zext_ln48_2_fu_1058_p1;
wire   [127:0] lshr_ln48_2_fu_1062_p2;
wire   [63:0] tmp_s_fu_1072_p1;
wire   [63:0] tmp_s_fu_1072_p2;
wire   [127:0] zext_ln48_4_fu_1086_p1;
wire   [127:0] shl_ln48_fu_1089_p2;
wire   [127:0] xor_ln48_fu_1095_p2;
wire   [63:0] add_ln48_fu_1081_p2;
wire   [127:0] zext_ln48_8_fu_1106_p1;
wire   [127:0] and_ln48_1_fu_1101_p2;
wire   [127:0] shl_ln48_5_fu_1110_p2;
wire   [127:0] zext_ln48_6_fu_1128_p1;
wire   [127:0] and_ln48_fu_1123_p2;
wire   [127:0] shl_ln48_4_fu_1132_p2;
wire   [7:0] trunc_ln41_1_fu_1151_p1;
wire   [0:0] icmp_ln49_fu_1145_p2;
wire   [7:0] add_ln49_fu_1155_p2;
wire   [7:0] select_ln49_fu_1161_p3;
wire   [7:0] q_in_14_fu_1174_p2;
wire   [11:0] trunc_ln41_3_fu_1200_p1;
wire   [63:0] e_2_fu_1189_p2;
wire   [10:0] add_ln21_fu_1195_p2;
wire   [11:0] add_ln21_1_fu_1204_p2;
wire   [8:0] add_ln38_fu_1234_p2;
wire   [0:0] icmp_ln35_4_fu_1243_p2;
wire   [0:0] icmp_ln35_5_fu_1249_p2;
wire   [63:0] zext_ln35_1_fu_1239_p1;
wire   [63:0] tmp_dst_1_fu_1266_p4;
wire   [6:0] trunc_ln42_2_fu_1275_p1;
wire   [7:0] tmp_level_2_fu_1297_p4;
wire   [127:0] zext_ln48_9_fu_1329_p1;
wire   [127:0] lshr_ln48_4_fu_1333_p2;
wire   [127:0] zext_ln48_10_fu_1343_p1;
wire   [127:0] lshr_ln48_6_fu_1347_p2;
wire   [63:0] tmp_1_fu_1357_p1;
wire   [63:0] tmp_1_fu_1357_p2;
wire   [63:0] tmp_1_fu_1357_p4;
wire   [127:0] zext_ln48_11_fu_1372_p1;
wire   [127:0] shl_ln48_6_fu_1375_p2;
wire   [127:0] xor_ln48_1_fu_1381_p2;
wire   [127:0] zext_ln48_13_fu_1392_p1;
wire   [127:0] and_ln48_3_fu_1387_p2;
wire   [127:0] shl_ln48_8_fu_1395_p2;
wire   [127:0] zext_ln48_12_fu_1413_p1;
wire   [127:0] and_ln48_2_fu_1408_p2;
wire   [127:0] shl_ln48_7_fu_1416_p2;
wire   [0:0] icmp_ln49_1_fu_1429_p2;
wire   [7:0] add_ln49_2_fu_1435_p2;
wire   [7:0] select_ln49_1_fu_1440_p3;
wire   [7:0] q_in_15_fu_1453_p2;
wire   [7:0] shl_ln39_1_fu_1489_p2;
wire   [255:0] zext_ln39_8_fu_1495_p1;
wire   [255:0] lshr_ln39_2_fu_1499_p2;
wire   [255:0] zext_ln39_9_fu_1509_p1;
wire   [255:0] lshr_ln39_3_fu_1513_p2;
wire   [63:0] tmp_begin_1_fu_1523_p1;
wire   [63:0] tmp_begin_1_fu_1523_p2;
wire   [63:0] tmp_end_1_fu_1552_p1;
wire   [63:0] tmp_end_1_fu_1552_p2;
wire   [0:0] tmp_dst_2_fu_1584_p3;
wire   [63:0] tmp_dst_2_fu_1584_p4;
wire   [6:0] trunc_ln42_4_fu_1594_p1;
wire   [7:0] tmp_level_4_fu_1616_p4;
wire   [1:0] grp_fu_744_p4;
wire   [127:0] zext_ln48_14_fu_1648_p1;
wire   [127:0] lshr_ln48_8_fu_1652_p2;
wire   [127:0] zext_ln48_15_fu_1662_p1;
wire   [127:0] lshr_ln48_9_fu_1666_p2;
wire   [63:0] tmp_17_fu_1676_p1;
wire   [63:0] tmp_17_fu_1676_p2;
wire   [63:0] tmp_17_fu_1676_p4;
wire   [127:0] zext_ln48_16_fu_1691_p1;
wire   [127:0] shl_ln48_9_fu_1694_p2;
wire   [127:0] xor_ln48_2_fu_1700_p2;
wire   [127:0] zext_ln48_18_fu_1711_p1;
wire   [127:0] and_ln48_5_fu_1706_p2;
wire   [127:0] shl_ln48_11_fu_1714_p2;
wire   [127:0] zext_ln48_17_fu_1732_p1;
wire   [127:0] and_ln48_4_fu_1727_p2;
wire   [127:0] shl_ln48_10_fu_1735_p2;
wire   [7:0] trunc_ln41_5_fu_1754_p1;
wire   [0:0] icmp_ln49_2_fu_1748_p2;
wire   [7:0] add_ln49_4_fu_1758_p2;
wire   [7:0] select_ln49_2_fu_1764_p3;
wire   [7:0] q_in_16_fu_1777_p2;
wire   [11:0] trunc_ln41_7_fu_1803_p1;
wire   [63:0] e_6_fu_1792_p2;
wire   [10:0] add_ln21_2_fu_1798_p2;
wire   [11:0] add_ln21_3_fu_1807_p2;
wire   [63:0] tmp_dst_3_fu_1846_p4;
wire   [6:0] trunc_ln42_6_fu_1855_p1;
wire   [7:0] tmp_level_6_fu_1877_p4;
wire   [127:0] zext_ln48_19_fu_1909_p1;
wire   [127:0] lshr_ln48_10_fu_1913_p2;
wire   [127:0] zext_ln48_20_fu_1923_p1;
wire   [127:0] lshr_ln48_11_fu_1927_p2;
wire   [63:0] tmp_22_fu_1937_p1;
wire   [63:0] tmp_22_fu_1937_p2;
wire   [63:0] tmp_22_fu_1937_p4;
wire   [127:0] zext_ln48_21_fu_1952_p1;
wire   [127:0] shl_ln48_12_fu_1955_p2;
wire   [127:0] xor_ln48_3_fu_1961_p2;
wire   [127:0] zext_ln48_23_fu_1972_p1;
wire   [127:0] and_ln48_7_fu_1967_p2;
wire   [127:0] shl_ln48_14_fu_1975_p2;
wire   [127:0] zext_ln48_22_fu_1993_p1;
wire   [127:0] and_ln48_6_fu_1988_p2;
wire   [127:0] shl_ln48_13_fu_1996_p2;
wire   [0:0] icmp_ln49_3_fu_2009_p2;
wire   [7:0] add_ln49_6_fu_2015_p2;
wire   [7:0] select_ln49_3_fu_2020_p3;
wire   [7:0] q_in_17_fu_2033_p2;
wire   [0:0] icmp_ln35_2_fu_1229_p2;
wire   [0:0] and_ln35_1_fu_1254_p2;
wire   [0:0] icmp_ln35_3_fu_1260_p2;
reg   [31:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
end

bfs_queue_RAM_1WNR_BRAM_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
queue_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(queue_address0),
    .ce0(queue_ce0),
    .we0(queue_we0),
    .d0(queue_d0),
    .q0(queue_q0)
);

bfs_mux_21_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 8 ))
mux_21_8_1_1_U1(
    .din0(level_0_q0),
    .din1(level_1_q0),
    .din2(tmp_3_reg_2114),
    .dout(grp_fu_684_p4)
);

bfs_mux_21_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 8 ))
mux_21_8_1_1_U2(
    .din0(level_0_q0),
    .din1(level_1_q0),
    .din2(tmp_11_reg_2364),
    .dout(grp_fu_719_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U3(
    .din0(tmp_begin_fu_919_p1),
    .din1(tmp_begin_fu_919_p2),
    .din2(tmp_3_reg_2114),
    .dout(tmp_begin_fu_919_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U4(
    .din0(tmp_end_fu_948_p1),
    .din1(tmp_end_fu_948_p2),
    .din2(tmp_3_reg_2114),
    .dout(tmp_end_fu_948_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U5(
    .din0(edges_0_q0),
    .din1(edges_1_q0),
    .din2(tmp_dst_fu_980_p3),
    .dout(tmp_dst_fu_980_p4)
);

bfs_mux_21_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 8 ))
mux_21_8_1_1_U6(
    .din0(level_0_q0),
    .din1(level_1_q0),
    .din2(tmp_6_reg_2187),
    .dout(tmp_level_fu_1012_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U7(
    .din0(tmp_s_fu_1072_p1),
    .din1(tmp_s_fu_1072_p2),
    .din2(trunc_ln48_reg_2211),
    .dout(tmp_s_fu_1072_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U8(
    .din0(edges_0_q0),
    .din1(edges_1_q0),
    .din2(tmp_9_reg_2255),
    .dout(tmp_dst_1_fu_1266_p4)
);

bfs_mux_21_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 8 ))
mux_21_8_1_1_U9(
    .din0(level_0_q0),
    .din1(level_1_q0),
    .din2(tmp_10_reg_2284),
    .dout(tmp_level_2_fu_1297_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U10(
    .din0(tmp_1_fu_1357_p1),
    .din1(tmp_1_fu_1357_p2),
    .din2(trunc_ln48_3_reg_2308),
    .dout(tmp_1_fu_1357_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U11(
    .din0(tmp_begin_1_fu_1523_p1),
    .din1(tmp_begin_1_fu_1523_p2),
    .din2(tmp_11_reg_2364),
    .dout(tmp_begin_1_fu_1523_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U12(
    .din0(tmp_end_1_fu_1552_p1),
    .din1(tmp_end_1_fu_1552_p2),
    .din2(tmp_11_reg_2364),
    .dout(tmp_end_1_fu_1552_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U13(
    .din0(edges_0_q0),
    .din1(edges_1_q0),
    .din2(tmp_dst_2_fu_1584_p3),
    .dout(tmp_dst_2_fu_1584_p4)
);

bfs_mux_21_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 8 ))
mux_21_8_1_1_U14(
    .din0(level_0_q0),
    .din1(level_1_q0),
    .din2(tmp_14_reg_2431),
    .dout(tmp_level_4_fu_1616_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U15(
    .din0(tmp_17_fu_1676_p1),
    .din1(tmp_17_fu_1676_p2),
    .din2(trunc_ln48_6_reg_2455),
    .dout(tmp_17_fu_1676_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U16(
    .din0(edges_0_q0),
    .din1(edges_1_q0),
    .din2(tmp_18_reg_2500),
    .dout(tmp_dst_3_fu_1846_p4)
);

bfs_mux_21_8_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 8 ))
mux_21_8_1_1_U17(
    .din0(level_0_q0),
    .din1(level_1_q0),
    .din2(tmp_19_reg_2520),
    .dout(tmp_level_6_fu_1877_p4)
);

bfs_mux_21_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 64 ))
mux_21_64_1_1_U18(
    .din0(tmp_22_fu_1937_p1),
    .din1(tmp_22_fu_1937_p2),
    .din2(trunc_ln48_9_reg_2544),
    .dout(tmp_22_fu_1937_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        dummy_fu_164 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) & ((icmp_ln41_3_fu_1813_p2 == 1'd0) | (icmp_ln41_2_reg_2407 == 1'd0)))) begin
        dummy_fu_164 <= dummy_3_fu_1832_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        e_1_reg_553 <= e_5_reg_2349;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        e_1_reg_553 <= tmp_begin_fu_919_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        e_4_reg_608 <= e_7_fu_2043_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        e_4_reg_608 <= tmp_begin_1_fu_1523_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_3_fu_1813_p2 == 1'd0) & (icmp_ln41_2_reg_2407 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        q_in_10_reg_652 <= ap_phi_mux_q_in_9_phi_fu_632_p4;
    end else if (((icmp_ln41_2_fu_1561_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
        q_in_10_reg_652 <= q_in_5_reg_618;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_3_fu_1886_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
        q_in_12_reg_640 <= q_in_9_reg_629;
    end else if (((icmp_ln45_3_reg_2535 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        q_in_12_reg_640 <= zext_ln18_3_fu_2038_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        q_in_1_reg_563 <= q_in_7_reg_596;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        q_in_1_reg_563 <= q_in_fu_168;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln45_fu_1021_p2 == 1'd0))) begin
        q_in_3_reg_573 <= q_in_1_reg_563;
    end else if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln45_reg_2202 == 1'd1) & (icmp_ln41_reg_2163 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0))) begin
        q_in_3_reg_573 <= zext_ln18_fu_1180_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_1_fu_1210_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln41_reg_2163 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0))) begin
        q_in_4_reg_584 <= ap_phi_mux_q_in_3_phi_fu_576_p4;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln41_fu_957_p2 == 1'd0))) begin
        q_in_4_reg_584 <= q_in_1_reg_563;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        q_in_5_reg_618 <= ap_phi_mux_q_in_12_phi_fu_644_p4;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        q_in_5_reg_618 <= q_in_4_reg_584;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_1_fu_1306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        q_in_7_reg_596 <= q_in_3_reg_573;
    end else if (((icmp_ln45_1_reg_2299 == 1'd1) & (1'b1 == ap_CS_fsm_state16))) begin
        q_in_7_reg_596 <= zext_ln18_1_fu_1458_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln45_2_fu_1625_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
        q_in_9_reg_629 <= q_in_5_reg_618;
    end else if (((icmp_ln45_2_reg_2446 == 1'd1) & (icmp_ln41_2_reg_2407 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        q_in_9_reg_629 <= zext_ln18_2_fu_1783_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        q_in_fu_168 <= 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        q_in_fu_168 <= q_in_10_reg_652;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        q_out_fu_160 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state26) & ((icmp_ln41_3_fu_1813_p2 == 1'd0) | (icmp_ln41_2_reg_2407 == 1'd0)))) begin
        q_out_fu_160 <= q_out_2_reg_2381;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln48_1_reg_2338 <= add_ln48_1_fu_1366_p2;
        level_counts_0_load_2_reg_2328 <= level_counts_0_q0;
        level_counts_1_load_1_reg_2333 <= level_counts_1_q0;
        shl_ln48_1_reg_2323[6] <= shl_ln48_1_fu_1322_p3[6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        add_ln48_2_reg_2485 <= add_ln48_2_fu_1685_p2;
        level_counts_0_load_3_reg_2475 <= level_counts_0_q0;
        level_counts_1_load_2_reg_2480 <= level_counts_1_q0;
        shl_ln48_2_reg_2470[6] <= shl_ln48_2_fu_1641_p3[6];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state30)) begin
        add_ln48_3_reg_2574 <= add_ln48_3_fu_1946_p2;
        level_counts_0_load_4_reg_2564 <= level_counts_0_q0;
        level_counts_1_load_3_reg_2569 <= level_counts_1_q0;
        shl_ln48_3_reg_2559[6] <= shl_ln48_3_fu_1902_p3[6];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_2_fu_815_p3 == 1'd0))) begin
        and_ln35_reg_2100 <= and_ln35_fu_858_p2;
        q_out_1_reg_2093[7 : 1] <= q_out_1_fu_834_p2[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        e_5_reg_2349 <= e_5_fu_1462_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        icmp_ln41_2_reg_2407 <= icmp_ln41_2_fu_1561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        icmp_ln41_reg_2163 <= icmp_ln41_fu_957_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln45_1_reg_2299 <= icmp_ln45_1_fu_1306_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        icmp_ln45_2_reg_2446 <= icmp_ln45_2_fu_1625_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state28)) begin
        icmp_ln45_3_reg_2535 <= icmp_ln45_3_fu_1886_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln45_reg_2202 <= icmp_ln45_fu_1021_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        level_0_addr_1_reg_2153 <= zext_ln39_2_fu_880_p1;
        level_1_addr_1_reg_2158 <= zext_ln39_2_fu_880_p1;
        tmp_end_reg_2147 <= tmp_end_fu_948_p4;
        zext_ln39_1_reg_2137[7 : 1] <= zext_ln39_1_fu_877_p1[7 : 1];
        zext_ln39_reg_2131[7 : 1] <= zext_ln39_fu_874_p1[7 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        level_0_addr_2_reg_2192 <= zext_ln43_fu_998_p1;
        level_1_addr_2_reg_2197 <= zext_ln43_fu_998_p1;
        tmp_6_reg_2187 <= tmp_dst_fu_980_p4[32'd7];
        trunc_ln42_1_reg_2182 <= trunc_ln42_1_fu_994_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        level_0_addr_3_reg_2289 <= zext_ln43_1_fu_1283_p1;
        level_1_addr_3_reg_2294 <= zext_ln43_1_fu_1283_p1;
        tmp_10_reg_2284 <= tmp_dst_1_fu_1266_p4[32'd7];
        trunc_ln42_3_reg_2279 <= trunc_ln42_3_fu_1279_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        level_0_addr_4_reg_2397 <= zext_ln39_5_fu_1484_p1;
        level_1_addr_4_reg_2402 <= zext_ln39_5_fu_1484_p1;
        q_out_2_reg_2381 <= q_out_2_fu_1478_p2;
        tmp_end_1_reg_2391 <= tmp_end_1_fu_1552_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        level_0_addr_5_reg_2436 <= zext_ln43_2_fu_1602_p1;
        level_1_addr_5_reg_2441 <= zext_ln43_2_fu_1602_p1;
        tmp_14_reg_2431 <= tmp_dst_2_fu_1584_p4[32'd7];
        trunc_ln42_5_reg_2426 <= trunc_ln42_5_fu_1598_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        level_0_addr_6_reg_2525 <= zext_ln43_3_fu_1863_p1;
        level_1_addr_6_reg_2530 <= zext_ln43_3_fu_1863_p1;
        tmp_19_reg_2520 <= tmp_dst_3_fu_1846_p4[32'd7];
        trunc_ln42_7_reg_2515 <= trunc_ln42_7_fu_1859_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        level_counts_0_addr_1_reg_2216 <= zext_ln48_fu_1027_p1;
        level_counts_1_addr_reg_2221 <= zext_ln48_fu_1027_p1;
        tmp_8_reg_2206 <= grp_fu_693_p2[32'd1];
        trunc_ln48_reg_2211 <= trunc_ln48_fu_1033_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        level_counts_0_addr_2_reg_2313 <= zext_ln48_3_fu_1312_p1;
        level_counts_1_addr_1_reg_2318 <= zext_ln48_3_fu_1312_p1;
        tmp_12_reg_2303 <= grp_fu_693_p2[32'd1];
        trunc_ln48_3_reg_2308 <= trunc_ln48_3_fu_1318_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        level_counts_0_addr_3_reg_2460 <= zext_ln48_5_fu_1631_p1;
        level_counts_1_addr_2_reg_2465 <= zext_ln48_5_fu_1631_p1;
        tmp_16_reg_2450 <= grp_fu_728_p2[32'd1];
        trunc_ln48_6_reg_2455 <= trunc_ln48_6_fu_1637_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        level_counts_0_addr_4_reg_2549 <= zext_ln48_7_fu_1892_p1;
        level_counts_1_addr_3_reg_2554 <= zext_ln48_7_fu_1892_p1;
        tmp_21_reg_2539 <= grp_fu_728_p2[32'd1];
        trunc_ln48_9_reg_2544 <= trunc_ln48_9_fu_1898_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        level_counts_0_load_1_reg_2231 <= level_counts_0_q0;
        level_counts_1_load_reg_2236 <= level_counts_1_q0;
        shl_ln1_reg_2226[6] <= shl_ln1_fu_1037_p3[6];
        tmp_s_reg_2241 <= tmp_s_fu_1072_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state4))) begin
        reg_754 <= queue_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_11_reg_2364 <= queue_q0[32'd7];
        trunc_ln20_1_reg_2359 <= trunc_ln20_1_fu_1468_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_3_fu_1813_p2 == 1'd1) & (icmp_ln41_2_reg_2407 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        tmp_18_reg_2500 <= add_ln21_3_fu_1807_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_2_reg_2089 <= dummy_fu_164[32'd8];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_3_reg_2114 <= queue_q0[32'd7];
        trunc_ln20_reg_2109 <= trunc_ln20_fu_864_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_1_fu_1210_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln41_reg_2163 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0))) begin
        tmp_9_reg_2255 <= add_ln21_1_fu_1204_p2[32'd11];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln41_reg_2163 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0))) begin
        trunc_ln41_2_reg_2246 <= trunc_ln41_2_fu_1185_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_2_fu_1561_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state21))) begin
        trunc_ln41_4_reg_2411 <= trunc_ln41_4_fu_1566_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln41_2_reg_2407 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        trunc_ln41_6_reg_2491 <= trunc_ln41_6_fu_1788_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln41_fu_957_p2 == 1'd1))) begin
        trunc_ln41_reg_2167 <= trunc_ln41_fu_962_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & ((tmp_2_reg_2089 == 1'd1) | ((1'd1 == and_ln35_reg_2100) | (((((icmp_ln41_1_fu_1210_p2 == 1'd0) & (1'd1 == and_ln35_1_fu_1254_p2) & (icmp_ln35_2_fu_1229_p2 == 1'd0)) | ((icmp_ln41_1_fu_1210_p2 == 1'd0) & (icmp_ln35_3_fu_1260_p2 == 1'd1) & (icmp_ln35_2_fu_1229_p2 == 1'd1))) | ((icmp_ln41_reg_2163 == 1'd0) & (icmp_ln35_3_fu_1260_p2 == 1'd1) & (icmp_ln35_2_fu_1229_p2 == 1'd1))) | ((1'd1 == and_ln35_1_fu_1254_p2) & (icmp_ln41_reg_2163 == 1'd0) & (icmp_ln35_2_fu_1229_p2 == 1'd0))))))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln45_3_reg_2535 == 1'd1) & (1'b1 == ap_CS_fsm_state31))) begin
        ap_phi_mux_q_in_12_phi_fu_644_p4 = zext_ln18_3_fu_2038_p1;
    end else begin
        ap_phi_mux_q_in_12_phi_fu_644_p4 = q_in_12_reg_640;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & (icmp_ln45_reg_2202 == 1'd1) & (icmp_ln41_reg_2163 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0))) begin
        ap_phi_mux_q_in_3_phi_fu_576_p4 = zext_ln18_fu_1180_p1;
    end else begin
        ap_phi_mux_q_in_3_phi_fu_576_p4 = q_in_3_reg_573;
    end
end

always @ (*) begin
    if (((icmp_ln41_1_fu_1210_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln41_reg_2163 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0))) begin
        ap_phi_mux_q_in_4_phi_fu_587_p4 = ap_phi_mux_q_in_3_phi_fu_576_p4;
    end else begin
        ap_phi_mux_q_in_4_phi_fu_587_p4 = q_in_4_reg_584;
    end
end

always @ (*) begin
    if (((icmp_ln45_2_reg_2446 == 1'd1) & (icmp_ln41_2_reg_2407 == 1'd1) & (1'b1 == ap_CS_fsm_state26))) begin
        ap_phi_mux_q_in_9_phi_fu_632_p4 = zext_ln18_2_fu_1783_p1;
    end else begin
        ap_phi_mux_q_in_9_phi_fu_632_p4 = q_in_9_reg_629;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) & ((tmp_2_reg_2089 == 1'd1) | ((1'd1 == and_ln35_reg_2100) | (((((icmp_ln41_1_fu_1210_p2 == 1'd0) & (1'd1 == and_ln35_1_fu_1254_p2) & (icmp_ln35_2_fu_1229_p2 == 1'd0)) | ((icmp_ln41_1_fu_1210_p2 == 1'd0) & (icmp_ln35_3_fu_1260_p2 == 1'd1) & (icmp_ln35_2_fu_1229_p2 == 1'd1))) | ((icmp_ln41_reg_2163 == 1'd0) & (icmp_ln35_3_fu_1260_p2 == 1'd1) & (icmp_ln35_2_fu_1229_p2 == 1'd1))) | ((1'd1 == and_ln35_1_fu_1254_p2) & (icmp_ln41_reg_2163 == 1'd0) & (icmp_ln35_2_fu_1229_p2 == 1'd0))))))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        edges_0_address0 = zext_ln42_3_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        edges_0_address0 = zext_ln42_2_fu_1570_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        edges_0_address0 = zext_ln42_1_fu_1215_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        edges_0_address0 = zext_ln42_fu_966_p1;
    end else begin
        edges_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        edges_0_ce0 = 1'b1;
    end else begin
        edges_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        edges_1_address0 = zext_ln42_3_fu_1818_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        edges_1_address0 = zext_ln42_2_fu_1570_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        edges_1_address0 = zext_ln42_1_fu_1215_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        edges_1_address0 = zext_ln42_fu_966_p1;
    end else begin
        edges_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        edges_1_ce0 = 1'b1;
    end else begin
        edges_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        level_0_address0 = level_0_addr_6_reg_2525;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        level_0_address0 = zext_ln43_3_fu_1863_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        level_0_address0 = level_0_addr_5_reg_2436;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23))) begin
        level_0_address0 = level_0_addr_4_reg_2397;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        level_0_address0 = zext_ln43_2_fu_1602_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        level_0_address0 = level_0_addr_3_reg_2289;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        level_0_address0 = zext_ln43_1_fu_1283_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        level_0_address0 = level_0_addr_2_reg_2192;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        level_0_address0 = level_0_addr_1_reg_2153;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        level_0_address0 = zext_ln43_fu_998_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        level_0_address0 = zext_ln30_fu_767_p1;
    end else begin
        level_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        level_0_ce0 = 1'b1;
    end else begin
        level_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24))) begin
        level_0_d0 = grp_fu_728_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9))) begin
        level_0_d0 = grp_fu_693_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        level_0_d0 = 8'd0;
    end else begin
        level_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_19_reg_2520 == 1'd0) & (1'b1 == ap_CS_fsm_state29)) | ((tmp_14_reg_2431 == 1'd0) & (1'b1 == ap_CS_fsm_state24)) | ((tmp_10_reg_2284 == 1'd0) & (1'b1 == ap_CS_fsm_state14)) | ((tmp_fu_773_p3 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_6_reg_2187 == 1'd0)))) begin
        level_0_we0 = 1'b1;
    end else begin
        level_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        level_1_address0 = level_1_addr_6_reg_2530;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        level_1_address0 = zext_ln43_3_fu_1863_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        level_1_address0 = level_1_addr_5_reg_2441;
    end else if (((1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state23))) begin
        level_1_address0 = level_1_addr_4_reg_2402;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        level_1_address0 = zext_ln43_2_fu_1602_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        level_1_address0 = level_1_addr_3_reg_2294;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        level_1_address0 = zext_ln43_1_fu_1283_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        level_1_address0 = level_1_addr_2_reg_2197;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state8))) begin
        level_1_address0 = level_1_addr_1_reg_2158;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        level_1_address0 = zext_ln43_fu_998_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        level_1_address0 = zext_ln30_fu_767_p1;
    end else begin
        level_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        level_1_ce0 = 1'b1;
    end else begin
        level_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state24))) begin
        level_1_d0 = grp_fu_728_p2;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state9))) begin
        level_1_d0 = grp_fu_693_p2;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        level_1_d0 = 8'd0;
    end else begin
        level_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_19_reg_2520 == 1'd1) & (1'b1 == ap_CS_fsm_state29)) | ((tmp_14_reg_2431 == 1'd1) & (1'b1 == ap_CS_fsm_state24)) | ((tmp_10_reg_2284 == 1'd1) & (1'b1 == ap_CS_fsm_state14)) | ((tmp_fu_773_p3 == 1'd1) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state9) & (tmp_6_reg_2187 == 1'd1)))) begin
        level_1_we0 = 1'b1;
    end else begin
        level_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        level_counts_0_address0 = level_counts_0_addr_4_reg_2549;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        level_counts_0_address0 = zext_ln48_7_fu_1892_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        level_counts_0_address0 = level_counts_0_addr_3_reg_2460;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        level_counts_0_address0 = zext_ln48_5_fu_1631_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        level_counts_0_address0 = level_counts_0_addr_2_reg_2313;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        level_counts_0_address0 = zext_ln48_3_fu_1312_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        level_counts_0_address0 = level_counts_0_addr_1_reg_2216;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        level_counts_0_address0 = zext_ln48_fu_1027_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        level_counts_0_address0 = level_counts_0_addr_reg_2078;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        level_counts_0_address0 = 64'd0;
    end else begin
        level_counts_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        level_counts_0_ce0 = 1'b1;
    end else begin
        level_counts_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        level_counts_0_d0 = or_ln48_7_fu_1981_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        level_counts_0_d0 = or_ln48_5_fu_1720_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        level_counts_0_d0 = or_ln48_3_fu_1401_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        level_counts_0_d0 = or_ln48_1_fu_1116_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        level_counts_0_d0 = tmp1_fu_796_p5;
    end else begin
        level_counts_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((trunc_ln48_9_reg_2544 == 1'd0) & (icmp_ln45_3_reg_2535 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((trunc_ln48_6_reg_2455 == 1'd0) & (icmp_ln45_2_reg_2446 == 1'd1) & (icmp_ln41_2_reg_2407 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((trunc_ln48_3_reg_2308 == 1'd0) & (icmp_ln45_1_reg_2299 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((trunc_ln48_reg_2211 == 1'd0) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln45_reg_2202 == 1'd1) & (icmp_ln41_reg_2163 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0)))) begin
        level_counts_0_we0 = 1'b1;
    end else begin
        level_counts_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        level_counts_1_address0 = level_counts_1_addr_3_reg_2554;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        level_counts_1_address0 = zext_ln48_7_fu_1892_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        level_counts_1_address0 = level_counts_1_addr_2_reg_2465;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        level_counts_1_address0 = zext_ln48_5_fu_1631_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        level_counts_1_address0 = level_counts_1_addr_1_reg_2318;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        level_counts_1_address0 = zext_ln48_3_fu_1312_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        level_counts_1_address0 = level_counts_1_addr_reg_2221;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        level_counts_1_address0 = zext_ln48_fu_1027_p1;
    end else begin
        level_counts_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9))) begin
        level_counts_1_ce0 = 1'b1;
    end else begin
        level_counts_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        level_counts_1_d0 = or_ln48_6_fu_2002_p2;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        level_counts_1_d0 = or_ln48_4_fu_1741_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        level_counts_1_d0 = or_ln48_2_fu_1422_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        level_counts_1_d0 = or_ln48_fu_1138_p2;
    end else begin
        level_counts_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln48_9_reg_2544 == 1'd1) & (icmp_ln45_3_reg_2535 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((trunc_ln48_6_reg_2455 == 1'd1) & (icmp_ln45_2_reg_2446 == 1'd1) & (icmp_ln41_2_reg_2407 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((trunc_ln48_3_reg_2308 == 1'd1) & (icmp_ln45_1_reg_2299 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((trunc_ln48_reg_2211 == 1'd1) & (1'b1 == ap_CS_fsm_state11) & (icmp_ln45_reg_2202 == 1'd1) & (icmp_ln41_reg_2163 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0)))) begin
        level_counts_1_we0 = 1'b1;
    end else begin
        level_counts_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        nodes_0_address0 = zext_ln39_7_fu_1472_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        nodes_0_address0 = zext_ln39_3_fu_868_p1;
    end else begin
        nodes_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state4))) begin
        nodes_0_ce0 = 1'b1;
    end else begin
        nodes_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        nodes_1_address0 = zext_ln39_7_fu_1472_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        nodes_1_address0 = zext_ln39_3_fu_868_p1;
    end else begin
        nodes_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state4))) begin
        nodes_1_ce0 = 1'b1;
    end else begin
        nodes_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        queue_address0 = zext_ln49_3_fu_2028_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        queue_address0 = zext_ln49_2_fu_1772_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        queue_address0 = zext_ln39_reg_2131;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        queue_address0 = zext_ln49_1_fu_1448_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        queue_address0 = zext_ln49_fu_1169_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        queue_address0 = zext_ln34_fu_823_p1;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        queue_address0 = 64'd0;
    end else begin
        queue_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        queue_ce0 = 1'b1;
    end else begin
        queue_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        queue_d0 = trunc_ln42_7_reg_2515;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        queue_d0 = trunc_ln42_5_reg_2426;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        queue_d0 = trunc_ln42_3_reg_2279;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        queue_d0 = trunc_ln42_1_reg_2182;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        queue_d0 = empty_21_fu_762_p1;
    end else begin
        queue_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)) | ((icmp_ln45_3_reg_2535 == 1'd1) & (1'b1 == ap_CS_fsm_state31)) | ((icmp_ln45_2_reg_2446 == 1'd1) & (icmp_ln41_2_reg_2407 == 1'd1) & (1'b1 == ap_CS_fsm_state26)) | ((icmp_ln45_1_reg_2299 == 1'd1) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_CS_fsm_state11) & (icmp_ln45_reg_2202 == 1'd1) & (icmp_ln41_reg_2163 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0)))) begin
        queue_we0 = 1'b1;
    end else begin
        queue_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & ((1'd1 == and_ln35_fu_858_p2) | (tmp_2_fu_815_p3 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln41_fu_957_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (icmp_ln45_fu_1021_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & ((tmp_2_reg_2089 == 1'd1) | ((1'd1 == and_ln35_reg_2100) | (((((icmp_ln41_1_fu_1210_p2 == 1'd0) & (1'd1 == and_ln35_1_fu_1254_p2) & (icmp_ln35_2_fu_1229_p2 == 1'd0)) | ((icmp_ln41_1_fu_1210_p2 == 1'd0) & (icmp_ln35_3_fu_1260_p2 == 1'd1) & (icmp_ln35_2_fu_1229_p2 == 1'd1))) | ((icmp_ln41_reg_2163 == 1'd0) & (icmp_ln35_3_fu_1260_p2 == 1'd1) & (icmp_ln35_2_fu_1229_p2 == 1'd1))) | ((1'd1 == and_ln35_1_fu_1254_p2) & (icmp_ln41_reg_2163 == 1'd0) & (icmp_ln35_2_fu_1229_p2 == 1'd0))))))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((1'b1 == ap_CS_fsm_state11) & (((((icmp_ln41_1_fu_1210_p2 == 1'd0) & (icmp_ln35_3_fu_1260_p2 == 1'd0) & (icmp_ln35_2_fu_1229_p2 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0)) | ((icmp_ln41_1_fu_1210_p2 == 1'd0) & (icmp_ln35_2_fu_1229_p2 == 1'd0) & (1'd0 == and_ln35_1_fu_1254_p2) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0))) | ((icmp_ln41_reg_2163 == 1'd0) & (icmp_ln35_3_fu_1260_p2 == 1'd0) & (icmp_ln35_2_fu_1229_p2 == 1'd1) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0))) | ((icmp_ln41_reg_2163 == 1'd0) & (icmp_ln35_2_fu_1229_p2 == 1'd0) & (1'd0 == and_ln35_1_fu_1254_p2) & (1'd0 == and_ln35_reg_2100) & (tmp_2_reg_2089 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln45_1_fu_1306_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            if (((icmp_ln41_2_fu_1561_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((icmp_ln45_2_fu_1625_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            if (((1'b1 == ap_CS_fsm_state26) & ((icmp_ln41_3_fu_1813_p2 == 1'd0) | (icmp_ln41_2_reg_2407 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state27;
            end
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if (((icmp_ln45_3_fu_1886_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln21_1_fu_1204_p2 = (trunc_ln41_3_fu_1200_p1 + 12'd1);

assign add_ln21_2_fu_1798_p2 = (trunc_ln41_4_reg_2411 + 11'd1);

assign add_ln21_3_fu_1807_p2 = (trunc_ln41_7_fu_1803_p1 + 12'd1);

assign add_ln21_fu_1195_p2 = (trunc_ln41_reg_2167 + 11'd1);

assign add_ln38_fu_1234_p2 = (zext_ln39_1_reg_2137 + 9'd1);

assign add_ln48_1_fu_1366_p2 = (tmp_1_fu_1357_p4 + 64'd1);

assign add_ln48_2_fu_1685_p2 = (tmp_17_fu_1676_p4 + 64'd1);

assign add_ln48_3_fu_1946_p2 = (tmp_22_fu_1937_p4 + 64'd1);

assign add_ln48_fu_1081_p2 = (tmp_s_reg_2241 + 64'd1);

assign add_ln49_2_fu_1435_p2 = ($signed(trunc_ln41_2_reg_2246) + $signed(8'd255));

assign add_ln49_4_fu_1758_p2 = ($signed(trunc_ln41_5_fu_1754_p1) + $signed(8'd255));

assign add_ln49_6_fu_2015_p2 = ($signed(trunc_ln41_6_reg_2491) + $signed(8'd255));

assign add_ln49_fu_1155_p2 = ($signed(trunc_ln41_1_fu_1151_p1) + $signed(8'd255));

assign and_ln35_1_fu_1254_p2 = (icmp_ln35_5_fu_1249_p2 & icmp_ln35_4_fu_1243_p2);

assign and_ln35_fu_858_p2 = (icmp_ln35_fu_828_p2 & icmp_ln35_1_fu_852_p2);

assign and_ln48_1_fu_1101_p2 = (xor_ln48_fu_1095_p2 & level_counts_0_load_1_reg_2231);

assign and_ln48_2_fu_1408_p2 = (xor_ln48_1_fu_1381_p2 & level_counts_1_load_1_reg_2333);

assign and_ln48_3_fu_1387_p2 = (xor_ln48_1_fu_1381_p2 & level_counts_0_load_2_reg_2328);

assign and_ln48_4_fu_1727_p2 = (xor_ln48_2_fu_1700_p2 & level_counts_1_load_2_reg_2480);

assign and_ln48_5_fu_1706_p2 = (xor_ln48_2_fu_1700_p2 & level_counts_0_load_3_reg_2475);

assign and_ln48_6_fu_1988_p2 = (xor_ln48_3_fu_1961_p2 & level_counts_1_load_3_reg_2569);

assign and_ln48_7_fu_1967_p2 = (xor_ln48_3_fu_1961_p2 & level_counts_0_load_4_reg_2564);

assign and_ln48_fu_1123_p2 = (xor_ln48_fu_1095_p2 & level_counts_1_load_reg_2236);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign dummy_3_fu_1832_p2 = (dummy_fu_164 + 9'd2);

assign e_2_fu_1189_p2 = (e_1_reg_553 + 64'd1);

assign e_5_fu_1462_p2 = (e_1_reg_553 + 64'd2);

assign e_6_fu_1792_p2 = (e_4_reg_608 + 64'd1);

assign e_7_fu_2043_p2 = (e_4_reg_608 + 64'd2);

assign empty_21_fu_762_p1 = starting_node[7:0];

assign empty_fu_758_p1 = starting_node[6:0];

assign grp_fu_674_p4 = {{queue_q0[6:1]}};

assign grp_fu_693_p2 = (grp_fu_684_p4 + 8'd1);

assign grp_fu_709_p4 = {{grp_fu_693_p2[3:2]}};

assign grp_fu_728_p2 = (grp_fu_719_p4 + 8'd1);

assign grp_fu_744_p4 = {{grp_fu_728_p2[3:2]}};

assign icmp_ln35_1_fu_852_p2 = ((q_in_fu_168 == zext_ln35_fu_848_p1) ? 1'b1 : 1'b0);

assign icmp_ln35_2_fu_1229_p2 = ((ap_phi_mux_q_in_4_phi_fu_587_p4 > zext_ln39_reg_2131) ? 1'b1 : 1'b0);

assign icmp_ln35_3_fu_1260_p2 = ((ap_phi_mux_q_in_4_phi_fu_587_p4 == zext_ln35_1_fu_1239_p1) ? 1'b1 : 1'b0);

assign icmp_ln35_4_fu_1243_p2 = ((ap_phi_mux_q_in_4_phi_fu_587_p4 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln35_5_fu_1249_p2 = ((q_out_1_reg_2093 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln35_fu_828_p2 = ((q_in_fu_168 > zext_ln34_fu_823_p1) ? 1'b1 : 1'b0);

assign icmp_ln41_1_fu_1210_p2 = ((e_2_fu_1189_p2 < tmp_end_reg_2147) ? 1'b1 : 1'b0);

assign icmp_ln41_2_fu_1561_p2 = ((e_4_reg_608 < tmp_end_1_reg_2391) ? 1'b1 : 1'b0);

assign icmp_ln41_3_fu_1813_p2 = ((e_6_fu_1792_p2 < tmp_end_1_reg_2391) ? 1'b1 : 1'b0);

assign icmp_ln41_fu_957_p2 = ((e_1_reg_553 < tmp_end_reg_2147) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_1306_p2 = ((tmp_level_2_fu_1297_p4 == 8'd127) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_1625_p2 = ((tmp_level_4_fu_1616_p4 == 8'd127) ? 1'b1 : 1'b0);

assign icmp_ln45_3_fu_1886_p2 = ((tmp_level_6_fu_1877_p4 == 8'd127) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_1021_p2 = ((tmp_level_fu_1012_p4 == 8'd127) ? 1'b1 : 1'b0);

assign icmp_ln49_1_fu_1429_p2 = ((q_in_3_reg_573 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_2_fu_1748_p2 = ((q_in_5_reg_618 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_3_fu_2009_p2 = ((q_in_9_reg_629 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_1145_p2 = ((q_in_1_reg_563 == 64'd0) ? 1'b1 : 1'b0);

assign level_counts_0_addr_reg_2078 = 64'd0;

assign lshr_ln39_1_fu_909_p2 = nodes_1_q0 >> zext_ln39_6_fu_905_p1;

assign lshr_ln39_2_fu_1499_p2 = nodes_0_q0 >> zext_ln39_8_fu_1495_p1;

assign lshr_ln39_3_fu_1513_p2 = nodes_1_q0 >> zext_ln39_9_fu_1509_p1;

assign lshr_ln39_fu_895_p2 = nodes_0_q0 >> zext_ln39_4_fu_891_p1;

assign lshr_ln48_10_fu_1913_p2 = level_counts_0_q0 >> zext_ln48_19_fu_1909_p1;

assign lshr_ln48_11_fu_1927_p2 = level_counts_1_q0 >> zext_ln48_20_fu_1923_p1;

assign lshr_ln48_2_fu_1062_p2 = level_counts_1_q0 >> zext_ln48_2_fu_1058_p1;

assign lshr_ln48_4_fu_1333_p2 = level_counts_0_q0 >> zext_ln48_9_fu_1329_p1;

assign lshr_ln48_6_fu_1347_p2 = level_counts_1_q0 >> zext_ln48_10_fu_1343_p1;

assign lshr_ln48_8_fu_1652_p2 = level_counts_0_q0 >> zext_ln48_14_fu_1648_p1;

assign lshr_ln48_9_fu_1666_p2 = level_counts_1_q0 >> zext_ln48_15_fu_1662_p1;

assign lshr_ln48_fu_1048_p2 = level_counts_0_q0 >> zext_ln48_1_fu_1044_p1;

assign or_ln48_1_fu_1116_p2 = (shl_ln48_5_fu_1110_p2 | and_ln48_1_fu_1101_p2);

assign or_ln48_2_fu_1422_p2 = (shl_ln48_7_fu_1416_p2 | and_ln48_2_fu_1408_p2);

assign or_ln48_3_fu_1401_p2 = (shl_ln48_8_fu_1395_p2 | and_ln48_3_fu_1387_p2);

assign or_ln48_4_fu_1741_p2 = (shl_ln48_10_fu_1735_p2 | and_ln48_4_fu_1727_p2);

assign or_ln48_5_fu_1720_p2 = (shl_ln48_11_fu_1714_p2 | and_ln48_5_fu_1706_p2);

assign or_ln48_6_fu_2002_p2 = (shl_ln48_13_fu_1996_p2 | and_ln48_6_fu_1988_p2);

assign or_ln48_7_fu_1981_p2 = (shl_ln48_14_fu_1975_p2 | and_ln48_7_fu_1967_p2);

assign or_ln48_fu_1138_p2 = (shl_ln48_4_fu_1132_p2 | and_ln48_fu_1123_p2);

assign or_ln_fu_840_p3 = {{1'd0}, {q_out_1_fu_834_p2}};

assign q_in_14_fu_1174_p2 = (trunc_ln41_1_fu_1151_p1 + 8'd1);

assign q_in_15_fu_1453_p2 = (trunc_ln41_2_reg_2246 + 8'd1);

assign q_in_16_fu_1777_p2 = (trunc_ln41_5_fu_1754_p1 + 8'd1);

assign q_in_17_fu_2033_p2 = (trunc_ln41_6_reg_2491 + 8'd1);

assign q_out_1_fu_834_p2 = (q_out_fu_160 | 8'd1);

assign q_out_2_fu_1478_p2 = (q_out_fu_160 + 8'd2);

assign select_ln49_1_fu_1440_p3 = ((icmp_ln49_1_fu_1429_p2[0:0] == 1'b1) ? 8'd255 : add_ln49_2_fu_1435_p2);

assign select_ln49_2_fu_1764_p3 = ((icmp_ln49_2_fu_1748_p2[0:0] == 1'b1) ? 8'd255 : add_ln49_4_fu_1758_p2);

assign select_ln49_3_fu_2020_p3 = ((icmp_ln49_3_fu_2009_p2[0:0] == 1'b1) ? 8'd255 : add_ln49_6_fu_2015_p2);

assign select_ln49_fu_1161_p3 = ((icmp_ln49_fu_1145_p2[0:0] == 1'b1) ? 8'd255 : add_ln49_fu_1155_p2);

assign shl_ln1_fu_1037_p3 = {{tmp_8_reg_2206}, {6'd0}};

assign shl_ln39_1_fu_1489_p2 = reg_754 << 8'd7;

assign shl_ln39_fu_885_p2 = reg_754 << 8'd7;

assign shl_ln48_10_fu_1735_p2 = zext_ln48_17_fu_1732_p1 << zext_ln48_16_fu_1691_p1;

assign shl_ln48_11_fu_1714_p2 = zext_ln48_18_fu_1711_p1 << zext_ln48_16_fu_1691_p1;

assign shl_ln48_12_fu_1955_p2 = 128'd18446744073709551615 << zext_ln48_21_fu_1952_p1;

assign shl_ln48_13_fu_1996_p2 = zext_ln48_22_fu_1993_p1 << zext_ln48_21_fu_1952_p1;

assign shl_ln48_14_fu_1975_p2 = zext_ln48_23_fu_1972_p1 << zext_ln48_21_fu_1952_p1;

assign shl_ln48_1_fu_1322_p3 = {{tmp_12_reg_2303}, {6'd0}};

assign shl_ln48_2_fu_1641_p3 = {{tmp_16_reg_2450}, {6'd0}};

assign shl_ln48_3_fu_1902_p3 = {{tmp_21_reg_2539}, {6'd0}};

assign shl_ln48_4_fu_1132_p2 = zext_ln48_6_fu_1128_p1 << zext_ln48_4_fu_1086_p1;

assign shl_ln48_5_fu_1110_p2 = zext_ln48_8_fu_1106_p1 << zext_ln48_4_fu_1086_p1;

assign shl_ln48_6_fu_1375_p2 = 128'd18446744073709551615 << zext_ln48_11_fu_1372_p1;

assign shl_ln48_7_fu_1416_p2 = zext_ln48_12_fu_1413_p1 << zext_ln48_11_fu_1372_p1;

assign shl_ln48_8_fu_1395_p2 = zext_ln48_13_fu_1392_p1 << zext_ln48_11_fu_1372_p1;

assign shl_ln48_9_fu_1694_p2 = 128'd18446744073709551615 << zext_ln48_16_fu_1691_p1;

assign shl_ln48_fu_1089_p2 = 128'd18446744073709551615 << zext_ln48_4_fu_1086_p1;

assign tmp1_fu_796_p5 = {{level_counts_0_q0[127:64]}, {64'd1}};

assign tmp_17_fu_1676_p1 = lshr_ln48_8_fu_1652_p2[63:0];

assign tmp_17_fu_1676_p2 = lshr_ln48_9_fu_1666_p2[63:0];

assign tmp_1_fu_1357_p1 = lshr_ln48_4_fu_1333_p2[63:0];

assign tmp_1_fu_1357_p2 = lshr_ln48_6_fu_1347_p2[63:0];

assign tmp_22_fu_1937_p1 = lshr_ln48_10_fu_1913_p2[63:0];

assign tmp_22_fu_1937_p2 = lshr_ln48_11_fu_1927_p2[63:0];

assign tmp_2_fu_815_p3 = dummy_fu_164[32'd8];

assign tmp_begin_1_fu_1523_p1 = lshr_ln39_2_fu_1499_p2[63:0];

assign tmp_begin_1_fu_1523_p2 = lshr_ln39_3_fu_1513_p2[63:0];

assign tmp_begin_fu_919_p1 = lshr_ln39_fu_895_p2[63:0];

assign tmp_begin_fu_919_p2 = lshr_ln39_1_fu_909_p2[63:0];

assign tmp_dst_2_fu_1584_p3 = e_4_reg_608[32'd11];

assign tmp_dst_fu_980_p3 = e_1_reg_553[32'd11];

assign tmp_end_1_fu_1552_p1 = {{lshr_ln39_2_fu_1499_p2[127:64]}};

assign tmp_end_1_fu_1552_p2 = {{lshr_ln39_3_fu_1513_p2[127:64]}};

assign tmp_end_fu_948_p1 = {{lshr_ln39_fu_895_p2[127:64]}};

assign tmp_end_fu_948_p2 = {{lshr_ln39_1_fu_909_p2[127:64]}};

assign tmp_fu_773_p3 = starting_node[32'd7];

assign tmp_s_fu_1072_p1 = lshr_ln48_fu_1048_p2[63:0];

assign tmp_s_fu_1072_p2 = lshr_ln48_2_fu_1062_p2[63:0];

assign trunc_ln20_1_fu_1468_p1 = queue_q0[6:0];

assign trunc_ln20_fu_864_p1 = queue_q0[6:0];

assign trunc_ln41_1_fu_1151_p1 = q_in_1_reg_563[7:0];

assign trunc_ln41_2_fu_1185_p1 = ap_phi_mux_q_in_3_phi_fu_576_p4[7:0];

assign trunc_ln41_3_fu_1200_p1 = e_1_reg_553[11:0];

assign trunc_ln41_4_fu_1566_p1 = e_4_reg_608[10:0];

assign trunc_ln41_5_fu_1754_p1 = q_in_5_reg_618[7:0];

assign trunc_ln41_6_fu_1788_p1 = ap_phi_mux_q_in_9_phi_fu_632_p4[7:0];

assign trunc_ln41_7_fu_1803_p1 = e_4_reg_608[11:0];

assign trunc_ln41_fu_962_p1 = e_1_reg_553[10:0];

assign trunc_ln42_1_fu_994_p1 = tmp_dst_fu_980_p4[7:0];

assign trunc_ln42_2_fu_1275_p1 = tmp_dst_1_fu_1266_p4[6:0];

assign trunc_ln42_3_fu_1279_p1 = tmp_dst_1_fu_1266_p4[7:0];

assign trunc_ln42_4_fu_1594_p1 = tmp_dst_2_fu_1584_p4[6:0];

assign trunc_ln42_5_fu_1598_p1 = tmp_dst_2_fu_1584_p4[7:0];

assign trunc_ln42_6_fu_1855_p1 = tmp_dst_3_fu_1846_p4[6:0];

assign trunc_ln42_7_fu_1859_p1 = tmp_dst_3_fu_1846_p4[7:0];

assign trunc_ln42_fu_990_p1 = tmp_dst_fu_980_p4[6:0];

assign trunc_ln48_3_fu_1318_p1 = grp_fu_693_p2[0:0];

assign trunc_ln48_6_fu_1637_p1 = grp_fu_728_p2[0:0];

assign trunc_ln48_9_fu_1898_p1 = grp_fu_728_p2[0:0];

assign trunc_ln48_fu_1033_p1 = grp_fu_693_p2[0:0];

assign xor_ln48_1_fu_1381_p2 = (shl_ln48_6_fu_1375_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln48_2_fu_1700_p2 = (shl_ln48_9_fu_1694_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln48_3_fu_1961_p2 = (shl_ln48_12_fu_1955_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln48_fu_1095_p2 = (shl_ln48_fu_1089_p2 ^ 128'd340282366920938463463374607431768211455);

assign zext_ln18_1_fu_1458_p1 = q_in_15_fu_1453_p2;

assign zext_ln18_2_fu_1783_p1 = q_in_16_fu_1777_p2;

assign zext_ln18_3_fu_2038_p1 = q_in_17_fu_2033_p2;

assign zext_ln18_fu_1180_p1 = q_in_14_fu_1174_p2;

assign zext_ln30_fu_767_p1 = empty_fu_758_p1;

assign zext_ln34_fu_823_p1 = q_out_fu_160;

assign zext_ln35_1_fu_1239_p1 = add_ln38_fu_1234_p2;

assign zext_ln35_fu_848_p1 = or_ln_fu_840_p3;

assign zext_ln39_1_fu_877_p1 = q_out_1_reg_2093;

assign zext_ln39_2_fu_880_p1 = trunc_ln20_reg_2109;

assign zext_ln39_3_fu_868_p1 = grp_fu_674_p4;

assign zext_ln39_4_fu_891_p1 = shl_ln39_fu_885_p2;

assign zext_ln39_5_fu_1484_p1 = trunc_ln20_1_reg_2359;

assign zext_ln39_6_fu_905_p1 = shl_ln39_fu_885_p2;

assign zext_ln39_7_fu_1472_p1 = grp_fu_674_p4;

assign zext_ln39_8_fu_1495_p1 = shl_ln39_1_fu_1489_p2;

assign zext_ln39_9_fu_1509_p1 = shl_ln39_1_fu_1489_p2;

assign zext_ln39_fu_874_p1 = q_out_1_reg_2093;

assign zext_ln42_1_fu_1215_p1 = add_ln21_fu_1195_p2;

assign zext_ln42_2_fu_1570_p1 = trunc_ln41_4_fu_1566_p1;

assign zext_ln42_3_fu_1818_p1 = add_ln21_2_fu_1798_p2;

assign zext_ln42_fu_966_p1 = trunc_ln41_fu_962_p1;

assign zext_ln43_1_fu_1283_p1 = trunc_ln42_2_fu_1275_p1;

assign zext_ln43_2_fu_1602_p1 = trunc_ln42_4_fu_1594_p1;

assign zext_ln43_3_fu_1863_p1 = trunc_ln42_6_fu_1855_p1;

assign zext_ln43_fu_998_p1 = trunc_ln42_fu_990_p1;

assign zext_ln48_10_fu_1343_p1 = shl_ln48_1_fu_1322_p3;

assign zext_ln48_11_fu_1372_p1 = shl_ln48_1_reg_2323;

assign zext_ln48_12_fu_1413_p1 = add_ln48_1_reg_2338;

assign zext_ln48_13_fu_1392_p1 = add_ln48_1_reg_2338;

assign zext_ln48_14_fu_1648_p1 = shl_ln48_2_fu_1641_p3;

assign zext_ln48_15_fu_1662_p1 = shl_ln48_2_fu_1641_p3;

assign zext_ln48_16_fu_1691_p1 = shl_ln48_2_reg_2470;

assign zext_ln48_17_fu_1732_p1 = add_ln48_2_reg_2485;

assign zext_ln48_18_fu_1711_p1 = add_ln48_2_reg_2485;

assign zext_ln48_19_fu_1909_p1 = shl_ln48_3_fu_1902_p3;

assign zext_ln48_1_fu_1044_p1 = shl_ln1_fu_1037_p3;

assign zext_ln48_20_fu_1923_p1 = shl_ln48_3_fu_1902_p3;

assign zext_ln48_21_fu_1952_p1 = shl_ln48_3_reg_2559;

assign zext_ln48_22_fu_1993_p1 = add_ln48_3_reg_2574;

assign zext_ln48_23_fu_1972_p1 = add_ln48_3_reg_2574;

assign zext_ln48_2_fu_1058_p1 = shl_ln1_fu_1037_p3;

assign zext_ln48_3_fu_1312_p1 = grp_fu_709_p4;

assign zext_ln48_4_fu_1086_p1 = shl_ln1_reg_2226;

assign zext_ln48_5_fu_1631_p1 = grp_fu_744_p4;

assign zext_ln48_6_fu_1128_p1 = add_ln48_fu_1081_p2;

assign zext_ln48_7_fu_1892_p1 = grp_fu_744_p4;

assign zext_ln48_8_fu_1106_p1 = add_ln48_fu_1081_p2;

assign zext_ln48_9_fu_1329_p1 = shl_ln48_1_fu_1322_p3;

assign zext_ln48_fu_1027_p1 = grp_fu_709_p4;

assign zext_ln49_1_fu_1448_p1 = select_ln49_1_fu_1440_p3;

assign zext_ln49_2_fu_1772_p1 = select_ln49_2_fu_1764_p3;

assign zext_ln49_3_fu_2028_p1 = select_ln49_3_fu_2020_p3;

assign zext_ln49_fu_1169_p1 = select_ln49_fu_1161_p3;

always @ (posedge ap_clk) begin
    q_out_1_reg_2093[0] <= 1'b1;
    zext_ln39_reg_2131[0] <= 1'b1;
    zext_ln39_reg_2131[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln39_1_reg_2137[0] <= 1'b1;
    zext_ln39_1_reg_2137[8] <= 1'b0;
    shl_ln1_reg_2226[5:0] <= 6'b000000;
    shl_ln48_1_reg_2323[5:0] <= 6'b000000;
    shl_ln48_2_reg_2470[5:0] <= 6'b000000;
    shl_ln48_3_reg_2559[5:0] <= 6'b000000;
end

endmodule //bfs
