// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_ecb3 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        buf_0_address0,
        buf_0_ce0,
        buf_0_we0,
        buf_0_d0,
        buf_0_q0,
        buf_0_address1,
        buf_0_ce1,
        buf_0_we1,
        buf_0_d1,
        buf_0_q1,
        buf_1_address0,
        buf_1_ce0,
        buf_1_we0,
        buf_1_d0,
        buf_1_q0,
        buf_1_address1,
        buf_1_ce1,
        buf_1_we1,
        buf_1_d1,
        buf_1_q1,
        ctx_i,
        ctx_o,
        ctx_o_ap_vld,
        rcon_1_out,
        rcon_1_out_ap_vld,
        grp_aes_expandEncKey_fu_135_p_din1,
        grp_aes_expandEncKey_fu_135_p_din2,
        grp_aes_expandEncKey_fu_135_p_din3,
        grp_aes_expandEncKey_fu_135_p_dout0_0,
        grp_aes_expandEncKey_fu_135_p_dout0_1,
        grp_aes_expandEncKey_fu_135_p_start,
        grp_aes_expandEncKey_fu_135_p_ready,
        grp_aes_expandEncKey_fu_135_p_done,
        grp_aes_expandEncKey_fu_135_p_idle
);

parameter    ap_ST_fsm_pp0_stage0 = 25'd1;
parameter    ap_ST_fsm_pp0_stage1 = 25'd2;
parameter    ap_ST_fsm_pp0_stage2 = 25'd4;
parameter    ap_ST_fsm_pp0_stage3 = 25'd8;
parameter    ap_ST_fsm_pp0_stage4 = 25'd16;
parameter    ap_ST_fsm_pp0_stage5 = 25'd32;
parameter    ap_ST_fsm_pp0_stage6 = 25'd64;
parameter    ap_ST_fsm_pp0_stage7 = 25'd128;
parameter    ap_ST_fsm_pp0_stage8 = 25'd256;
parameter    ap_ST_fsm_pp0_stage9 = 25'd512;
parameter    ap_ST_fsm_pp0_stage10 = 25'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 25'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 25'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 25'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 25'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 25'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 25'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 25'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 25'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 25'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 25'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 25'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 25'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 25'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 25'd16777216;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] buf_0_address0;
output   buf_0_ce0;
output   buf_0_we0;
output  [15:0] buf_0_d0;
input  [15:0] buf_0_q0;
output  [1:0] buf_0_address1;
output   buf_0_ce1;
output   buf_0_we1;
output  [15:0] buf_0_d1;
input  [15:0] buf_0_q1;
output  [1:0] buf_1_address0;
output   buf_1_ce0;
output   buf_1_we0;
output  [15:0] buf_1_d0;
input  [15:0] buf_1_q0;
output  [1:0] buf_1_address1;
output   buf_1_ce1;
output   buf_1_we1;
output  [15:0] buf_1_d1;
input  [15:0] buf_1_q1;
input  [767:0] ctx_i;
output  [767:0] ctx_o;
output   ctx_o_ap_vld;
output  [7:0] rcon_1_out;
output   rcon_1_out_ap_vld;
output  [767:0] grp_aes_expandEncKey_fu_135_p_din1;
output  [9:0] grp_aes_expandEncKey_fu_135_p_din2;
output  [7:0] grp_aes_expandEncKey_fu_135_p_din3;
input  [767:0] grp_aes_expandEncKey_fu_135_p_dout0_0;
input  [7:0] grp_aes_expandEncKey_fu_135_p_dout0_1;
output   grp_aes_expandEncKey_fu_135_p_start;
input   grp_aes_expandEncKey_fu_135_p_ready;
input   grp_aes_expandEncKey_fu_135_p_done;
input   grp_aes_expandEncKey_fu_135_p_idle;

reg ap_idle;
reg[1:0] buf_0_address0;
reg buf_0_ce0;
reg buf_0_we0;
reg[15:0] buf_0_d0;
reg[1:0] buf_0_address1;
reg buf_0_ce1;
reg buf_0_we1;
reg[15:0] buf_0_d1;
reg[1:0] buf_1_address0;
reg buf_1_ce0;
reg buf_1_we0;
reg[15:0] buf_1_d0;
reg[1:0] buf_1_address1;
reg buf_1_ce1;
reg buf_1_we1;
reg[15:0] buf_1_d1;
reg[767:0] ctx_o;
reg ctx_o_ap_vld;
reg rcon_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [24:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state29_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [0:0] icmp_ln191_reg_208;
reg    ap_condition_exit_pp0_iter0_stage3;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_state25_pp0_stage24_iter0;
wire    ap_block_pp0_stage24_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state26_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln191_fu_150_p2;
wire   [0:0] trunc_ln196_fu_156_p1;
reg   [0:0] trunc_ln196_reg_212;
reg   [0:0] trunc_ln196_reg_212_pp0_iter1_reg;
reg   [767:0] ctx_read_reg_216;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state27_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
reg   [7:0] rcon_1_reg_227;
reg    ap_enable_reg_pp0_iter0_reg;
wire    grp_aes_expandEncKey_fu_88_ap_ready;
wire    grp_aes_subBytes_1_fu_99_ap_start;
wire    grp_aes_subBytes_1_fu_99_ap_done;
wire    grp_aes_subBytes_1_fu_99_ap_idle;
wire    grp_aes_subBytes_1_fu_99_ap_ready;
wire   [1:0] grp_aes_subBytes_1_fu_99_buf_0_address0;
wire    grp_aes_subBytes_1_fu_99_buf_0_ce0;
wire    grp_aes_subBytes_1_fu_99_buf_0_we0;
wire   [15:0] grp_aes_subBytes_1_fu_99_buf_0_d0;
wire   [1:0] grp_aes_subBytes_1_fu_99_buf_0_address1;
wire    grp_aes_subBytes_1_fu_99_buf_0_ce1;
wire    grp_aes_subBytes_1_fu_99_buf_0_we1;
wire   [15:0] grp_aes_subBytes_1_fu_99_buf_0_d1;
wire   [1:0] grp_aes_subBytes_1_fu_99_buf_1_address0;
wire    grp_aes_subBytes_1_fu_99_buf_1_ce0;
wire    grp_aes_subBytes_1_fu_99_buf_1_we0;
wire   [15:0] grp_aes_subBytes_1_fu_99_buf_1_d0;
wire   [1:0] grp_aes_subBytes_1_fu_99_buf_1_address1;
wire    grp_aes_subBytes_1_fu_99_buf_1_ce1;
wire    grp_aes_subBytes_1_fu_99_buf_1_we1;
wire   [15:0] grp_aes_subBytes_1_fu_99_buf_1_d1;
wire    grp_aes_shiftRows_1_fu_109_ap_start;
wire    grp_aes_shiftRows_1_fu_109_ap_done;
wire    grp_aes_shiftRows_1_fu_109_ap_idle;
wire    grp_aes_shiftRows_1_fu_109_ap_ready;
wire   [1:0] grp_aes_shiftRows_1_fu_109_buf_0_address0;
wire    grp_aes_shiftRows_1_fu_109_buf_0_ce0;
wire    grp_aes_shiftRows_1_fu_109_buf_0_we0;
wire   [15:0] grp_aes_shiftRows_1_fu_109_buf_0_d0;
wire   [1:0] grp_aes_shiftRows_1_fu_109_buf_0_address1;
wire    grp_aes_shiftRows_1_fu_109_buf_0_ce1;
wire    grp_aes_shiftRows_1_fu_109_buf_0_we1;
wire   [15:0] grp_aes_shiftRows_1_fu_109_buf_0_d1;
wire   [1:0] grp_aes_shiftRows_1_fu_109_buf_1_address0;
wire    grp_aes_shiftRows_1_fu_109_buf_1_ce0;
wire    grp_aes_shiftRows_1_fu_109_buf_1_we0;
wire   [15:0] grp_aes_shiftRows_1_fu_109_buf_1_d0;
wire   [1:0] grp_aes_shiftRows_1_fu_109_buf_1_address1;
wire    grp_aes_shiftRows_1_fu_109_buf_1_ce1;
wire    grp_aes_shiftRows_1_fu_109_buf_1_we1;
wire   [15:0] grp_aes_shiftRows_1_fu_109_buf_1_d1;
wire    grp_aes_mixColumns_1_fu_117_ap_start;
wire    grp_aes_mixColumns_1_fu_117_ap_done;
wire    grp_aes_mixColumns_1_fu_117_ap_idle;
wire    grp_aes_mixColumns_1_fu_117_ap_ready;
wire   [1:0] grp_aes_mixColumns_1_fu_117_buf_0_address0;
wire    grp_aes_mixColumns_1_fu_117_buf_0_ce0;
wire    grp_aes_mixColumns_1_fu_117_buf_0_we0;
wire   [15:0] grp_aes_mixColumns_1_fu_117_buf_0_d0;
wire   [1:0] grp_aes_mixColumns_1_fu_117_buf_0_address1;
wire    grp_aes_mixColumns_1_fu_117_buf_0_ce1;
wire    grp_aes_mixColumns_1_fu_117_buf_0_we1;
wire   [15:0] grp_aes_mixColumns_1_fu_117_buf_0_d1;
wire   [1:0] grp_aes_mixColumns_1_fu_117_buf_1_address0;
wire    grp_aes_mixColumns_1_fu_117_buf_1_ce0;
wire    grp_aes_mixColumns_1_fu_117_buf_1_we0;
wire   [15:0] grp_aes_mixColumns_1_fu_117_buf_1_d0;
wire   [1:0] grp_aes_mixColumns_1_fu_117_buf_1_address1;
wire    grp_aes_mixColumns_1_fu_117_buf_1_ce1;
wire    grp_aes_mixColumns_1_fu_117_buf_1_we1;
wire   [15:0] grp_aes_mixColumns_1_fu_117_buf_1_d1;
wire    grp_aes_addRoundKey_1_fu_125_ap_start;
wire    grp_aes_addRoundKey_1_fu_125_ap_done;
wire    grp_aes_addRoundKey_1_fu_125_ap_idle;
wire    grp_aes_addRoundKey_1_fu_125_ap_ready;
wire   [1:0] grp_aes_addRoundKey_1_fu_125_buf_0_address0;
wire    grp_aes_addRoundKey_1_fu_125_buf_0_ce0;
wire    grp_aes_addRoundKey_1_fu_125_buf_0_we0;
wire   [15:0] grp_aes_addRoundKey_1_fu_125_buf_0_d0;
wire   [1:0] grp_aes_addRoundKey_1_fu_125_buf_0_address1;
wire    grp_aes_addRoundKey_1_fu_125_buf_0_ce1;
wire    grp_aes_addRoundKey_1_fu_125_buf_0_we1;
wire   [15:0] grp_aes_addRoundKey_1_fu_125_buf_0_d1;
wire   [1:0] grp_aes_addRoundKey_1_fu_125_buf_1_address0;
wire    grp_aes_addRoundKey_1_fu_125_buf_1_ce0;
wire    grp_aes_addRoundKey_1_fu_125_buf_1_we0;
wire   [15:0] grp_aes_addRoundKey_1_fu_125_buf_1_d0;
wire   [1:0] grp_aes_addRoundKey_1_fu_125_buf_1_address1;
wire    grp_aes_addRoundKey_1_fu_125_buf_1_ce1;
wire    grp_aes_addRoundKey_1_fu_125_buf_1_we1;
wire   [15:0] grp_aes_addRoundKey_1_fu_125_buf_1_d1;
reg   [767:0] grp_aes_addRoundKey_1_fu_125_p_read;
reg   [7:0] grp_aes_addRoundKey_1_fu_125_key_idx;
reg    grp_aes_expandEncKey_fu_88_ap_start_reg;
reg    ap_predicate_op50_call_state2_state1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
reg    grp_aes_subBytes_1_fu_99_ap_start_reg;
wire    ap_block_pp0_stage3_11001;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_block_pp0_stage10;
wire    ap_block_pp0_stage11;
reg    grp_aes_shiftRows_1_fu_109_ap_start_reg;
wire    ap_block_state14_pp0_stage13_iter0;
wire    ap_block_pp0_stage13_11001;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
reg    grp_aes_mixColumns_1_fu_117_ap_start_reg;
wire    ap_block_state17_pp0_stage16_iter0;
wire    ap_block_pp0_stage16_11001;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
reg    grp_aes_addRoundKey_1_fu_125_ap_start_reg;
wire    ap_block_state21_pp0_stage20_iter0;
wire    ap_block_pp0_stage20_11001;
reg    ap_predicate_op90_call_state22_state21;
wire    ap_block_pp0_stage24_11001;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_block_pp0_stage24;
wire    ap_block_pp0_stage0;
reg   [3:0] i_fu_60;
wire   [3:0] add_ln191_fu_160_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_i_2;
reg   [7:0] rcon_fu_64;
reg   [7:0] ap_sig_allocacmp_rcon_load_1;
wire    ap_block_pp0_stage0_01001;
wire    ap_block_pp0_stage3_01001;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [24:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state28_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_pp0_stage6_subdone;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_pp0_stage7_subdone;
wire    ap_block_state9_pp0_stage8_iter0;
wire    ap_block_pp0_stage8_subdone;
wire    ap_block_state10_pp0_stage9_iter0;
wire    ap_block_pp0_stage9_subdone;
wire    ap_block_state11_pp0_stage10_iter0;
wire    ap_block_pp0_stage10_subdone;
wire    ap_block_state12_pp0_stage11_iter0;
wire    ap_block_pp0_stage11_subdone;
wire    ap_block_state13_pp0_stage12_iter0;
wire    ap_block_pp0_stage12_subdone;
wire    ap_block_pp0_stage13_subdone;
wire    ap_block_state15_pp0_stage14_iter0;
wire    ap_block_pp0_stage14_subdone;
wire    ap_block_state16_pp0_stage15_iter0;
wire    ap_block_pp0_stage15_subdone;
wire    ap_block_pp0_stage16_subdone;
wire    ap_block_state18_pp0_stage17_iter0;
wire    ap_block_pp0_stage17_subdone;
wire    ap_block_state19_pp0_stage18_iter0;
wire    ap_block_pp0_stage18_subdone;
wire    ap_block_state20_pp0_stage19_iter0;
wire    ap_block_pp0_stage19_subdone;
wire    ap_block_pp0_stage20_subdone;
wire    ap_block_state22_pp0_stage21_iter0;
wire    ap_block_pp0_stage21_subdone;
wire    ap_block_state23_pp0_stage22_iter0;
wire    ap_block_pp0_stage22_subdone;
wire    ap_block_state24_pp0_stage23_iter0;
wire    ap_block_pp0_stage23_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 25'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 grp_aes_expandEncKey_fu_88_ap_start_reg = 1'b0;
#0 grp_aes_subBytes_1_fu_99_ap_start_reg = 1'b0;
#0 grp_aes_shiftRows_1_fu_109_ap_start_reg = 1'b0;
#0 grp_aes_mixColumns_1_fu_117_ap_start_reg = 1'b0;
#0 grp_aes_addRoundKey_1_fu_125_ap_start_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

aes256_encrypt_ecb_aes_subBytes_1 grp_aes_subBytes_1_fu_99(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_subBytes_1_fu_99_ap_start),
    .ap_done(grp_aes_subBytes_1_fu_99_ap_done),
    .ap_idle(grp_aes_subBytes_1_fu_99_ap_idle),
    .ap_ready(grp_aes_subBytes_1_fu_99_ap_ready),
    .buf_0_address0(grp_aes_subBytes_1_fu_99_buf_0_address0),
    .buf_0_ce0(grp_aes_subBytes_1_fu_99_buf_0_ce0),
    .buf_0_we0(grp_aes_subBytes_1_fu_99_buf_0_we0),
    .buf_0_d0(grp_aes_subBytes_1_fu_99_buf_0_d0),
    .buf_0_q0(buf_0_q0),
    .buf_0_address1(grp_aes_subBytes_1_fu_99_buf_0_address1),
    .buf_0_ce1(grp_aes_subBytes_1_fu_99_buf_0_ce1),
    .buf_0_we1(grp_aes_subBytes_1_fu_99_buf_0_we1),
    .buf_0_d1(grp_aes_subBytes_1_fu_99_buf_0_d1),
    .buf_0_q1(buf_0_q1),
    .buf_1_address0(grp_aes_subBytes_1_fu_99_buf_1_address0),
    .buf_1_ce0(grp_aes_subBytes_1_fu_99_buf_1_ce0),
    .buf_1_we0(grp_aes_subBytes_1_fu_99_buf_1_we0),
    .buf_1_d0(grp_aes_subBytes_1_fu_99_buf_1_d0),
    .buf_1_q0(buf_1_q0),
    .buf_1_address1(grp_aes_subBytes_1_fu_99_buf_1_address1),
    .buf_1_ce1(grp_aes_subBytes_1_fu_99_buf_1_ce1),
    .buf_1_we1(grp_aes_subBytes_1_fu_99_buf_1_we1),
    .buf_1_d1(grp_aes_subBytes_1_fu_99_buf_1_d1),
    .buf_1_q1(buf_1_q1)
);

aes256_encrypt_ecb_aes_shiftRows_1 grp_aes_shiftRows_1_fu_109(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_shiftRows_1_fu_109_ap_start),
    .ap_done(grp_aes_shiftRows_1_fu_109_ap_done),
    .ap_idle(grp_aes_shiftRows_1_fu_109_ap_idle),
    .ap_ready(grp_aes_shiftRows_1_fu_109_ap_ready),
    .buf_0_address0(grp_aes_shiftRows_1_fu_109_buf_0_address0),
    .buf_0_ce0(grp_aes_shiftRows_1_fu_109_buf_0_ce0),
    .buf_0_we0(grp_aes_shiftRows_1_fu_109_buf_0_we0),
    .buf_0_d0(grp_aes_shiftRows_1_fu_109_buf_0_d0),
    .buf_0_q0(buf_0_q0),
    .buf_0_address1(grp_aes_shiftRows_1_fu_109_buf_0_address1),
    .buf_0_ce1(grp_aes_shiftRows_1_fu_109_buf_0_ce1),
    .buf_0_we1(grp_aes_shiftRows_1_fu_109_buf_0_we1),
    .buf_0_d1(grp_aes_shiftRows_1_fu_109_buf_0_d1),
    .buf_0_q1(buf_0_q1),
    .buf_1_address0(grp_aes_shiftRows_1_fu_109_buf_1_address0),
    .buf_1_ce0(grp_aes_shiftRows_1_fu_109_buf_1_ce0),
    .buf_1_we0(grp_aes_shiftRows_1_fu_109_buf_1_we0),
    .buf_1_d0(grp_aes_shiftRows_1_fu_109_buf_1_d0),
    .buf_1_q0(buf_1_q0),
    .buf_1_address1(grp_aes_shiftRows_1_fu_109_buf_1_address1),
    .buf_1_ce1(grp_aes_shiftRows_1_fu_109_buf_1_ce1),
    .buf_1_we1(grp_aes_shiftRows_1_fu_109_buf_1_we1),
    .buf_1_d1(grp_aes_shiftRows_1_fu_109_buf_1_d1),
    .buf_1_q1(buf_1_q1)
);

aes256_encrypt_ecb_aes_mixColumns_1 grp_aes_mixColumns_1_fu_117(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_mixColumns_1_fu_117_ap_start),
    .ap_done(grp_aes_mixColumns_1_fu_117_ap_done),
    .ap_idle(grp_aes_mixColumns_1_fu_117_ap_idle),
    .ap_ready(grp_aes_mixColumns_1_fu_117_ap_ready),
    .buf_0_address0(grp_aes_mixColumns_1_fu_117_buf_0_address0),
    .buf_0_ce0(grp_aes_mixColumns_1_fu_117_buf_0_ce0),
    .buf_0_we0(grp_aes_mixColumns_1_fu_117_buf_0_we0),
    .buf_0_d0(grp_aes_mixColumns_1_fu_117_buf_0_d0),
    .buf_0_q0(buf_0_q0),
    .buf_0_address1(grp_aes_mixColumns_1_fu_117_buf_0_address1),
    .buf_0_ce1(grp_aes_mixColumns_1_fu_117_buf_0_ce1),
    .buf_0_we1(grp_aes_mixColumns_1_fu_117_buf_0_we1),
    .buf_0_d1(grp_aes_mixColumns_1_fu_117_buf_0_d1),
    .buf_0_q1(buf_0_q1),
    .buf_1_address0(grp_aes_mixColumns_1_fu_117_buf_1_address0),
    .buf_1_ce0(grp_aes_mixColumns_1_fu_117_buf_1_ce0),
    .buf_1_we0(grp_aes_mixColumns_1_fu_117_buf_1_we0),
    .buf_1_d0(grp_aes_mixColumns_1_fu_117_buf_1_d0),
    .buf_1_q0(buf_1_q0),
    .buf_1_address1(grp_aes_mixColumns_1_fu_117_buf_1_address1),
    .buf_1_ce1(grp_aes_mixColumns_1_fu_117_buf_1_ce1),
    .buf_1_we1(grp_aes_mixColumns_1_fu_117_buf_1_we1),
    .buf_1_d1(grp_aes_mixColumns_1_fu_117_buf_1_d1),
    .buf_1_q1(buf_1_q1)
);

aes256_encrypt_ecb_aes_addRoundKey_1 grp_aes_addRoundKey_1_fu_125(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_addRoundKey_1_fu_125_ap_start),
    .ap_done(grp_aes_addRoundKey_1_fu_125_ap_done),
    .ap_idle(grp_aes_addRoundKey_1_fu_125_ap_idle),
    .ap_ready(grp_aes_addRoundKey_1_fu_125_ap_ready),
    .buf_0_address0(grp_aes_addRoundKey_1_fu_125_buf_0_address0),
    .buf_0_ce0(grp_aes_addRoundKey_1_fu_125_buf_0_ce0),
    .buf_0_we0(grp_aes_addRoundKey_1_fu_125_buf_0_we0),
    .buf_0_d0(grp_aes_addRoundKey_1_fu_125_buf_0_d0),
    .buf_0_q0(buf_0_q0),
    .buf_0_address1(grp_aes_addRoundKey_1_fu_125_buf_0_address1),
    .buf_0_ce1(grp_aes_addRoundKey_1_fu_125_buf_0_ce1),
    .buf_0_we1(grp_aes_addRoundKey_1_fu_125_buf_0_we1),
    .buf_0_d1(grp_aes_addRoundKey_1_fu_125_buf_0_d1),
    .buf_0_q1(buf_0_q1),
    .buf_1_address0(grp_aes_addRoundKey_1_fu_125_buf_1_address0),
    .buf_1_ce0(grp_aes_addRoundKey_1_fu_125_buf_1_ce0),
    .buf_1_we0(grp_aes_addRoundKey_1_fu_125_buf_1_we0),
    .buf_1_d0(grp_aes_addRoundKey_1_fu_125_buf_1_d0),
    .buf_1_q0(buf_1_q0),
    .buf_1_address1(grp_aes_addRoundKey_1_fu_125_buf_1_address1),
    .buf_1_ce1(grp_aes_addRoundKey_1_fu_125_buf_1_ce1),
    .buf_1_we1(grp_aes_addRoundKey_1_fu_125_buf_1_we1),
    .buf_1_d1(grp_aes_addRoundKey_1_fu_125_buf_1_d1),
    .buf_1_q1(buf_1_q1),
    .p_read(grp_aes_addRoundKey_1_fu_125_p_read),
    .key_idx(grp_aes_addRoundKey_1_fu_125_key_idx),
    .ap_ce(1'b1)
);

aes256_encrypt_ecb_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage3),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage24_subdone) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_addRoundKey_1_fu_125_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd0)) | ((ap_predicate_op90_call_state22_state21 == 1'b1) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)))) begin
            grp_aes_addRoundKey_1_fu_125_ap_start_reg <= 1'b1;
        end else if ((grp_aes_addRoundKey_1_fu_125_ap_ready == 1'b1)) begin
            grp_aes_addRoundKey_1_fu_125_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_expandEncKey_fu_88_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_predicate_op50_call_state2_state1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            grp_aes_expandEncKey_fu_88_ap_start_reg <= 1'b1;
        end else if ((grp_aes_expandEncKey_fu_88_ap_ready == 1'b1)) begin
            grp_aes_expandEncKey_fu_88_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_mixColumns_1_fu_117_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16))) begin
            grp_aes_mixColumns_1_fu_117_ap_start_reg <= 1'b1;
        end else if ((grp_aes_mixColumns_1_fu_117_ap_ready == 1'b1)) begin
            grp_aes_mixColumns_1_fu_117_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_shiftRows_1_fu_109_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13))) begin
            grp_aes_shiftRows_1_fu_109_ap_start_reg <= 1'b1;
        end else if ((grp_aes_shiftRows_1_fu_109_ap_ready == 1'b1)) begin
            grp_aes_shiftRows_1_fu_109_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_subBytes_1_fu_99_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_aes_subBytes_1_fu_99_ap_start_reg <= 1'b1;
        end else if ((grp_aes_subBytes_1_fu_99_ap_ready == 1'b1)) begin
            grp_aes_subBytes_1_fu_99_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln191_fu_150_p2 == 1'd0))) begin
            i_fu_60 <= add_ln191_fu_160_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            i_fu_60 <= 4'd1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rcon_fu_64 <= 8'd1;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0))) begin
        rcon_fu_64 <= rcon_1_reg_227;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ctx_read_reg_216 <= ctx_i;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln191_reg_208 <= icmp_ln191_fu_150_p2;
        trunc_ln196_reg_212_pp0_iter1_reg <= trunc_ln196_reg_212;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0))) begin
        rcon_1_reg_227 <= grp_aes_expandEncKey_fu_135_p_dout0_1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln191_fu_150_p2 == 1'd0))) begin
        trunc_ln196_reg_212 <= trunc_ln196_fu_156_p1;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_208 == 1'd1) & (1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage3 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage24_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_i_2 = 4'd1;
    end else begin
        ap_sig_allocacmp_i_2 = i_fu_60;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0))) begin
        ap_sig_allocacmp_rcon_load_1 = rcon_1_reg_227;
    end else begin
        ap_sig_allocacmp_rcon_load_1 = rcon_fu_64;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_0_address0 = grp_aes_addRoundKey_1_fu_125_buf_0_address0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_0_address0 = grp_aes_mixColumns_1_fu_117_buf_0_address0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_0_address0 = grp_aes_shiftRows_1_fu_109_buf_0_address0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_0_address0 = grp_aes_subBytes_1_fu_99_buf_0_address0;
    end else begin
        buf_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_0_address1 = grp_aes_addRoundKey_1_fu_125_buf_0_address1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_0_address1 = grp_aes_mixColumns_1_fu_117_buf_0_address1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_0_address1 = grp_aes_shiftRows_1_fu_109_buf_0_address1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_0_address1 = grp_aes_subBytes_1_fu_99_buf_0_address1;
    end else begin
        buf_0_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_0_ce0 = grp_aes_addRoundKey_1_fu_125_buf_0_ce0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_0_ce0 = grp_aes_mixColumns_1_fu_117_buf_0_ce0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_0_ce0 = grp_aes_shiftRows_1_fu_109_buf_0_ce0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_0_ce0 = grp_aes_subBytes_1_fu_99_buf_0_ce0;
    end else begin
        buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_0_ce1 = grp_aes_addRoundKey_1_fu_125_buf_0_ce1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_0_ce1 = grp_aes_mixColumns_1_fu_117_buf_0_ce1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_0_ce1 = grp_aes_shiftRows_1_fu_109_buf_0_ce1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_0_ce1 = grp_aes_subBytes_1_fu_99_buf_0_ce1;
    end else begin
        buf_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_0_d0 = grp_aes_addRoundKey_1_fu_125_buf_0_d0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_0_d0 = grp_aes_mixColumns_1_fu_117_buf_0_d0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_0_d0 = grp_aes_shiftRows_1_fu_109_buf_0_d0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_0_d0 = grp_aes_subBytes_1_fu_99_buf_0_d0;
    end else begin
        buf_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_0_d1 = grp_aes_addRoundKey_1_fu_125_buf_0_d1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_0_d1 = grp_aes_mixColumns_1_fu_117_buf_0_d1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_0_d1 = grp_aes_shiftRows_1_fu_109_buf_0_d1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_0_d1 = grp_aes_subBytes_1_fu_99_buf_0_d1;
    end else begin
        buf_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_0_we0 = grp_aes_addRoundKey_1_fu_125_buf_0_we0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_0_we0 = grp_aes_mixColumns_1_fu_117_buf_0_we0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_0_we0 = grp_aes_shiftRows_1_fu_109_buf_0_we0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_0_we0 = grp_aes_subBytes_1_fu_99_buf_0_we0;
    end else begin
        buf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_0_we1 = grp_aes_addRoundKey_1_fu_125_buf_0_we1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_0_we1 = grp_aes_mixColumns_1_fu_117_buf_0_we1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_0_we1 = grp_aes_shiftRows_1_fu_109_buf_0_we1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_0_we1 = grp_aes_subBytes_1_fu_99_buf_0_we1;
    end else begin
        buf_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_1_address0 = grp_aes_addRoundKey_1_fu_125_buf_1_address0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_1_address0 = grp_aes_mixColumns_1_fu_117_buf_1_address0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_1_address0 = grp_aes_shiftRows_1_fu_109_buf_1_address0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_1_address0 = grp_aes_subBytes_1_fu_99_buf_1_address0;
    end else begin
        buf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_1_address1 = grp_aes_addRoundKey_1_fu_125_buf_1_address1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_1_address1 = grp_aes_mixColumns_1_fu_117_buf_1_address1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_1_address1 = grp_aes_shiftRows_1_fu_109_buf_1_address1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_1_address1 = grp_aes_subBytes_1_fu_99_buf_1_address1;
    end else begin
        buf_1_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_1_ce0 = grp_aes_addRoundKey_1_fu_125_buf_1_ce0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_1_ce0 = grp_aes_mixColumns_1_fu_117_buf_1_ce0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_1_ce0 = grp_aes_shiftRows_1_fu_109_buf_1_ce0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_1_ce0 = grp_aes_subBytes_1_fu_99_buf_1_ce0;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_1_ce1 = grp_aes_addRoundKey_1_fu_125_buf_1_ce1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_1_ce1 = grp_aes_mixColumns_1_fu_117_buf_1_ce1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_1_ce1 = grp_aes_shiftRows_1_fu_109_buf_1_ce1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_1_ce1 = grp_aes_subBytes_1_fu_99_buf_1_ce1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_1_d0 = grp_aes_addRoundKey_1_fu_125_buf_1_d0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_1_d0 = grp_aes_mixColumns_1_fu_117_buf_1_d0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_1_d0 = grp_aes_shiftRows_1_fu_109_buf_1_d0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_1_d0 = grp_aes_subBytes_1_fu_99_buf_1_d0;
    end else begin
        buf_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_1_d1 = grp_aes_addRoundKey_1_fu_125_buf_1_d1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_1_d1 = grp_aes_mixColumns_1_fu_117_buf_1_d1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_1_d1 = grp_aes_shiftRows_1_fu_109_buf_1_d1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_1_d1 = grp_aes_subBytes_1_fu_99_buf_1_d1;
    end else begin
        buf_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_1_we0 = grp_aes_addRoundKey_1_fu_125_buf_1_we0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_1_we0 = grp_aes_mixColumns_1_fu_117_buf_1_we0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_1_we0 = grp_aes_shiftRows_1_fu_109_buf_1_we0;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_1_we0 = grp_aes_subBytes_1_fu_99_buf_1_we0;
    end else begin
        buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0)) | ((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (trunc_ln196_reg_212_pp0_iter1_reg == 1'd0)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage24) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage23) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage22) & (trunc_ln196_reg_212 == 1'd1)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1)))) begin
        buf_1_we1 = grp_aes_addRoundKey_1_fu_125_buf_1_we1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage20)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage19)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage18)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage17)))) begin
        buf_1_we1 = grp_aes_mixColumns_1_fu_117_buf_1_we1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage16)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)))) begin
        buf_1_we1 = grp_aes_shiftRows_1_fu_109_buf_1_we1;
    end else if ((((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        buf_1_we1 = grp_aes_subBytes_1_fu_99_buf_1_we1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_01001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0))) begin
        ctx_o = grp_aes_expandEncKey_fu_135_p_dout0_0;
    end else begin
        ctx_o = ctx_i;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0))) begin
        ctx_o_ap_vld = 1'b1;
    end else begin
        ctx_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0))) begin
        grp_aes_addRoundKey_1_fu_125_key_idx = 8'd0;
    end else if (((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1))) begin
        grp_aes_addRoundKey_1_fu_125_key_idx = 8'd128;
    end else begin
        grp_aes_addRoundKey_1_fu_125_key_idx = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (trunc_ln196_reg_212 == 1'd0))) begin
        grp_aes_addRoundKey_1_fu_125_p_read = grp_aes_expandEncKey_fu_135_p_dout0_0;
    end else if (((icmp_ln191_reg_208 == 1'd0) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage21) & (trunc_ln196_reg_212 == 1'd1))) begin
        grp_aes_addRoundKey_1_fu_125_p_read = ctx_read_reg_216;
    end else begin
        grp_aes_addRoundKey_1_fu_125_p_read = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln191_reg_208 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        rcon_1_out_ap_vld = 1'b1;
    end else begin
        rcon_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage3)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln191_fu_160_p2 = (ap_sig_allocacmp_i_2 + 4'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage11_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage12_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage13_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage14_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage15_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage16_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage17_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage18_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage19_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage21_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage22_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage23_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage24_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage8_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage9_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage9_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage10_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage11_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage12_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage13_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage14_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage15_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage16_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage17_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage18_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage19_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage20_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage21_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage22_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage23_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage24_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage8_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage3;

always @ (*) begin
    ap_predicate_op50_call_state2_state1 = ((trunc_ln196_fu_156_p1 == 1'd0) & (icmp_ln191_fu_150_p2 == 1'd0));
end

always @ (*) begin
    ap_predicate_op90_call_state22_state21 = ((icmp_ln191_reg_208 == 1'd0) & (trunc_ln196_reg_212 == 1'd1));
end

assign grp_aes_addRoundKey_1_fu_125_ap_start = grp_aes_addRoundKey_1_fu_125_ap_start_reg;

assign grp_aes_expandEncKey_fu_135_p_din1 = ctx_i;

assign grp_aes_expandEncKey_fu_135_p_din2 = 10'd0;

assign grp_aes_expandEncKey_fu_135_p_din3 = ap_sig_allocacmp_rcon_load_1;

assign grp_aes_expandEncKey_fu_135_p_start = grp_aes_expandEncKey_fu_88_ap_start_reg;

assign grp_aes_expandEncKey_fu_88_ap_ready = grp_aes_expandEncKey_fu_135_p_ready;

assign grp_aes_mixColumns_1_fu_117_ap_start = grp_aes_mixColumns_1_fu_117_ap_start_reg;

assign grp_aes_shiftRows_1_fu_109_ap_start = grp_aes_shiftRows_1_fu_109_ap_start_reg;

assign grp_aes_subBytes_1_fu_99_ap_start = grp_aes_subBytes_1_fu_99_ap_start_reg;

assign icmp_ln191_fu_150_p2 = ((ap_sig_allocacmp_i_2 == 4'd14) ? 1'b1 : 1'b0);

assign rcon_1_out = rcon_fu_64;

assign trunc_ln196_fu_156_p1 = ap_sig_allocacmp_i_2[0:0];

endmodule //aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_ecb3
