// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="aes256_encrypt_ecb_aes256_encrypt_ecb,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=11.025200,HLS_SYN_LAT=582,HLS_SYN_TPT=none,HLS_SYN_MEM=9,HLS_SYN_DSP=0,HLS_SYN_FF=60332,HLS_SYN_LUT=409315,HLS_VERSION=2022_1}" *)

module aes256_encrypt_ecb (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ctx_i,
        ctx_o,
        ctx_o_ap_vld,
        k_0_address0,
        k_0_ce0,
        k_0_q0,
        k_0_address1,
        k_0_ce1,
        k_0_q1,
        k_1_address0,
        k_1_ce0,
        k_1_q0,
        k_1_address1,
        k_1_ce1,
        k_1_q1,
        buf_0_address0,
        buf_0_ce0,
        buf_0_we0,
        buf_0_d0,
        buf_0_q0,
        buf_0_address1,
        buf_0_ce1,
        buf_0_we1,
        buf_0_d1,
        buf_0_q1,
        buf_1_address0,
        buf_1_ce0,
        buf_1_we0,
        buf_1_d0,
        buf_1_q0,
        buf_1_address1,
        buf_1_ce1,
        buf_1_we1,
        buf_1_d1,
        buf_1_q1
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_state9 = 37'd256;
parameter    ap_ST_fsm_state10 = 37'd512;
parameter    ap_ST_fsm_state11 = 37'd1024;
parameter    ap_ST_fsm_state12 = 37'd2048;
parameter    ap_ST_fsm_state13 = 37'd4096;
parameter    ap_ST_fsm_state14 = 37'd8192;
parameter    ap_ST_fsm_state15 = 37'd16384;
parameter    ap_ST_fsm_state16 = 37'd32768;
parameter    ap_ST_fsm_state17 = 37'd65536;
parameter    ap_ST_fsm_state18 = 37'd131072;
parameter    ap_ST_fsm_state19 = 37'd262144;
parameter    ap_ST_fsm_state20 = 37'd524288;
parameter    ap_ST_fsm_state21 = 37'd1048576;
parameter    ap_ST_fsm_state22 = 37'd2097152;
parameter    ap_ST_fsm_state23 = 37'd4194304;
parameter    ap_ST_fsm_state24 = 37'd8388608;
parameter    ap_ST_fsm_state25 = 37'd16777216;
parameter    ap_ST_fsm_state26 = 37'd33554432;
parameter    ap_ST_fsm_state27 = 37'd67108864;
parameter    ap_ST_fsm_state28 = 37'd134217728;
parameter    ap_ST_fsm_state29 = 37'd268435456;
parameter    ap_ST_fsm_state30 = 37'd536870912;
parameter    ap_ST_fsm_state31 = 37'd1073741824;
parameter    ap_ST_fsm_state32 = 37'd2147483648;
parameter    ap_ST_fsm_state33 = 37'd4294967296;
parameter    ap_ST_fsm_state34 = 37'd8589934592;
parameter    ap_ST_fsm_state35 = 37'd17179869184;
parameter    ap_ST_fsm_state36 = 37'd34359738368;
parameter    ap_ST_fsm_state37 = 37'd68719476736;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [767:0] ctx_i;
output  [767:0] ctx_o;
output   ctx_o_ap_vld;
output  [2:0] k_0_address0;
output   k_0_ce0;
input  [15:0] k_0_q0;
output  [2:0] k_0_address1;
output   k_0_ce1;
input  [15:0] k_0_q1;
output  [2:0] k_1_address0;
output   k_1_ce0;
input  [15:0] k_1_q0;
output  [2:0] k_1_address1;
output   k_1_ce1;
input  [15:0] k_1_q1;
output  [1:0] buf_0_address0;
output   buf_0_ce0;
output   buf_0_we0;
output  [15:0] buf_0_d0;
input  [15:0] buf_0_q0;
output  [1:0] buf_0_address1;
output   buf_0_ce1;
output   buf_0_we1;
output  [15:0] buf_0_d1;
input  [15:0] buf_0_q1;
output  [1:0] buf_1_address0;
output   buf_1_ce0;
output   buf_1_we0;
output  [15:0] buf_1_d0;
input  [15:0] buf_1_q0;
output  [1:0] buf_1_address1;
output   buf_1_ce1;
output   buf_1_we1;
output  [15:0] buf_1_d1;
input  [15:0] buf_1_q1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[767:0] ctx_o;
reg ctx_o_ap_vld;
reg[1:0] buf_0_address0;
reg buf_0_ce0;
reg buf_0_we0;
reg[15:0] buf_0_d0;
reg[1:0] buf_0_address1;
reg buf_0_ce1;
reg buf_0_we1;
reg[15:0] buf_0_d1;
reg[1:0] buf_1_address0;
reg buf_1_ce0;
reg buf_1_we0;
reg[15:0] buf_1_d0;
reg[1:0] buf_1_address1;
reg buf_1_ce1;
reg buf_1_we1;
reg[15:0] buf_1_d1;

(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [767:0] ctx_read_reg_201;
wire    ap_CS_fsm_state34;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_start;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_done;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_idle;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_ready;
wire   [2:0] grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_address0;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_ce0;
wire   [2:0] grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_address1;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_ce1;
wire   [2:0] grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_address0;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_ce0;
wire   [2:0] grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_address1;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_ce1;
wire   [767:0] grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_p_out;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_p_out_ap_vld;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_start;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_done;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_idle;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_ready;
wire   [767:0] grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx_ap_vld;
wire   [767:0] grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx5_out;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx5_out_ap_vld;
wire   [767:0] grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_din1;
wire   [9:0] grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_din2;
wire   [7:0] grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_din3;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_start;
wire    grp_aes_addRoundKey_cpy_1_fu_102_ap_start;
wire    grp_aes_addRoundKey_cpy_1_fu_102_ap_done;
wire    grp_aes_addRoundKey_cpy_1_fu_102_ap_idle;
wire    grp_aes_addRoundKey_cpy_1_fu_102_ap_ready;
wire   [1:0] grp_aes_addRoundKey_cpy_1_fu_102_buf_0_address0;
wire    grp_aes_addRoundKey_cpy_1_fu_102_buf_0_ce0;
wire    grp_aes_addRoundKey_cpy_1_fu_102_buf_0_we0;
wire   [15:0] grp_aes_addRoundKey_cpy_1_fu_102_buf_0_d0;
wire   [1:0] grp_aes_addRoundKey_cpy_1_fu_102_buf_0_address1;
wire    grp_aes_addRoundKey_cpy_1_fu_102_buf_0_ce1;
wire   [1:0] grp_aes_addRoundKey_cpy_1_fu_102_buf_1_address0;
wire    grp_aes_addRoundKey_cpy_1_fu_102_buf_1_ce0;
wire    grp_aes_addRoundKey_cpy_1_fu_102_buf_1_we0;
wire   [15:0] grp_aes_addRoundKey_cpy_1_fu_102_buf_1_d0;
wire   [1:0] grp_aes_addRoundKey_cpy_1_fu_102_buf_1_address1;
wire    grp_aes_addRoundKey_cpy_1_fu_102_buf_1_ce1;
wire   [767:0] grp_aes_addRoundKey_cpy_1_fu_102_ap_return;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_start;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_done;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_idle;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_ready;
wire   [1:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_address0;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_ce0;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_we0;
wire   [15:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_d0;
wire   [1:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_address1;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_ce1;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_we1;
wire   [15:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_d1;
wire   [1:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_address0;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_ce0;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_we0;
wire   [15:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_d0;
wire   [1:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_address1;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_ce1;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_we1;
wire   [15:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_d1;
wire   [767:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ctx_o;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ctx_o_ap_vld;
wire   [7:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_rcon_1_out;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_rcon_1_out_ap_vld;
wire   [767:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_din1;
wire   [9:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_din2;
wire   [7:0] grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_din3;
wire    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_start;
wire    grp_aes_subBytes_1_fu_125_ap_start;
wire    grp_aes_subBytes_1_fu_125_ap_done;
wire    grp_aes_subBytes_1_fu_125_ap_idle;
wire    grp_aes_subBytes_1_fu_125_ap_ready;
wire   [1:0] grp_aes_subBytes_1_fu_125_buf_0_address0;
wire    grp_aes_subBytes_1_fu_125_buf_0_ce0;
wire    grp_aes_subBytes_1_fu_125_buf_0_we0;
wire   [15:0] grp_aes_subBytes_1_fu_125_buf_0_d0;
wire   [1:0] grp_aes_subBytes_1_fu_125_buf_0_address1;
wire    grp_aes_subBytes_1_fu_125_buf_0_ce1;
wire    grp_aes_subBytes_1_fu_125_buf_0_we1;
wire   [15:0] grp_aes_subBytes_1_fu_125_buf_0_d1;
wire   [1:0] grp_aes_subBytes_1_fu_125_buf_1_address0;
wire    grp_aes_subBytes_1_fu_125_buf_1_ce0;
wire    grp_aes_subBytes_1_fu_125_buf_1_we0;
wire   [15:0] grp_aes_subBytes_1_fu_125_buf_1_d0;
wire   [1:0] grp_aes_subBytes_1_fu_125_buf_1_address1;
wire    grp_aes_subBytes_1_fu_125_buf_1_ce1;
wire    grp_aes_subBytes_1_fu_125_buf_1_we1;
wire   [15:0] grp_aes_subBytes_1_fu_125_buf_1_d1;
reg    grp_aes_expandEncKey_fu_135_ap_start;
wire    grp_aes_expandEncKey_fu_135_ap_done;
wire    grp_aes_expandEncKey_fu_135_ap_idle;
wire    grp_aes_expandEncKey_fu_135_ap_ready;
reg   [767:0] grp_aes_expandEncKey_fu_135_ctx_read;
reg   [9:0] grp_aes_expandEncKey_fu_135_k_idx;
reg   [7:0] grp_aes_expandEncKey_fu_135_rc_read;
wire   [767:0] grp_aes_expandEncKey_fu_135_ap_return_0;
wire   [7:0] grp_aes_expandEncKey_fu_135_ap_return_1;
wire    grp_aes_shiftRows_1_fu_146_ap_start;
wire    grp_aes_shiftRows_1_fu_146_ap_done;
wire    grp_aes_shiftRows_1_fu_146_ap_idle;
wire    grp_aes_shiftRows_1_fu_146_ap_ready;
wire   [1:0] grp_aes_shiftRows_1_fu_146_buf_0_address0;
wire    grp_aes_shiftRows_1_fu_146_buf_0_ce0;
wire    grp_aes_shiftRows_1_fu_146_buf_0_we0;
wire   [15:0] grp_aes_shiftRows_1_fu_146_buf_0_d0;
wire   [1:0] grp_aes_shiftRows_1_fu_146_buf_0_address1;
wire    grp_aes_shiftRows_1_fu_146_buf_0_ce1;
wire    grp_aes_shiftRows_1_fu_146_buf_0_we1;
wire   [15:0] grp_aes_shiftRows_1_fu_146_buf_0_d1;
wire   [1:0] grp_aes_shiftRows_1_fu_146_buf_1_address0;
wire    grp_aes_shiftRows_1_fu_146_buf_1_ce0;
wire    grp_aes_shiftRows_1_fu_146_buf_1_we0;
wire   [15:0] grp_aes_shiftRows_1_fu_146_buf_1_d0;
wire   [1:0] grp_aes_shiftRows_1_fu_146_buf_1_address1;
wire    grp_aes_shiftRows_1_fu_146_buf_1_ce1;
wire    grp_aes_shiftRows_1_fu_146_buf_1_we1;
wire   [15:0] grp_aes_shiftRows_1_fu_146_buf_1_d1;
wire    grp_aes_addRoundKey_1_fu_154_ap_start;
wire    grp_aes_addRoundKey_1_fu_154_ap_done;
wire    grp_aes_addRoundKey_1_fu_154_ap_idle;
wire    grp_aes_addRoundKey_1_fu_154_ap_ready;
wire   [1:0] grp_aes_addRoundKey_1_fu_154_buf_0_address0;
wire    grp_aes_addRoundKey_1_fu_154_buf_0_ce0;
wire    grp_aes_addRoundKey_1_fu_154_buf_0_we0;
wire   [15:0] grp_aes_addRoundKey_1_fu_154_buf_0_d0;
wire   [1:0] grp_aes_addRoundKey_1_fu_154_buf_0_address1;
wire    grp_aes_addRoundKey_1_fu_154_buf_0_ce1;
wire    grp_aes_addRoundKey_1_fu_154_buf_0_we1;
wire   [15:0] grp_aes_addRoundKey_1_fu_154_buf_0_d1;
wire   [1:0] grp_aes_addRoundKey_1_fu_154_buf_1_address0;
wire    grp_aes_addRoundKey_1_fu_154_buf_1_ce0;
wire    grp_aes_addRoundKey_1_fu_154_buf_1_we0;
wire   [15:0] grp_aes_addRoundKey_1_fu_154_buf_1_d0;
wire   [1:0] grp_aes_addRoundKey_1_fu_154_buf_1_address1;
wire    grp_aes_addRoundKey_1_fu_154_buf_1_ce1;
wire    grp_aes_addRoundKey_1_fu_154_buf_1_we1;
wire   [15:0] grp_aes_addRoundKey_1_fu_154_buf_1_d1;
reg    grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_start_reg;
wire    ap_CS_fsm_state2;
reg    grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_start_reg;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state5;
reg    grp_aes_addRoundKey_cpy_1_fu_102_ap_start_reg;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_start_reg;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state9;
reg    grp_aes_subBytes_1_fu_125_ap_start_reg;
reg   [36:0] ap_NS_fsm;
wire    ap_NS_fsm_state10;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state15;
reg    grp_aes_expandEncKey_fu_135_ap_start_reg;
reg    grp_aes_shiftRows_1_fu_146_ap_start_reg;
wire    ap_NS_fsm_state20;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state21;
wire    ap_CS_fsm_state22;
reg    grp_aes_addRoundKey_1_fu_154_ap_start_reg;
wire    ap_CS_fsm_state33;
wire    ap_NS_fsm_state34;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state3;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
reg    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
reg    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
#0 grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_start_reg = 1'b0;
#0 grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_start_reg = 1'b0;
#0 grp_aes_addRoundKey_cpy_1_fu_102_ap_start_reg = 1'b0;
#0 grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_start_reg = 1'b0;
#0 grp_aes_subBytes_1_fu_125_ap_start_reg = 1'b0;
#0 grp_aes_expandEncKey_fu_135_ap_start_reg = 1'b0;
#0 grp_aes_shiftRows_1_fu_146_ap_start_reg = 1'b0;
#0 grp_aes_addRoundKey_1_fu_154_ap_start_reg = 1'b0;
end

aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_ecb1 grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_start),
    .ap_done(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_done),
    .ap_idle(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_idle),
    .ap_ready(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_ready),
    .ctx_load(ctx_read_reg_201),
    .k_0_address0(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_address0),
    .k_0_ce0(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_ce0),
    .k_0_q0(k_0_q0),
    .k_0_address1(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_address1),
    .k_0_ce1(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_ce1),
    .k_0_q1(k_0_q1),
    .k_1_address0(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_address0),
    .k_1_ce0(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_ce0),
    .k_1_q0(k_1_q0),
    .k_1_address1(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_address1),
    .k_1_ce1(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_ce1),
    .k_1_q1(k_1_q1),
    .p_out(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_p_out),
    .p_out_ap_vld(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_p_out_ap_vld)
);

aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_ecb2 grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_start),
    .ap_done(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_done),
    .ap_idle(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_idle),
    .ap_ready(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_ready),
    .p_reload(grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_p_out),
    .ctx(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx),
    .ctx_ap_vld(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx_ap_vld),
    .ctx5_out(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx5_out),
    .ctx5_out_ap_vld(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx5_out_ap_vld),
    .grp_aes_expandEncKey_fu_135_p_din1(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_din1),
    .grp_aes_expandEncKey_fu_135_p_din2(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_din2),
    .grp_aes_expandEncKey_fu_135_p_din3(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_din3),
    .grp_aes_expandEncKey_fu_135_p_dout0_0(grp_aes_expandEncKey_fu_135_ap_return_0),
    .grp_aes_expandEncKey_fu_135_p_dout0_1(grp_aes_expandEncKey_fu_135_ap_return_1),
    .grp_aes_expandEncKey_fu_135_p_start(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_start),
    .grp_aes_expandEncKey_fu_135_p_ready(grp_aes_expandEncKey_fu_135_ap_ready),
    .grp_aes_expandEncKey_fu_135_p_done(grp_aes_expandEncKey_fu_135_ap_done),
    .grp_aes_expandEncKey_fu_135_p_idle(grp_aes_expandEncKey_fu_135_ap_idle)
);

aes256_encrypt_ecb_aes_addRoundKey_cpy_1 grp_aes_addRoundKey_cpy_1_fu_102(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_addRoundKey_cpy_1_fu_102_ap_start),
    .ap_done(grp_aes_addRoundKey_cpy_1_fu_102_ap_done),
    .ap_idle(grp_aes_addRoundKey_cpy_1_fu_102_ap_idle),
    .ap_ready(grp_aes_addRoundKey_cpy_1_fu_102_ap_ready),
    .buf_0_address0(grp_aes_addRoundKey_cpy_1_fu_102_buf_0_address0),
    .buf_0_ce0(grp_aes_addRoundKey_cpy_1_fu_102_buf_0_ce0),
    .buf_0_we0(grp_aes_addRoundKey_cpy_1_fu_102_buf_0_we0),
    .buf_0_d0(grp_aes_addRoundKey_cpy_1_fu_102_buf_0_d0),
    .buf_0_address1(grp_aes_addRoundKey_cpy_1_fu_102_buf_0_address1),
    .buf_0_ce1(grp_aes_addRoundKey_cpy_1_fu_102_buf_0_ce1),
    .buf_0_q1(buf_0_q1),
    .buf_1_address0(grp_aes_addRoundKey_cpy_1_fu_102_buf_1_address0),
    .buf_1_ce0(grp_aes_addRoundKey_cpy_1_fu_102_buf_1_ce0),
    .buf_1_we0(grp_aes_addRoundKey_cpy_1_fu_102_buf_1_we0),
    .buf_1_d0(grp_aes_addRoundKey_cpy_1_fu_102_buf_1_d0),
    .buf_1_address1(grp_aes_addRoundKey_cpy_1_fu_102_buf_1_address1),
    .buf_1_ce1(grp_aes_addRoundKey_cpy_1_fu_102_buf_1_ce1),
    .buf_1_q1(buf_1_q1),
    .ctx_read(grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx5_out),
    .ap_return(grp_aes_addRoundKey_cpy_1_fu_102_ap_return)
);

aes256_encrypt_ecb_aes256_encrypt_ecb_Pipeline_ecb3 grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_start),
    .ap_done(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_done),
    .ap_idle(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_idle),
    .ap_ready(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_ready),
    .buf_0_address0(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_address0),
    .buf_0_ce0(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_ce0),
    .buf_0_we0(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_we0),
    .buf_0_d0(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_d0),
    .buf_0_q0(buf_0_q0),
    .buf_0_address1(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_address1),
    .buf_0_ce1(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_ce1),
    .buf_0_we1(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_we1),
    .buf_0_d1(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_d1),
    .buf_0_q1(buf_0_q1),
    .buf_1_address0(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_address0),
    .buf_1_ce0(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_ce0),
    .buf_1_we0(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_we0),
    .buf_1_d0(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_d0),
    .buf_1_q0(buf_1_q0),
    .buf_1_address1(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_address1),
    .buf_1_ce1(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_ce1),
    .buf_1_we1(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_we1),
    .buf_1_d1(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_d1),
    .buf_1_q1(buf_1_q1),
    .ctx_i(ctx_i),
    .ctx_o(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ctx_o),
    .ctx_o_ap_vld(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ctx_o_ap_vld),
    .rcon_1_out(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_rcon_1_out),
    .rcon_1_out_ap_vld(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_rcon_1_out_ap_vld),
    .grp_aes_expandEncKey_fu_135_p_din1(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_din1),
    .grp_aes_expandEncKey_fu_135_p_din2(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_din2),
    .grp_aes_expandEncKey_fu_135_p_din3(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_din3),
    .grp_aes_expandEncKey_fu_135_p_dout0_0(grp_aes_expandEncKey_fu_135_ap_return_0),
    .grp_aes_expandEncKey_fu_135_p_dout0_1(grp_aes_expandEncKey_fu_135_ap_return_1),
    .grp_aes_expandEncKey_fu_135_p_start(grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_start),
    .grp_aes_expandEncKey_fu_135_p_ready(grp_aes_expandEncKey_fu_135_ap_ready),
    .grp_aes_expandEncKey_fu_135_p_done(grp_aes_expandEncKey_fu_135_ap_done),
    .grp_aes_expandEncKey_fu_135_p_idle(grp_aes_expandEncKey_fu_135_ap_idle)
);

aes256_encrypt_ecb_aes_subBytes_1 grp_aes_subBytes_1_fu_125(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_subBytes_1_fu_125_ap_start),
    .ap_done(grp_aes_subBytes_1_fu_125_ap_done),
    .ap_idle(grp_aes_subBytes_1_fu_125_ap_idle),
    .ap_ready(grp_aes_subBytes_1_fu_125_ap_ready),
    .buf_0_address0(grp_aes_subBytes_1_fu_125_buf_0_address0),
    .buf_0_ce0(grp_aes_subBytes_1_fu_125_buf_0_ce0),
    .buf_0_we0(grp_aes_subBytes_1_fu_125_buf_0_we0),
    .buf_0_d0(grp_aes_subBytes_1_fu_125_buf_0_d0),
    .buf_0_q0(buf_0_q0),
    .buf_0_address1(grp_aes_subBytes_1_fu_125_buf_0_address1),
    .buf_0_ce1(grp_aes_subBytes_1_fu_125_buf_0_ce1),
    .buf_0_we1(grp_aes_subBytes_1_fu_125_buf_0_we1),
    .buf_0_d1(grp_aes_subBytes_1_fu_125_buf_0_d1),
    .buf_0_q1(buf_0_q1),
    .buf_1_address0(grp_aes_subBytes_1_fu_125_buf_1_address0),
    .buf_1_ce0(grp_aes_subBytes_1_fu_125_buf_1_ce0),
    .buf_1_we0(grp_aes_subBytes_1_fu_125_buf_1_we0),
    .buf_1_d0(grp_aes_subBytes_1_fu_125_buf_1_d0),
    .buf_1_q0(buf_1_q0),
    .buf_1_address1(grp_aes_subBytes_1_fu_125_buf_1_address1),
    .buf_1_ce1(grp_aes_subBytes_1_fu_125_buf_1_ce1),
    .buf_1_we1(grp_aes_subBytes_1_fu_125_buf_1_we1),
    .buf_1_d1(grp_aes_subBytes_1_fu_125_buf_1_d1),
    .buf_1_q1(buf_1_q1)
);

aes256_encrypt_ecb_aes_expandEncKey grp_aes_expandEncKey_fu_135(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_expandEncKey_fu_135_ap_start),
    .ap_done(grp_aes_expandEncKey_fu_135_ap_done),
    .ap_idle(grp_aes_expandEncKey_fu_135_ap_idle),
    .ap_ready(grp_aes_expandEncKey_fu_135_ap_ready),
    .ctx_read(grp_aes_expandEncKey_fu_135_ctx_read),
    .k_idx(grp_aes_expandEncKey_fu_135_k_idx),
    .rc_read(grp_aes_expandEncKey_fu_135_rc_read),
    .ap_return_0(grp_aes_expandEncKey_fu_135_ap_return_0),
    .ap_return_1(grp_aes_expandEncKey_fu_135_ap_return_1)
);

aes256_encrypt_ecb_aes_shiftRows_1 grp_aes_shiftRows_1_fu_146(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_shiftRows_1_fu_146_ap_start),
    .ap_done(grp_aes_shiftRows_1_fu_146_ap_done),
    .ap_idle(grp_aes_shiftRows_1_fu_146_ap_idle),
    .ap_ready(grp_aes_shiftRows_1_fu_146_ap_ready),
    .buf_0_address0(grp_aes_shiftRows_1_fu_146_buf_0_address0),
    .buf_0_ce0(grp_aes_shiftRows_1_fu_146_buf_0_ce0),
    .buf_0_we0(grp_aes_shiftRows_1_fu_146_buf_0_we0),
    .buf_0_d0(grp_aes_shiftRows_1_fu_146_buf_0_d0),
    .buf_0_q0(buf_0_q0),
    .buf_0_address1(grp_aes_shiftRows_1_fu_146_buf_0_address1),
    .buf_0_ce1(grp_aes_shiftRows_1_fu_146_buf_0_ce1),
    .buf_0_we1(grp_aes_shiftRows_1_fu_146_buf_0_we1),
    .buf_0_d1(grp_aes_shiftRows_1_fu_146_buf_0_d1),
    .buf_0_q1(buf_0_q1),
    .buf_1_address0(grp_aes_shiftRows_1_fu_146_buf_1_address0),
    .buf_1_ce0(grp_aes_shiftRows_1_fu_146_buf_1_ce0),
    .buf_1_we0(grp_aes_shiftRows_1_fu_146_buf_1_we0),
    .buf_1_d0(grp_aes_shiftRows_1_fu_146_buf_1_d0),
    .buf_1_q0(buf_1_q0),
    .buf_1_address1(grp_aes_shiftRows_1_fu_146_buf_1_address1),
    .buf_1_ce1(grp_aes_shiftRows_1_fu_146_buf_1_ce1),
    .buf_1_we1(grp_aes_shiftRows_1_fu_146_buf_1_we1),
    .buf_1_d1(grp_aes_shiftRows_1_fu_146_buf_1_d1),
    .buf_1_q1(buf_1_q1)
);

aes256_encrypt_ecb_aes_addRoundKey_1 grp_aes_addRoundKey_1_fu_154(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_aes_addRoundKey_1_fu_154_ap_start),
    .ap_done(grp_aes_addRoundKey_1_fu_154_ap_done),
    .ap_idle(grp_aes_addRoundKey_1_fu_154_ap_idle),
    .ap_ready(grp_aes_addRoundKey_1_fu_154_ap_ready),
    .buf_0_address0(grp_aes_addRoundKey_1_fu_154_buf_0_address0),
    .buf_0_ce0(grp_aes_addRoundKey_1_fu_154_buf_0_ce0),
    .buf_0_we0(grp_aes_addRoundKey_1_fu_154_buf_0_we0),
    .buf_0_d0(grp_aes_addRoundKey_1_fu_154_buf_0_d0),
    .buf_0_q0(buf_0_q0),
    .buf_0_address1(grp_aes_addRoundKey_1_fu_154_buf_0_address1),
    .buf_0_ce1(grp_aes_addRoundKey_1_fu_154_buf_0_ce1),
    .buf_0_we1(grp_aes_addRoundKey_1_fu_154_buf_0_we1),
    .buf_0_d1(grp_aes_addRoundKey_1_fu_154_buf_0_d1),
    .buf_0_q1(buf_0_q1),
    .buf_1_address0(grp_aes_addRoundKey_1_fu_154_buf_1_address0),
    .buf_1_ce0(grp_aes_addRoundKey_1_fu_154_buf_1_ce0),
    .buf_1_we0(grp_aes_addRoundKey_1_fu_154_buf_1_we0),
    .buf_1_d0(grp_aes_addRoundKey_1_fu_154_buf_1_d0),
    .buf_1_q0(buf_1_q0),
    .buf_1_address1(grp_aes_addRoundKey_1_fu_154_buf_1_address1),
    .buf_1_ce1(grp_aes_addRoundKey_1_fu_154_buf_1_ce1),
    .buf_1_we1(grp_aes_addRoundKey_1_fu_154_buf_1_we1),
    .buf_1_d1(grp_aes_addRoundKey_1_fu_154_buf_1_d1),
    .buf_1_q1(buf_1_q1),
    .p_read(grp_aes_expandEncKey_fu_135_ap_return_0),
    .key_idx(8'd0),
    .ap_ce(1'b1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_start_reg <= 1'b0;
    end else begin
        if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_start_reg <= 1'b1;
        end else if ((grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_ready == 1'b1)) begin
            grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_start_reg <= 1'b1;
        end else if ((grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_ready == 1'b1)) begin
            grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_start_reg <= 1'b1;
        end else if ((grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_ready == 1'b1)) begin
            grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_addRoundKey_1_fu_154_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state34) & (1'b1 == ap_CS_fsm_state33))) begin
            grp_aes_addRoundKey_1_fu_154_ap_start_reg <= 1'b1;
        end else if ((grp_aes_addRoundKey_1_fu_154_ap_ready == 1'b1)) begin
            grp_aes_addRoundKey_1_fu_154_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_addRoundKey_cpy_1_fu_102_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_aes_addRoundKey_cpy_1_fu_102_ap_start_reg <= 1'b1;
        end else if ((grp_aes_addRoundKey_cpy_1_fu_102_ap_ready == 1'b1)) begin
            grp_aes_addRoundKey_cpy_1_fu_102_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_expandEncKey_fu_135_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state10) & (1'b1 == ap_CS_fsm_state9))) begin
            grp_aes_expandEncKey_fu_135_ap_start_reg <= 1'b1;
        end else if ((grp_aes_expandEncKey_fu_135_ap_ready == 1'b1)) begin
            grp_aes_expandEncKey_fu_135_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_shiftRows_1_fu_146_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state20) & (1'b1 == ap_CS_fsm_state19))) begin
            grp_aes_shiftRows_1_fu_146_ap_start_reg <= 1'b1;
        end else if ((grp_aes_shiftRows_1_fu_146_ap_ready == 1'b1)) begin
            grp_aes_shiftRows_1_fu_146_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_aes_subBytes_1_fu_125_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_NS_fsm_state10) & (1'b1 == ap_CS_fsm_state9))) begin
            grp_aes_subBytes_1_fu_125_ap_start_reg <= 1'b1;
        end else if ((grp_aes_subBytes_1_fu_125_ap_ready == 1'b1)) begin
            grp_aes_subBytes_1_fu_125_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        ctx_read_reg_201 <= ctx_i;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_done == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_done == 1'b0)) begin
        ap_ST_fsm_state5_blk = 1'b1;
    end else begin
        ap_ST_fsm_state5_blk = 1'b0;
    end
end

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if ((grp_aes_addRoundKey_cpy_1_fu_102_ap_done == 1'b0)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

always @ (*) begin
    if ((grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_done == 1'b0)) begin
        ap_ST_fsm_state9_blk = 1'b1;
    end else begin
        ap_ST_fsm_state9_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_0_address0 = grp_aes_addRoundKey_1_fu_154_buf_0_address0;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_0_address0 = grp_aes_shiftRows_1_fu_146_buf_0_address0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_0_address0 = grp_aes_subBytes_1_fu_125_buf_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_0_address0 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_0_address0 = grp_aes_addRoundKey_cpy_1_fu_102_buf_0_address0;
    end else begin
        buf_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_0_address1 = grp_aes_addRoundKey_1_fu_154_buf_0_address1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_0_address1 = grp_aes_shiftRows_1_fu_146_buf_0_address1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_0_address1 = grp_aes_subBytes_1_fu_125_buf_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_0_address1 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_0_address1 = grp_aes_addRoundKey_cpy_1_fu_102_buf_0_address1;
    end else begin
        buf_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_0_ce0 = grp_aes_addRoundKey_1_fu_154_buf_0_ce0;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_0_ce0 = grp_aes_shiftRows_1_fu_146_buf_0_ce0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_0_ce0 = grp_aes_subBytes_1_fu_125_buf_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_0_ce0 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_0_ce0 = grp_aes_addRoundKey_cpy_1_fu_102_buf_0_ce0;
    end else begin
        buf_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_0_ce1 = grp_aes_addRoundKey_1_fu_154_buf_0_ce1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_0_ce1 = grp_aes_shiftRows_1_fu_146_buf_0_ce1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_0_ce1 = grp_aes_subBytes_1_fu_125_buf_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_0_ce1 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_0_ce1 = grp_aes_addRoundKey_cpy_1_fu_102_buf_0_ce1;
    end else begin
        buf_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_0_d0 = grp_aes_addRoundKey_1_fu_154_buf_0_d0;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_0_d0 = grp_aes_shiftRows_1_fu_146_buf_0_d0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_0_d0 = grp_aes_subBytes_1_fu_125_buf_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_0_d0 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_0_d0 = grp_aes_addRoundKey_cpy_1_fu_102_buf_0_d0;
    end else begin
        buf_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_0_d1 = grp_aes_addRoundKey_1_fu_154_buf_0_d1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_0_d1 = grp_aes_shiftRows_1_fu_146_buf_0_d1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_0_d1 = grp_aes_subBytes_1_fu_125_buf_0_d1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_0_d1 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_d1;
    end else begin
        buf_0_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_0_we0 = grp_aes_addRoundKey_1_fu_154_buf_0_we0;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_0_we0 = grp_aes_shiftRows_1_fu_146_buf_0_we0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_0_we0 = grp_aes_subBytes_1_fu_125_buf_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_0_we0 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_0_we0 = grp_aes_addRoundKey_cpy_1_fu_102_buf_0_we0;
    end else begin
        buf_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_0_we1 = grp_aes_addRoundKey_1_fu_154_buf_0_we1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_0_we1 = grp_aes_shiftRows_1_fu_146_buf_0_we1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_0_we1 = grp_aes_subBytes_1_fu_125_buf_0_we1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_0_we1 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_0_we1;
    end else begin
        buf_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_1_address0 = grp_aes_addRoundKey_1_fu_154_buf_1_address0;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_1_address0 = grp_aes_shiftRows_1_fu_146_buf_1_address0;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_1_address0 = grp_aes_subBytes_1_fu_125_buf_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_1_address0 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_1_address0 = grp_aes_addRoundKey_cpy_1_fu_102_buf_1_address0;
    end else begin
        buf_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_1_address1 = grp_aes_addRoundKey_1_fu_154_buf_1_address1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_1_address1 = grp_aes_shiftRows_1_fu_146_buf_1_address1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_1_address1 = grp_aes_subBytes_1_fu_125_buf_1_address1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_1_address1 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_address1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_1_address1 = grp_aes_addRoundKey_cpy_1_fu_102_buf_1_address1;
    end else begin
        buf_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_1_ce0 = grp_aes_addRoundKey_1_fu_154_buf_1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_1_ce0 = grp_aes_shiftRows_1_fu_146_buf_1_ce0;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_1_ce0 = grp_aes_subBytes_1_fu_125_buf_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_1_ce0 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_1_ce0 = grp_aes_addRoundKey_cpy_1_fu_102_buf_1_ce0;
    end else begin
        buf_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_1_ce1 = grp_aes_addRoundKey_1_fu_154_buf_1_ce1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_1_ce1 = grp_aes_shiftRows_1_fu_146_buf_1_ce1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_1_ce1 = grp_aes_subBytes_1_fu_125_buf_1_ce1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_1_ce1 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_ce1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_1_ce1 = grp_aes_addRoundKey_cpy_1_fu_102_buf_1_ce1;
    end else begin
        buf_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_1_d0 = grp_aes_addRoundKey_1_fu_154_buf_1_d0;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_1_d0 = grp_aes_shiftRows_1_fu_146_buf_1_d0;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_1_d0 = grp_aes_subBytes_1_fu_125_buf_1_d0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_1_d0 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_d0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_1_d0 = grp_aes_addRoundKey_cpy_1_fu_102_buf_1_d0;
    end else begin
        buf_1_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_1_d1 = grp_aes_addRoundKey_1_fu_154_buf_1_d1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_1_d1 = grp_aes_shiftRows_1_fu_146_buf_1_d1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_1_d1 = grp_aes_subBytes_1_fu_125_buf_1_d1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_1_d1 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_d1;
    end else begin
        buf_1_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_1_we0 = grp_aes_addRoundKey_1_fu_154_buf_1_we0;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_1_we0 = grp_aes_shiftRows_1_fu_146_buf_1_we0;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_1_we0 = grp_aes_subBytes_1_fu_125_buf_1_we0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_1_we0 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_we0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        buf_1_we0 = grp_aes_addRoundKey_cpy_1_fu_102_buf_1_we0;
    end else begin
        buf_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34))) begin
        buf_1_we1 = grp_aes_addRoundKey_1_fu_154_buf_1_we1;
    end else if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20))) begin
        buf_1_we1 = grp_aes_shiftRows_1_fu_146_buf_1_we1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10))) begin
        buf_1_we1 = grp_aes_subBytes_1_fu_125_buf_1_we1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        buf_1_we1 = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_buf_1_we1;
    end else begin
        buf_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        ctx_o = grp_aes_expandEncKey_fu_135_ap_return_0;
    end else if (((1'b1 == ap_CS_fsm_state7) & (grp_aes_addRoundKey_cpy_1_fu_102_ap_done == 1'b1))) begin
        ctx_o = grp_aes_addRoundKey_cpy_1_fu_102_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        ctx_o = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_p_out;
    end else if (((grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ctx_o_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state9))) begin
        ctx_o = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ctx_o;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx_ap_vld == 1'b1))) begin
        ctx_o = grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx;
    end else begin
        ctx_o = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state34) | ((1'b1 == ap_CS_fsm_state7) & (grp_aes_addRoundKey_cpy_1_fu_102_ap_done == 1'b1)))) begin
        ctx_o_ap_vld = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        ctx_o_ap_vld = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ctx_o_ap_vld;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        ctx_o_ap_vld = grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ctx_ap_vld;
    end else begin
        ctx_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_aes_expandEncKey_fu_135_ap_start = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_start;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_aes_expandEncKey_fu_135_ap_start = grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_start;
    end else begin
        grp_aes_expandEncKey_fu_135_ap_start = grp_aes_expandEncKey_fu_135_ap_start_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_aes_expandEncKey_fu_135_ctx_read = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_aes_expandEncKey_fu_135_ctx_read = grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_aes_expandEncKey_fu_135_ctx_read = ctx_i;
    end else begin
        grp_aes_expandEncKey_fu_135_ctx_read = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_aes_expandEncKey_fu_135_k_idx = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_aes_expandEncKey_fu_135_k_idx = grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_din2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_aes_expandEncKey_fu_135_k_idx = 10'd0;
    end else begin
        grp_aes_expandEncKey_fu_135_k_idx = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_aes_expandEncKey_fu_135_rc_read = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_grp_aes_expandEncKey_fu_135_p_din3;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_aes_expandEncKey_fu_135_rc_read = grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_grp_aes_expandEncKey_fu_135_p_din3;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_aes_expandEncKey_fu_135_rc_read = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_rcon_1_out;
    end else begin
        grp_aes_expandEncKey_fu_135_rc_read = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (grp_aes_addRoundKey_cpy_1_fu_102_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_NS_fsm_state10 = ap_NS_fsm[32'd9];

assign ap_NS_fsm_state20 = ap_NS_fsm[32'd19];

assign ap_NS_fsm_state34 = ap_NS_fsm[32'd33];

assign grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_start = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_ap_start_reg;

assign grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_start = grp_aes256_encrypt_ecb_Pipeline_ecb2_fu_92_ap_start_reg;

assign grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_start = grp_aes256_encrypt_ecb_Pipeline_ecb3_fu_112_ap_start_reg;

assign grp_aes_addRoundKey_1_fu_154_ap_start = grp_aes_addRoundKey_1_fu_154_ap_start_reg;

assign grp_aes_addRoundKey_cpy_1_fu_102_ap_start = grp_aes_addRoundKey_cpy_1_fu_102_ap_start_reg;

assign grp_aes_shiftRows_1_fu_146_ap_start = grp_aes_shiftRows_1_fu_146_ap_start_reg;

assign grp_aes_subBytes_1_fu_125_ap_start = grp_aes_subBytes_1_fu_125_ap_start_reg;

assign k_0_address0 = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_address0;

assign k_0_address1 = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_address1;

assign k_0_ce0 = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_ce0;

assign k_0_ce1 = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_0_ce1;

assign k_1_address0 = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_address0;

assign k_1_address1 = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_address1;

assign k_1_ce0 = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_ce0;

assign k_1_ce1 = grp_aes256_encrypt_ecb_Pipeline_ecb1_fu_81_k_1_ce1;

endmodule //aes256_encrypt_ecb
