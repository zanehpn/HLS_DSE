#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("ctx_i", 768, hls_in, 0, "ap_ovld", "in_data", 1),
	Port_Property("ctx_o", 768, hls_out, 0, "ap_ovld", "out_data", 1),
	Port_Property("ctx_o_ap_vld", 1, hls_out, 0, "ap_ovld", "out_vld", 1),
	Port_Property("k_0_address0", 3, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("k_0_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("k_0_q0", 16, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("k_0_address1", 3, hls_out, 1, "ap_memory", "MemPortADDR2", 1),
	Port_Property("k_0_ce1", 1, hls_out, 1, "ap_memory", "MemPortCE2", 1),
	Port_Property("k_0_q1", 16, hls_in, 1, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("k_1_address0", 3, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("k_1_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("k_1_q0", 16, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("k_1_address1", 3, hls_out, 2, "ap_memory", "MemPortADDR2", 1),
	Port_Property("k_1_ce1", 1, hls_out, 2, "ap_memory", "MemPortCE2", 1),
	Port_Property("k_1_q1", 16, hls_in, 2, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("buf_0_address0", 2, hls_out, 3, "ap_memory", "mem_address", 1),
	Port_Property("buf_0_ce0", 1, hls_out, 3, "ap_memory", "mem_ce", 1),
	Port_Property("buf_0_we0", 1, hls_out, 3, "ap_memory", "mem_we", 1),
	Port_Property("buf_0_d0", 16, hls_out, 3, "ap_memory", "mem_din", 1),
	Port_Property("buf_0_q0", 16, hls_in, 3, "ap_memory", "mem_dout", 1),
	Port_Property("buf_0_address1", 2, hls_out, 3, "ap_memory", "MemPortADDR2", 1),
	Port_Property("buf_0_ce1", 1, hls_out, 3, "ap_memory", "MemPortCE2", 1),
	Port_Property("buf_0_we1", 1, hls_out, 3, "ap_memory", "MemPortWE2", 1),
	Port_Property("buf_0_d1", 16, hls_out, 3, "ap_memory", "MemPortDIN2", 1),
	Port_Property("buf_0_q1", 16, hls_in, 3, "ap_memory", "MemPortDOUT2", 1),
	Port_Property("buf_1_address0", 2, hls_out, 4, "ap_memory", "mem_address", 1),
	Port_Property("buf_1_ce0", 1, hls_out, 4, "ap_memory", "mem_ce", 1),
	Port_Property("buf_1_we0", 1, hls_out, 4, "ap_memory", "mem_we", 1),
	Port_Property("buf_1_d0", 16, hls_out, 4, "ap_memory", "mem_din", 1),
	Port_Property("buf_1_q0", 16, hls_in, 4, "ap_memory", "mem_dout", 1),
	Port_Property("buf_1_address1", 2, hls_out, 4, "ap_memory", "MemPortADDR2", 1),
	Port_Property("buf_1_ce1", 1, hls_out, 4, "ap_memory", "MemPortCE2", 1),
	Port_Property("buf_1_we1", 1, hls_out, 4, "ap_memory", "MemPortWE2", 1),
	Port_Property("buf_1_d1", 16, hls_out, 4, "ap_memory", "MemPortDIN2", 1),
	Port_Property("buf_1_q1", 16, hls_in, 4, "ap_memory", "MemPortDOUT2", 1),
};
const char* HLS_Design_Meta::dut_name = "aes256_encrypt_ecb";
