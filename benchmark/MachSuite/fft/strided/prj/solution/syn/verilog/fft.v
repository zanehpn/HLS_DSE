// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="fft_fft,hls_ip_2022_1,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx485t-ffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.148000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=6318,HLS_SYN_LUT=43805,HLS_VERSION=2022_1}" *)

module fft (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        real_0_address0,
        real_0_ce0,
        real_0_we0,
        real_0_d0,
        real_0_q0,
        real_0_address1,
        real_0_ce1,
        real_0_we1,
        real_0_d1,
        real_0_q1,
        real_1_address0,
        real_1_ce0,
        real_1_we0,
        real_1_d0,
        real_1_q0,
        real_1_address1,
        real_1_ce1,
        real_1_we1,
        real_1_d1,
        real_1_q1,
        img_0_address0,
        img_0_ce0,
        img_0_we0,
        img_0_d0,
        img_0_q0,
        img_0_address1,
        img_0_ce1,
        img_0_we1,
        img_0_d1,
        img_0_q1,
        img_1_address0,
        img_1_ce0,
        img_1_we0,
        img_1_d0,
        img_1_q0,
        img_1_address1,
        img_1_ce1,
        img_1_we1,
        img_1_d1,
        img_1_q1,
        real_twid_0_address0,
        real_twid_0_ce0,
        real_twid_0_q0,
        real_twid_1_address0,
        real_twid_1_ce0,
        real_twid_1_q0,
        img_twid_0_address0,
        img_twid_0_ce0,
        img_twid_0_q0,
        img_twid_1_address0,
        img_twid_1_ce0,
        img_twid_1_q0
);

parameter    ap_ST_fsm_state1 = 70'd1;
parameter    ap_ST_fsm_state2 = 70'd2;
parameter    ap_ST_fsm_state3 = 70'd4;
parameter    ap_ST_fsm_state4 = 70'd8;
parameter    ap_ST_fsm_state5 = 70'd16;
parameter    ap_ST_fsm_state6 = 70'd32;
parameter    ap_ST_fsm_state7 = 70'd64;
parameter    ap_ST_fsm_state8 = 70'd128;
parameter    ap_ST_fsm_state9 = 70'd256;
parameter    ap_ST_fsm_state10 = 70'd512;
parameter    ap_ST_fsm_state11 = 70'd1024;
parameter    ap_ST_fsm_state12 = 70'd2048;
parameter    ap_ST_fsm_state13 = 70'd4096;
parameter    ap_ST_fsm_state14 = 70'd8192;
parameter    ap_ST_fsm_state15 = 70'd16384;
parameter    ap_ST_fsm_state16 = 70'd32768;
parameter    ap_ST_fsm_state17 = 70'd65536;
parameter    ap_ST_fsm_state18 = 70'd131072;
parameter    ap_ST_fsm_state19 = 70'd262144;
parameter    ap_ST_fsm_state20 = 70'd524288;
parameter    ap_ST_fsm_state21 = 70'd1048576;
parameter    ap_ST_fsm_state22 = 70'd2097152;
parameter    ap_ST_fsm_state23 = 70'd4194304;
parameter    ap_ST_fsm_state24 = 70'd8388608;
parameter    ap_ST_fsm_state25 = 70'd16777216;
parameter    ap_ST_fsm_state26 = 70'd33554432;
parameter    ap_ST_fsm_state27 = 70'd67108864;
parameter    ap_ST_fsm_state28 = 70'd134217728;
parameter    ap_ST_fsm_state29 = 70'd268435456;
parameter    ap_ST_fsm_state30 = 70'd536870912;
parameter    ap_ST_fsm_state31 = 70'd1073741824;
parameter    ap_ST_fsm_state32 = 70'd2147483648;
parameter    ap_ST_fsm_state33 = 70'd4294967296;
parameter    ap_ST_fsm_state34 = 70'd8589934592;
parameter    ap_ST_fsm_state35 = 70'd17179869184;
parameter    ap_ST_fsm_state36 = 70'd34359738368;
parameter    ap_ST_fsm_state37 = 70'd68719476736;
parameter    ap_ST_fsm_state38 = 70'd137438953472;
parameter    ap_ST_fsm_state39 = 70'd274877906944;
parameter    ap_ST_fsm_state40 = 70'd549755813888;
parameter    ap_ST_fsm_state41 = 70'd1099511627776;
parameter    ap_ST_fsm_state42 = 70'd2199023255552;
parameter    ap_ST_fsm_state43 = 70'd4398046511104;
parameter    ap_ST_fsm_state44 = 70'd8796093022208;
parameter    ap_ST_fsm_state45 = 70'd17592186044416;
parameter    ap_ST_fsm_state46 = 70'd35184372088832;
parameter    ap_ST_fsm_state47 = 70'd70368744177664;
parameter    ap_ST_fsm_state48 = 70'd140737488355328;
parameter    ap_ST_fsm_state49 = 70'd281474976710656;
parameter    ap_ST_fsm_state50 = 70'd562949953421312;
parameter    ap_ST_fsm_state51 = 70'd1125899906842624;
parameter    ap_ST_fsm_state52 = 70'd2251799813685248;
parameter    ap_ST_fsm_state53 = 70'd4503599627370496;
parameter    ap_ST_fsm_state54 = 70'd9007199254740992;
parameter    ap_ST_fsm_state55 = 70'd18014398509481984;
parameter    ap_ST_fsm_state56 = 70'd36028797018963968;
parameter    ap_ST_fsm_state57 = 70'd72057594037927936;
parameter    ap_ST_fsm_state58 = 70'd144115188075855872;
parameter    ap_ST_fsm_state59 = 70'd288230376151711744;
parameter    ap_ST_fsm_state60 = 70'd576460752303423488;
parameter    ap_ST_fsm_state61 = 70'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 70'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 70'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 70'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 70'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 70'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 70'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 70'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 70'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 70'd590295810358705651712;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] real_0_address0;
output   real_0_ce0;
output   real_0_we0;
output  [127:0] real_0_d0;
input  [127:0] real_0_q0;
output  [7:0] real_0_address1;
output   real_0_ce1;
output   real_0_we1;
output  [127:0] real_0_d1;
input  [127:0] real_0_q1;
output  [7:0] real_1_address0;
output   real_1_ce0;
output   real_1_we0;
output  [127:0] real_1_d0;
input  [127:0] real_1_q0;
output  [7:0] real_1_address1;
output   real_1_ce1;
output   real_1_we1;
output  [127:0] real_1_d1;
input  [127:0] real_1_q1;
output  [7:0] img_0_address0;
output   img_0_ce0;
output   img_0_we0;
output  [127:0] img_0_d0;
input  [127:0] img_0_q0;
output  [7:0] img_0_address1;
output   img_0_ce1;
output   img_0_we1;
output  [127:0] img_0_d1;
input  [127:0] img_0_q1;
output  [7:0] img_1_address0;
output   img_1_ce0;
output   img_1_we0;
output  [127:0] img_1_d0;
input  [127:0] img_1_q0;
output  [7:0] img_1_address1;
output   img_1_ce1;
output   img_1_we1;
output  [127:0] img_1_d1;
input  [127:0] img_1_q1;
output  [6:0] real_twid_0_address0;
output   real_twid_0_ce0;
input  [127:0] real_twid_0_q0;
output  [6:0] real_twid_1_address0;
output   real_twid_1_ce0;
input  [127:0] real_twid_1_q0;
output  [6:0] img_twid_0_address0;
output   img_twid_0_ce0;
input  [127:0] img_twid_0_q0;
output  [6:0] img_twid_1_address0;
output   img_twid_1_ce0;
input  [127:0] img_twid_1_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] real_0_address0;
reg real_0_ce0;
reg real_0_we0;
reg[127:0] real_0_d0;
reg[7:0] real_0_address1;
reg real_0_ce1;
reg real_0_we1;
reg[127:0] real_0_d1;
reg[7:0] real_1_address0;
reg real_1_ce0;
reg real_1_we0;
reg[127:0] real_1_d0;
reg[7:0] real_1_address1;
reg real_1_ce1;
reg real_1_we1;
reg[127:0] real_1_d1;
reg[7:0] img_0_address0;
reg img_0_ce0;
reg img_0_we0;
reg[127:0] img_0_d0;
reg[7:0] img_0_address1;
reg img_0_ce1;
reg img_0_we1;
reg[127:0] img_0_d1;
reg[7:0] img_1_address0;
reg img_1_ce0;
reg img_1_we0;
reg[127:0] img_1_d0;
reg[7:0] img_1_address1;
reg img_1_ce1;
reg img_1_we1;
reg[127:0] img_1_d1;
reg[6:0] real_twid_0_address0;
reg real_twid_0_ce0;
reg[6:0] real_twid_1_address0;
reg real_twid_1_ce0;
reg[6:0] img_twid_0_address0;
reg img_twid_0_ce0;
reg[6:0] img_twid_1_address0;
reg img_twid_1_ce0;

(* fsm_encoding = "none" *) reg   [69:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [127:0] reg_449;
wire    ap_CS_fsm_state4;
wire    ap_CS_fsm_state38;
reg   [127:0] reg_454;
wire   [63:0] grp_fu_422_p2;
reg   [63:0] reg_459;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state19;
wire    ap_CS_fsm_state43;
wire    ap_CS_fsm_state53;
wire   [63:0] grp_fu_426_p2;
reg   [63:0] reg_463;
reg   [127:0] reg_467;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state48;
reg   [127:0] reg_472;
wire   [63:0] grp_fu_430_p2;
reg   [63:0] reg_477;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state64;
wire   [63:0] grp_fu_434_p2;
reg   [63:0] reg_482;
wire   [63:0] grp_fu_438_p2;
reg   [63:0] reg_487;
wire   [63:0] grp_fu_442_p2;
reg   [63:0] reg_492;
wire  signed [31:0] span_2_0_cast_fu_516_p1;
reg  signed [31:0] span_2_0_cast_reg_2632;
wire    ap_CS_fsm_state2;
wire   [0:0] icmp_ln8_fu_510_p2;
wire   [10:0] log_0_cast_fu_520_p1;
reg   [10:0] log_0_cast_reg_2639;
wire   [0:0] icmp_ln9_fu_534_p2;
reg   [0:0] icmp_ln9_reg_2644;
wire   [8:0] trunc_ln10_fu_540_p1;
reg   [8:0] trunc_ln10_reg_2648;
wire   [7:0] trunc_ln10_1_fu_544_p1;
reg   [7:0] trunc_ln10_1_reg_2654;
wire   [9:0] xor_ln11_2_fu_552_p2;
reg   [9:0] xor_ln11_2_reg_2660;
wire   [9:0] and_ln11_fu_580_p2;
reg   [9:0] and_ln11_reg_2665;
wire    ap_CS_fsm_state3;
reg   [0:0] tmp_1_reg_2670;
wire   [63:0] zext_ln13_fu_603_p1;
reg   [63:0] zext_ln13_reg_2675;
reg   [7:0] real_0_addr_reg_2681;
reg   [7:0] real_1_addr_reg_2687;
reg   [0:0] tmp_3_reg_2693;
wire   [63:0] zext_ln13_3_fu_617_p1;
reg   [63:0] zext_ln13_3_reg_2698;
reg   [7:0] real_0_addr_1_reg_2704;
reg   [7:0] real_1_addr_1_reg_2710;
wire   [31:0] or_ln10_fu_623_p2;
reg   [31:0] or_ln10_reg_2716;
wire   [31:0] xor_ln11_fu_628_p2;
reg   [31:0] xor_ln11_reg_2721;
reg   [22:0] lshr_ln_reg_2726;
wire   [6:0] shl_ln_fu_643_p3;
reg   [6:0] shl_ln_reg_2731;
wire   [63:0] tmp_2_fu_686_p4;
reg   [63:0] tmp_2_reg_2741;
reg   [22:0] lshr_ln13_2_reg_2747;
wire   [6:0] shl_ln13_1_fu_706_p3;
reg   [6:0] shl_ln13_1_reg_2754;
wire   [63:0] tmp_5_fu_749_p4;
reg   [63:0] tmp_5_reg_2769;
reg   [0:0] tmp_4_reg_2775;
wire   [10:0] zext_ln11_fu_767_p1;
reg   [10:0] zext_ln11_reg_2779;
wire    ap_CS_fsm_state10;
wire   [0:0] tmp_6_fu_835_p3;
reg   [0:0] tmp_6_reg_2784;
wire   [63:0] bitcast_ln15_fu_842_p1;
reg   [63:0] bitcast_ln15_reg_2788;
reg   [7:0] img_0_addr_reg_2794;
wire    ap_CS_fsm_state12;
reg   [7:0] img_1_addr_reg_2800;
reg   [7:0] img_0_addr_1_reg_2806;
reg   [7:0] img_1_addr_1_reg_2812;
wire   [63:0] tmp_s_fu_954_p4;
reg   [63:0] tmp_s_reg_2818;
wire   [63:0] tmp_7_fu_997_p4;
reg   [63:0] tmp_7_reg_2824;
wire   [63:0] bitcast_ln19_fu_1071_p1;
reg   [63:0] bitcast_ln19_reg_2830;
wire    ap_CS_fsm_state20;
wire   [6:0] trunc_ln21_1_fu_1157_p1;
reg   [6:0] trunc_ln21_1_reg_2836;
wire    ap_CS_fsm_state22;
wire   [0:0] icmp_ln22_fu_1161_p2;
reg   [0:0] icmp_ln22_reg_2841;
reg   [1:0] lshr_ln1_reg_2845;
reg   [0:0] tmp_8_reg_2851;
wire    ap_CS_fsm_state24;
wire   [63:0] tmp_9_fu_1235_p4;
reg   [63:0] tmp_9_reg_2876;
wire    ap_CS_fsm_state25;
reg   [127:0] real_0_load_3_reg_2882;
reg   [127:0] real_1_load_3_reg_2887;
wire   [63:0] tmp_10_fu_1278_p4;
reg   [63:0] tmp_10_reg_2892;
wire   [63:0] tmp_11_fu_1323_p4;
reg   [63:0] tmp_11_reg_2898;
reg   [127:0] img_0_load_3_reg_2904;
reg   [127:0] img_1_load_3_reg_2909;
wire   [63:0] tmp_12_fu_1366_p4;
reg   [63:0] tmp_12_reg_2914;
reg   [63:0] temp_2_reg_2920;
wire    ap_CS_fsm_state35;
wire   [63:0] bitcast_ln25_fu_1375_p1;
reg   [63:0] bitcast_ln25_reg_2925;
wire   [31:0] add_ln9_fu_1513_p2;
wire    ap_CS_fsm_state36;
wire  signed [31:0] sext_ln8_fu_1544_p1;
reg  signed [31:0] sext_ln8_reg_2939;
wire   [0:0] icmp_ln9_1_fu_1528_p2;
wire   [15:0] zext_ln9_fu_1553_p1;
reg   [15:0] zext_ln9_reg_2946;
wire   [0:0] icmp_ln9_2_fu_1567_p2;
reg   [0:0] icmp_ln9_2_reg_2951;
reg   [8:0] trunc_ln10_5_reg_2955;
reg   [7:0] trunc_ln10_7_reg_2961;
wire   [9:0] xor_ln11_5_fu_1603_p2;
reg   [9:0] xor_ln11_5_reg_2967;
wire   [9:0] and_ln11_1_fu_1631_p2;
reg   [9:0] and_ln11_1_reg_2972;
wire    ap_CS_fsm_state37;
reg   [0:0] tmp_16_reg_2977;
wire   [63:0] zext_ln13_5_fu_1654_p1;
reg   [63:0] zext_ln13_5_reg_2982;
reg   [7:0] real_0_addr_2_reg_2988;
reg   [7:0] real_1_addr_2_reg_2994;
reg   [0:0] tmp_17_reg_3000;
wire   [63:0] zext_ln13_7_fu_1668_p1;
reg   [63:0] zext_ln13_7_reg_3005;
reg   [7:0] real_0_addr_3_reg_3011;
reg   [7:0] real_1_addr_3_reg_3017;
wire   [31:0] or_ln10_1_fu_1674_p2;
reg   [31:0] or_ln10_1_reg_3023;
wire   [31:0] xor_ln11_1_fu_1679_p2;
reg   [31:0] xor_ln11_1_reg_3028;
reg   [22:0] lshr_ln13_4_reg_3033;
wire   [6:0] shl_ln13_2_fu_1694_p3;
reg   [6:0] shl_ln13_2_reg_3038;
wire   [63:0] tmp_2_1_fu_1737_p4;
reg   [63:0] tmp_2_1_reg_3048;
reg   [22:0] lshr_ln13_6_reg_3054;
wire   [6:0] shl_ln13_3_fu_1757_p3;
reg   [6:0] shl_ln13_3_reg_3061;
wire   [63:0] tmp_5_1_fu_1800_p4;
reg   [63:0] tmp_5_1_reg_3076;
reg   [0:0] tmp_18_reg_3082;
wire   [15:0] zext_ln11_1_fu_1818_p1;
reg   [15:0] zext_ln11_1_reg_3086;
wire    ap_CS_fsm_state44;
wire   [0:0] tmp_19_fu_1886_p3;
reg   [0:0] tmp_19_reg_3091;
wire   [63:0] bitcast_ln15_1_fu_1893_p1;
reg   [63:0] bitcast_ln15_1_reg_3095;
reg   [7:0] img_0_addr_2_reg_3101;
wire    ap_CS_fsm_state46;
reg   [7:0] img_1_addr_2_reg_3107;
reg   [7:0] img_0_addr_3_reg_3113;
reg   [7:0] img_1_addr_3_reg_3119;
wire   [63:0] tmp_11_1_fu_2005_p4;
reg   [63:0] tmp_11_1_reg_3125;
wire   [63:0] tmp_14_1_fu_2048_p4;
reg   [63:0] tmp_14_1_reg_3131;
wire   [63:0] bitcast_ln18_1_fu_2057_p1;
reg   [63:0] bitcast_ln18_1_reg_3137;
wire   [63:0] bitcast_ln19_1_fu_2120_p1;
reg   [63:0] bitcast_ln19_1_reg_3143;
wire    ap_CS_fsm_state54;
wire   [6:0] trunc_ln21_3_fu_2206_p1;
reg   [6:0] trunc_ln21_3_reg_3149;
wire    ap_CS_fsm_state56;
wire   [0:0] icmp_ln22_1_fu_2210_p2;
reg   [0:0] icmp_ln22_1_reg_3154;
reg   [1:0] lshr_ln23_2_reg_3158;
reg   [0:0] tmp_20_reg_3164;
wire    ap_CS_fsm_state58;
wire   [63:0] tmp_21_1_fu_2284_p4;
reg   [63:0] tmp_21_1_reg_3189;
wire    ap_CS_fsm_state59;
reg   [127:0] real_0_load_7_reg_3195;
reg   [127:0] real_1_load_7_reg_3200;
wire   [63:0] tmp_24_1_fu_2327_p4;
reg   [63:0] tmp_24_1_reg_3205;
wire   [63:0] tmp_27_1_fu_2372_p4;
reg   [63:0] tmp_27_1_reg_3211;
reg   [127:0] img_0_load_7_reg_3217;
reg   [127:0] img_1_load_7_reg_3222;
wire   [63:0] tmp_30_1_fu_2415_p4;
reg   [63:0] tmp_30_1_reg_3227;
reg   [63:0] add_1_reg_3233;
wire    ap_CS_fsm_state69;
wire   [63:0] bitcast_ln27_1_fu_2424_p1;
reg   [63:0] bitcast_ln27_1_reg_3238;
wire   [31:0] add_ln9_1_fu_2562_p2;
wire    ap_CS_fsm_state70;
reg   [31:0] odd_1_0_reg_402;
reg   [31:0] odd_1_1_reg_412;
wire   [0:0] icmp_ln9_3_fu_2577_p2;
wire   [63:0] zext_ln23_fu_1185_p1;
wire   [63:0] zext_ln23_3_fu_2234_p1;
reg   [3:0] log_0_fu_146;
wire   [3:0] add_ln8_fu_2597_p2;
reg   [27:0] span_2_0_fu_150;
wire  signed [27:0] sext_ln8_1_fu_2593_p1;
wire   [127:0] or_ln14_1_fu_805_p2;
wire    ap_CS_fsm_state11;
wire   [127:0] or_ln15_1_fu_876_p2;
wire   [127:0] or_ln27_1_fu_1448_p2;
wire   [127:0] or_ln14_3_fu_1856_p2;
wire    ap_CS_fsm_state45;
wire   [127:0] or_ln15_3_fu_1927_p2;
wire   [127:0] or_ln27_3_fu_2497_p2;
wire   [127:0] or_ln14_fu_828_p2;
wire   [127:0] or_ln15_fu_913_p2;
wire    ap_CS_fsm_state13;
wire   [127:0] or_ln27_fu_1506_p2;
wire   [127:0] or_ln14_2_fu_1879_p2;
wire   [127:0] or_ln15_2_fu_1964_p2;
wire    ap_CS_fsm_state47;
wire   [127:0] or_ln27_2_fu_2555_p2;
wire   [127:0] or_ln18_1_fu_1041_p2;
wire    ap_CS_fsm_state21;
wire   [127:0] or_ln19_1_fu_1105_p2;
wire   [127:0] or_ln25_1_fu_1411_p2;
wire   [127:0] or_ln18_3_fu_2091_p2;
wire    ap_CS_fsm_state55;
wire   [127:0] or_ln19_3_fu_2154_p2;
wire   [127:0] or_ln25_3_fu_2461_p2;
wire   [127:0] or_ln18_fu_1064_p2;
wire   [127:0] or_ln19_fu_1142_p2;
wire    ap_CS_fsm_state23;
wire   [127:0] or_ln25_fu_1469_p2;
wire   [127:0] or_ln18_2_fu_2113_p2;
wire   [127:0] or_ln19_2_fu_2191_p2;
wire    ap_CS_fsm_state57;
wire   [127:0] or_ln25_2_fu_2519_p2;
reg   [63:0] grp_fu_422_p0;
reg   [63:0] grp_fu_422_p1;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state65;
reg   [63:0] grp_fu_426_p0;
reg   [63:0] grp_fu_426_p1;
reg   [63:0] grp_fu_430_p0;
reg   [63:0] grp_fu_430_p1;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state60;
reg   [63:0] grp_fu_434_p0;
reg   [63:0] grp_fu_434_p1;
reg   [63:0] grp_fu_438_p0;
reg   [63:0] grp_fu_438_p1;
reg   [63:0] grp_fu_442_p0;
reg   [63:0] grp_fu_442_p1;
wire  signed [27:0] span_2_0_cast_fu_516_p0;
wire  signed [27:0] tmp_fu_524_p1;
wire   [17:0] tmp_fu_524_p4;
wire  signed [27:0] trunc_ln10_fu_540_p0;
wire  signed [27:0] trunc_ln10_1_fu_544_p0;
wire  signed [27:0] trunc_ln11_fu_548_p0;
wire   [9:0] trunc_ln11_fu_548_p1;
wire   [7:0] trunc_ln10_3_fu_562_p1;
wire   [8:0] trunc_ln10_2_fu_558_p1;
wire   [9:0] trunc_ln10_4_fu_566_p1;
wire   [7:0] or_ln11_fu_570_p2;
wire   [8:0] or_ln11_1_fu_575_p2;
wire   [8:0] xor_ln11_4_fu_590_p2;
wire   [7:0] xor_ln11_3_fu_585_p2;
wire   [127:0] zext_ln13_1_fu_650_p1;
wire   [127:0] lshr_ln13_fu_654_p2;
wire   [63:0] trunc_ln13_fu_660_p1;
wire   [127:0] zext_ln13_2_fu_668_p1;
wire   [127:0] lshr_ln13_1_fu_672_p2;
wire   [63:0] trunc_ln13_1_fu_678_p1;
wire   [63:0] tmp_2_fu_686_p1;
wire   [63:0] tmp_2_fu_686_p2;
wire   [22:0] tmp_2_fu_686_p3;
wire   [127:0] zext_ln13_4_fu_713_p1;
wire   [127:0] lshr_ln13_3_fu_717_p2;
wire   [63:0] trunc_ln13_2_fu_723_p1;
wire   [127:0] zext_ln13_6_fu_731_p1;
wire   [127:0] lshr_ln13_5_fu_735_p2;
wire   [63:0] trunc_ln13_3_fu_741_p1;
wire   [63:0] tmp_5_fu_749_p1;
wire   [63:0] tmp_5_fu_749_p2;
wire   [22:0] tmp_5_fu_749_p3;
wire   [127:0] zext_ln14_fu_774_p1;
wire   [127:0] shl_ln14_fu_777_p2;
wire   [127:0] xor_ln14_fu_783_p2;
wire   [63:0] bitcast_ln14_fu_770_p1;
wire   [127:0] zext_ln14_2_fu_795_p1;
wire   [127:0] and_ln14_1_fu_789_p2;
wire   [127:0] shl_ln14_2_fu_799_p2;
wire   [127:0] zext_ln14_1_fu_818_p1;
wire   [127:0] and_ln14_fu_812_p2;
wire   [127:0] shl_ln14_1_fu_822_p2;
wire   [127:0] zext_ln15_2_fu_846_p1;
wire   [127:0] shl_ln15_2_fu_849_p2;
wire   [127:0] xor_ln15_1_fu_855_p2;
wire   [127:0] zext_ln15_3_fu_867_p1;
wire   [127:0] and_ln15_1_fu_861_p2;
wire   [127:0] shl_ln15_3_fu_870_p2;
wire   [127:0] zext_ln15_fu_883_p1;
wire   [127:0] shl_ln15_fu_886_p2;
wire   [127:0] xor_ln15_fu_892_p2;
wire   [127:0] zext_ln15_1_fu_904_p1;
wire   [127:0] and_ln15_fu_898_p2;
wire   [127:0] shl_ln15_1_fu_907_p2;
wire   [127:0] zext_ln17_fu_920_p1;
wire   [127:0] lshr_ln17_fu_923_p2;
wire   [63:0] trunc_ln17_fu_929_p1;
wire   [127:0] zext_ln17_1_fu_937_p1;
wire   [127:0] lshr_ln17_1_fu_940_p2;
wire   [63:0] trunc_ln17_1_fu_946_p1;
wire   [63:0] tmp_s_fu_954_p1;
wire   [63:0] tmp_s_fu_954_p2;
wire   [127:0] zext_ln17_2_fu_963_p1;
wire   [127:0] lshr_ln17_2_fu_966_p2;
wire   [63:0] trunc_ln17_2_fu_972_p1;
wire   [127:0] zext_ln17_3_fu_980_p1;
wire   [127:0] lshr_ln17_3_fu_983_p2;
wire   [63:0] trunc_ln17_3_fu_989_p1;
wire   [63:0] tmp_7_fu_997_p1;
wire   [63:0] tmp_7_fu_997_p2;
wire   [127:0] zext_ln18_fu_1010_p1;
wire   [127:0] shl_ln18_fu_1013_p2;
wire   [127:0] xor_ln18_fu_1019_p2;
wire   [63:0] bitcast_ln18_fu_1006_p1;
wire   [127:0] zext_ln18_2_fu_1031_p1;
wire   [127:0] and_ln18_1_fu_1025_p2;
wire   [127:0] shl_ln18_2_fu_1035_p2;
wire   [127:0] zext_ln18_1_fu_1054_p1;
wire   [127:0] and_ln18_fu_1048_p2;
wire   [127:0] shl_ln18_1_fu_1058_p2;
wire   [127:0] zext_ln19_2_fu_1075_p1;
wire   [127:0] shl_ln19_2_fu_1078_p2;
wire   [127:0] xor_ln19_1_fu_1084_p2;
wire   [127:0] zext_ln19_3_fu_1096_p1;
wire   [127:0] and_ln19_1_fu_1090_p2;
wire   [127:0] shl_ln19_3_fu_1099_p2;
wire   [127:0] zext_ln19_fu_1112_p1;
wire   [127:0] shl_ln19_fu_1115_p2;
wire   [127:0] xor_ln19_fu_1121_p2;
wire   [127:0] zext_ln19_1_fu_1133_p1;
wire   [127:0] and_ln19_fu_1127_p2;
wire   [127:0] shl_ln19_1_fu_1136_p2;
wire   [10:0] shl_ln21_fu_1149_p2;
wire   [9:0] trunc_ln21_fu_1153_p1;
wire   [6:0] shl_ln1_fu_1192_p3;
wire   [127:0] zext_ln23_1_fu_1199_p1;
wire   [127:0] lshr_ln23_fu_1203_p2;
wire   [63:0] trunc_ln23_fu_1209_p1;
wire   [127:0] zext_ln23_2_fu_1217_p1;
wire   [127:0] lshr_ln23_1_fu_1221_p2;
wire   [63:0] trunc_ln23_1_fu_1227_p1;
wire   [63:0] tmp_9_fu_1235_p1;
wire   [63:0] tmp_9_fu_1235_p2;
wire   [127:0] zext_ln23_4_fu_1244_p1;
wire   [127:0] lshr_ln23_3_fu_1247_p2;
wire   [63:0] trunc_ln23_2_fu_1253_p1;
wire   [127:0] zext_ln23_5_fu_1261_p1;
wire   [127:0] lshr_ln23_4_fu_1264_p2;
wire   [63:0] trunc_ln23_3_fu_1270_p1;
wire   [63:0] tmp_10_fu_1278_p1;
wire   [63:0] tmp_10_fu_1278_p2;
wire   [127:0] zext_ln24_fu_1287_p1;
wire   [127:0] lshr_ln24_fu_1291_p2;
wire   [63:0] trunc_ln24_fu_1297_p1;
wire   [127:0] zext_ln24_1_fu_1305_p1;
wire   [127:0] lshr_ln24_1_fu_1309_p2;
wire   [63:0] trunc_ln24_1_fu_1315_p1;
wire   [63:0] tmp_11_fu_1323_p1;
wire   [63:0] tmp_11_fu_1323_p2;
wire   [127:0] zext_ln24_2_fu_1332_p1;
wire   [127:0] lshr_ln24_2_fu_1335_p2;
wire   [63:0] trunc_ln24_2_fu_1341_p1;
wire   [127:0] zext_ln24_3_fu_1349_p1;
wire   [127:0] lshr_ln24_3_fu_1352_p2;
wire   [63:0] trunc_ln24_3_fu_1358_p1;
wire   [63:0] tmp_12_fu_1366_p1;
wire   [63:0] tmp_12_fu_1366_p2;
wire   [127:0] zext_ln25_fu_1382_p1;
wire   [127:0] shl_ln25_fu_1385_p2;
wire   [127:0] xor_ln25_fu_1391_p2;
wire   [127:0] zext_ln25_2_fu_1402_p1;
wire   [127:0] and_ln25_1_fu_1397_p2;
wire   [127:0] shl_ln25_2_fu_1405_p2;
wire   [127:0] zext_ln27_2_fu_1418_p1;
wire   [127:0] shl_ln27_2_fu_1421_p2;
wire   [127:0] xor_ln27_1_fu_1427_p2;
wire   [63:0] bitcast_ln27_fu_1379_p1;
wire   [127:0] zext_ln27_3_fu_1438_p1;
wire   [127:0] and_ln27_1_fu_1433_p2;
wire   [127:0] shl_ln27_3_fu_1442_p2;
wire   [127:0] zext_ln25_1_fu_1460_p1;
wire   [127:0] and_ln25_fu_1455_p2;
wire   [127:0] shl_ln25_1_fu_1463_p2;
wire   [127:0] zext_ln27_fu_1476_p1;
wire   [127:0] shl_ln27_fu_1479_p2;
wire   [127:0] xor_ln27_fu_1485_p2;
wire   [127:0] zext_ln27_1_fu_1496_p1;
wire   [127:0] and_ln27_fu_1491_p2;
wire   [127:0] shl_ln27_1_fu_1500_p2;
wire   [21:0] tmp_13_fu_1518_p4;
wire   [26:0] tmp_14_fu_1534_p4;
wire   [3:0] or_ln8_fu_1548_p2;
wire   [16:0] tmp_15_fu_1557_p4;
wire   [9:0] trunc_ln11_5_fu_1593_p4;
wire   [7:0] trunc_ln10_8_fu_1613_p1;
wire   [8:0] trunc_ln10_6_fu_1609_p1;
wire   [9:0] trunc_ln10_9_fu_1617_p1;
wire   [7:0] or_ln11_2_fu_1621_p2;
wire   [8:0] or_ln11_3_fu_1626_p2;
wire   [8:0] xor_ln11_7_fu_1641_p2;
wire   [7:0] xor_ln11_6_fu_1636_p2;
wire   [127:0] zext_ln13_8_fu_1701_p1;
wire   [127:0] lshr_ln13_7_fu_1705_p2;
wire   [63:0] trunc_ln13_4_fu_1711_p1;
wire   [127:0] zext_ln13_9_fu_1719_p1;
wire   [127:0] lshr_ln13_8_fu_1723_p2;
wire   [63:0] trunc_ln13_5_fu_1729_p1;
wire   [63:0] tmp_2_1_fu_1737_p1;
wire   [63:0] tmp_2_1_fu_1737_p2;
wire   [22:0] tmp_2_1_fu_1737_p3;
wire   [127:0] zext_ln13_10_fu_1764_p1;
wire   [127:0] lshr_ln13_9_fu_1768_p2;
wire   [63:0] trunc_ln13_6_fu_1774_p1;
wire   [127:0] zext_ln13_11_fu_1782_p1;
wire   [127:0] lshr_ln13_10_fu_1786_p2;
wire   [63:0] trunc_ln13_7_fu_1792_p1;
wire   [63:0] tmp_5_1_fu_1800_p1;
wire   [63:0] tmp_5_1_fu_1800_p2;
wire   [22:0] tmp_5_1_fu_1800_p3;
wire   [127:0] zext_ln14_3_fu_1825_p1;
wire   [127:0] shl_ln14_3_fu_1828_p2;
wire   [127:0] xor_ln14_1_fu_1834_p2;
wire   [63:0] bitcast_ln14_1_fu_1821_p1;
wire   [127:0] zext_ln14_5_fu_1846_p1;
wire   [127:0] and_ln14_3_fu_1840_p2;
wire   [127:0] shl_ln14_5_fu_1850_p2;
wire   [127:0] zext_ln14_4_fu_1869_p1;
wire   [127:0] and_ln14_2_fu_1863_p2;
wire   [127:0] shl_ln14_4_fu_1873_p2;
wire   [127:0] zext_ln15_6_fu_1897_p1;
wire   [127:0] shl_ln15_6_fu_1900_p2;
wire   [127:0] xor_ln15_3_fu_1906_p2;
wire   [127:0] zext_ln15_7_fu_1918_p1;
wire   [127:0] and_ln15_3_fu_1912_p2;
wire   [127:0] shl_ln15_7_fu_1921_p2;
wire   [127:0] zext_ln15_4_fu_1934_p1;
wire   [127:0] shl_ln15_4_fu_1937_p2;
wire   [127:0] xor_ln15_2_fu_1943_p2;
wire   [127:0] zext_ln15_5_fu_1955_p1;
wire   [127:0] and_ln15_2_fu_1949_p2;
wire   [127:0] shl_ln15_5_fu_1958_p2;
wire   [127:0] zext_ln17_4_fu_1971_p1;
wire   [127:0] lshr_ln17_4_fu_1974_p2;
wire   [63:0] trunc_ln17_4_fu_1980_p1;
wire   [127:0] zext_ln17_5_fu_1988_p1;
wire   [127:0] lshr_ln17_5_fu_1991_p2;
wire   [63:0] trunc_ln17_5_fu_1997_p1;
wire   [63:0] tmp_11_1_fu_2005_p1;
wire   [63:0] tmp_11_1_fu_2005_p2;
wire   [127:0] zext_ln17_6_fu_2014_p1;
wire   [127:0] lshr_ln17_6_fu_2017_p2;
wire   [63:0] trunc_ln17_6_fu_2023_p1;
wire   [127:0] zext_ln17_7_fu_2031_p1;
wire   [127:0] lshr_ln17_7_fu_2034_p2;
wire   [63:0] trunc_ln17_7_fu_2040_p1;
wire   [63:0] tmp_14_1_fu_2048_p1;
wire   [63:0] tmp_14_1_fu_2048_p2;
wire   [127:0] zext_ln18_3_fu_2061_p1;
wire   [127:0] shl_ln18_3_fu_2064_p2;
wire   [127:0] xor_ln18_1_fu_2070_p2;
wire   [127:0] zext_ln18_5_fu_2082_p1;
wire   [127:0] and_ln18_3_fu_2076_p2;
wire   [127:0] shl_ln18_5_fu_2085_p2;
wire   [127:0] zext_ln18_4_fu_2104_p1;
wire   [127:0] and_ln18_2_fu_2098_p2;
wire   [127:0] shl_ln18_4_fu_2107_p2;
wire   [127:0] zext_ln19_6_fu_2124_p1;
wire   [127:0] shl_ln19_6_fu_2127_p2;
wire   [127:0] xor_ln19_3_fu_2133_p2;
wire   [127:0] zext_ln19_7_fu_2145_p1;
wire   [127:0] and_ln19_3_fu_2139_p2;
wire   [127:0] shl_ln19_7_fu_2148_p2;
wire   [127:0] zext_ln19_4_fu_2161_p1;
wire   [127:0] shl_ln19_4_fu_2164_p2;
wire   [127:0] xor_ln19_2_fu_2170_p2;
wire   [127:0] zext_ln19_5_fu_2182_p1;
wire   [127:0] and_ln19_2_fu_2176_p2;
wire   [127:0] shl_ln19_5_fu_2185_p2;
wire   [15:0] shl_ln21_1_fu_2198_p2;
wire   [9:0] trunc_ln21_2_fu_2202_p1;
wire   [6:0] shl_ln23_1_fu_2241_p3;
wire   [127:0] zext_ln23_6_fu_2248_p1;
wire   [127:0] lshr_ln23_5_fu_2252_p2;
wire   [63:0] trunc_ln23_4_fu_2258_p1;
wire   [127:0] zext_ln23_7_fu_2266_p1;
wire   [127:0] lshr_ln23_6_fu_2270_p2;
wire   [63:0] trunc_ln23_5_fu_2276_p1;
wire   [63:0] tmp_21_1_fu_2284_p1;
wire   [63:0] tmp_21_1_fu_2284_p2;
wire   [127:0] zext_ln23_8_fu_2293_p1;
wire   [127:0] lshr_ln23_7_fu_2296_p2;
wire   [63:0] trunc_ln23_6_fu_2302_p1;
wire   [127:0] zext_ln23_9_fu_2310_p1;
wire   [127:0] lshr_ln23_8_fu_2313_p2;
wire   [63:0] trunc_ln23_7_fu_2319_p1;
wire   [63:0] tmp_24_1_fu_2327_p1;
wire   [63:0] tmp_24_1_fu_2327_p2;
wire   [127:0] zext_ln24_4_fu_2336_p1;
wire   [127:0] lshr_ln24_4_fu_2340_p2;
wire   [63:0] trunc_ln24_4_fu_2346_p1;
wire   [127:0] zext_ln24_5_fu_2354_p1;
wire   [127:0] lshr_ln24_5_fu_2358_p2;
wire   [63:0] trunc_ln24_5_fu_2364_p1;
wire   [63:0] tmp_27_1_fu_2372_p1;
wire   [63:0] tmp_27_1_fu_2372_p2;
wire   [127:0] zext_ln24_6_fu_2381_p1;
wire   [127:0] lshr_ln24_6_fu_2384_p2;
wire   [63:0] trunc_ln24_6_fu_2390_p1;
wire   [127:0] zext_ln24_7_fu_2398_p1;
wire   [127:0] lshr_ln24_7_fu_2401_p2;
wire   [63:0] trunc_ln24_7_fu_2407_p1;
wire   [63:0] tmp_30_1_fu_2415_p1;
wire   [63:0] tmp_30_1_fu_2415_p2;
wire   [127:0] zext_ln25_3_fu_2431_p1;
wire   [127:0] shl_ln25_3_fu_2434_p2;
wire   [127:0] xor_ln25_1_fu_2440_p2;
wire   [63:0] bitcast_ln25_1_fu_2428_p1;
wire   [127:0] zext_ln25_5_fu_2451_p1;
wire   [127:0] and_ln25_3_fu_2446_p2;
wire   [127:0] shl_ln25_5_fu_2455_p2;
wire   [127:0] zext_ln27_6_fu_2468_p1;
wire   [127:0] shl_ln27_6_fu_2471_p2;
wire   [127:0] xor_ln27_3_fu_2477_p2;
wire   [127:0] zext_ln27_7_fu_2488_p1;
wire   [127:0] and_ln27_3_fu_2483_p2;
wire   [127:0] shl_ln27_7_fu_2491_p2;
wire   [127:0] zext_ln25_4_fu_2509_p1;
wire   [127:0] and_ln25_2_fu_2504_p2;
wire   [127:0] shl_ln25_4_fu_2513_p2;
wire   [127:0] zext_ln27_4_fu_2526_p1;
wire   [127:0] shl_ln27_4_fu_2529_p2;
wire   [127:0] xor_ln27_2_fu_2535_p2;
wire   [127:0] zext_ln27_5_fu_2546_p1;
wire   [127:0] and_ln27_2_fu_2541_p2;
wire   [127:0] shl_ln27_5_fu_2549_p2;
wire   [21:0] tmp_21_fu_2567_p4;
wire   [25:0] tmp_22_fu_2583_p4;
reg   [1:0] grp_fu_422_opcode;
reg   [1:0] grp_fu_426_opcode;
reg   [69:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 70'd1;
end

fft_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U1(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_422_p0),
    .din1(grp_fu_422_p1),
    .opcode(grp_fu_422_opcode),
    .ce(1'b1),
    .dout(grp_fu_422_p2)
);

fft_dadddsub_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dadddsub_64ns_64ns_64_5_full_dsp_1_U2(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_426_p0),
    .din1(grp_fu_426_p1),
    .opcode(grp_fu_426_opcode),
    .ce(1'b1),
    .dout(grp_fu_426_p2)
);

fft_dmul_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_full_dsp_1_U3(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_430_p0),
    .din1(grp_fu_430_p1),
    .ce(1'b1),
    .dout(grp_fu_430_p2)
);

fft_dmul_64ns_64ns_64_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_full_dsp_1_U4(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_434_p0),
    .din1(grp_fu_434_p1),
    .ce(1'b1),
    .dout(grp_fu_434_p2)
);

fft_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U5(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_438_p0),
    .din1(grp_fu_438_p1),
    .ce(1'b1),
    .dout(grp_fu_438_p2)
);

fft_dmul_64ns_64ns_64_5_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 64 ))
dmul_64ns_64ns_64_5_max_dsp_1_U6(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_442_p0),
    .din1(grp_fu_442_p1),
    .ce(1'b1),
    .dout(grp_fu_442_p2)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U7(
    .din0(tmp_2_fu_686_p1),
    .din1(tmp_2_fu_686_p2),
    .din2(tmp_2_fu_686_p3),
    .dout(tmp_2_fu_686_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U8(
    .din0(tmp_5_fu_749_p1),
    .din1(tmp_5_fu_749_p2),
    .din2(tmp_5_fu_749_p3),
    .dout(tmp_5_fu_749_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U9(
    .din0(tmp_s_fu_954_p1),
    .din1(tmp_s_fu_954_p2),
    .din2(lshr_ln_reg_2726),
    .dout(tmp_s_fu_954_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U10(
    .din0(tmp_7_fu_997_p1),
    .din1(tmp_7_fu_997_p2),
    .din2(lshr_ln13_2_reg_2747),
    .dout(tmp_7_fu_997_p4)
);

fft_mux_22_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_22_64_1_1_U11(
    .din0(tmp_9_fu_1235_p1),
    .din1(tmp_9_fu_1235_p2),
    .din2(lshr_ln1_reg_2845),
    .dout(tmp_9_fu_1235_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U12(
    .din0(tmp_10_fu_1278_p1),
    .din1(tmp_10_fu_1278_p2),
    .din2(lshr_ln13_2_reg_2747),
    .dout(tmp_10_fu_1278_p4)
);

fft_mux_22_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_22_64_1_1_U13(
    .din0(tmp_11_fu_1323_p1),
    .din1(tmp_11_fu_1323_p2),
    .din2(lshr_ln1_reg_2845),
    .dout(tmp_11_fu_1323_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U14(
    .din0(tmp_12_fu_1366_p1),
    .din1(tmp_12_fu_1366_p2),
    .din2(lshr_ln13_2_reg_2747),
    .dout(tmp_12_fu_1366_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U15(
    .din0(tmp_2_1_fu_1737_p1),
    .din1(tmp_2_1_fu_1737_p2),
    .din2(tmp_2_1_fu_1737_p3),
    .dout(tmp_2_1_fu_1737_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U16(
    .din0(tmp_5_1_fu_1800_p1),
    .din1(tmp_5_1_fu_1800_p2),
    .din2(tmp_5_1_fu_1800_p3),
    .dout(tmp_5_1_fu_1800_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U17(
    .din0(tmp_11_1_fu_2005_p1),
    .din1(tmp_11_1_fu_2005_p2),
    .din2(lshr_ln13_4_reg_3033),
    .dout(tmp_11_1_fu_2005_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U18(
    .din0(tmp_14_1_fu_2048_p1),
    .din1(tmp_14_1_fu_2048_p2),
    .din2(lshr_ln13_6_reg_3054),
    .dout(tmp_14_1_fu_2048_p4)
);

fft_mux_22_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_22_64_1_1_U19(
    .din0(tmp_21_1_fu_2284_p1),
    .din1(tmp_21_1_fu_2284_p2),
    .din2(lshr_ln23_2_reg_3158),
    .dout(tmp_21_1_fu_2284_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U20(
    .din0(tmp_24_1_fu_2327_p1),
    .din1(tmp_24_1_fu_2327_p2),
    .din2(lshr_ln13_6_reg_3054),
    .dout(tmp_24_1_fu_2327_p4)
);

fft_mux_22_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 2 ),
    .dout_WIDTH( 64 ))
mux_22_64_1_1_U21(
    .din0(tmp_27_1_fu_2372_p1),
    .din1(tmp_27_1_fu_2372_p2),
    .din2(lshr_ln23_2_reg_3158),
    .dout(tmp_27_1_fu_2372_p4)
);

fft_mux_223_64_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .din2_WIDTH( 23 ),
    .dout_WIDTH( 64 ))
mux_223_64_1_1_U22(
    .din0(tmp_30_1_fu_2415_p1),
    .din1(tmp_30_1_fu_2415_p2),
    .din2(lshr_ln13_6_reg_3054),
    .dout(tmp_30_1_fu_2415_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        log_0_fu_146 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_state70) & ((icmp_ln9_3_fu_2577_p2 == 1'd0) | (icmp_ln9_2_reg_2951 == 1'd0)))) begin
        log_0_fu_146 <= add_ln8_fu_2597_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_534_p2 == 1'd1) & (icmp_ln8_fu_510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        odd_1_0_reg_402 <= span_2_0_cast_fu_516_p1;
    end else if (((icmp_ln9_1_fu_1528_p2 == 1'd1) & (icmp_ln9_reg_2644 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        odd_1_0_reg_402 <= add_ln9_fu_1513_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (((icmp_ln9_2_fu_1567_p2 == 1'd1) & (icmp_ln9_reg_2644 == 1'd0)) | ((icmp_ln9_2_fu_1567_p2 == 1'd1) & (icmp_ln9_1_fu_1528_p2 == 1'd0))))) begin
        odd_1_1_reg_412 <= sext_ln8_fu_1544_p1;
    end else if (((icmp_ln9_3_fu_2577_p2 == 1'd1) & (icmp_ln9_2_reg_2951 == 1'd1) & (1'b1 == ap_CS_fsm_state70))) begin
        odd_1_1_reg_412 <= add_ln9_1_fu_2562_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        reg_449 <= real_0_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_449 <= real_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        reg_454 <= real_1_q1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_454 <= real_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        reg_467 <= img_0_q1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_467 <= img_0_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        reg_472 <= img_1_q1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        reg_472 <= img_1_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        span_2_0_fu_150 <= 28'd512;
    end else if (((1'b1 == ap_CS_fsm_state70) & ((icmp_ln9_3_fu_2577_p2 == 1'd0) | (icmp_ln9_2_reg_2951 == 1'd0)))) begin
        span_2_0_fu_150 <= sext_ln8_1_fu_2593_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state69)) begin
        add_1_reg_3233 <= grp_fu_426_p2;
        bitcast_ln27_1_reg_3238 <= bitcast_ln27_1_fu_2424_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        and_ln11_1_reg_2972 <= and_ln11_1_fu_1631_p2;
        real_0_addr_2_reg_2988 <= zext_ln13_5_fu_1654_p1;
        real_0_addr_3_reg_3011 <= zext_ln13_7_fu_1668_p1;
        real_1_addr_2_reg_2994 <= zext_ln13_5_fu_1654_p1;
        real_1_addr_3_reg_3017 <= zext_ln13_7_fu_1668_p1;
        tmp_16_reg_2977 <= xor_ln11_7_fu_1641_p2[32'd8];
        tmp_17_reg_3000 <= or_ln11_3_fu_1626_p2[32'd8];
        zext_ln13_5_reg_2982[7 : 0] <= zext_ln13_5_fu_1654_p1[7 : 0];
        zext_ln13_7_reg_3005[7 : 0] <= zext_ln13_7_fu_1668_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        and_ln11_reg_2665 <= and_ln11_fu_580_p2;
        real_0_addr_1_reg_2704 <= zext_ln13_3_fu_617_p1;
        real_0_addr_reg_2681 <= zext_ln13_fu_603_p1;
        real_1_addr_1_reg_2710 <= zext_ln13_3_fu_617_p1;
        real_1_addr_reg_2687 <= zext_ln13_fu_603_p1;
        tmp_1_reg_2670 <= xor_ln11_4_fu_590_p2[32'd8];
        tmp_3_reg_2693 <= or_ln11_1_fu_575_p2[32'd8];
        zext_ln13_3_reg_2698[7 : 0] <= zext_ln13_3_fu_617_p1[7 : 0];
        zext_ln13_reg_2675[7 : 0] <= zext_ln13_fu_603_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        bitcast_ln15_1_reg_3095 <= bitcast_ln15_1_fu_1893_p1;
        tmp_19_reg_3091 <= xor_ln11_1_reg_3028[32'd9];
        zext_ln11_1_reg_3086[9 : 0] <= zext_ln11_1_fu_1818_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        bitcast_ln15_reg_2788 <= bitcast_ln15_fu_842_p1;
        tmp_6_reg_2784 <= xor_ln11_reg_2721[32'd9];
        zext_ln11_reg_2779[9 : 0] <= zext_ln11_fu_767_p1[9 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state53)) begin
        bitcast_ln18_1_reg_3137 <= bitcast_ln18_1_fu_2057_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        bitcast_ln19_1_reg_3143 <= bitcast_ln19_1_fu_2120_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        bitcast_ln19_reg_2830 <= bitcast_ln19_fu_1071_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        bitcast_ln25_reg_2925 <= bitcast_ln25_fu_1375_p1;
        temp_2_reg_2920 <= grp_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        icmp_ln22_1_reg_3154 <= icmp_ln22_1_fu_2210_p2;
        trunc_ln21_3_reg_3149[6 : 1] <= trunc_ln21_3_fu_2206_p1[6 : 1];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        icmp_ln22_reg_2841 <= icmp_ln22_fu_1161_p2;
        trunc_ln21_1_reg_2836 <= trunc_ln21_1_fu_1157_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & ((icmp_ln9_1_fu_1528_p2 == 1'd0) | (icmp_ln9_reg_2644 == 1'd0)))) begin
        icmp_ln9_2_reg_2951 <= icmp_ln9_2_fu_1567_p2;
        sext_ln8_reg_2939 <= sext_ln8_fu_1544_p1;
        zext_ln9_reg_2946[3 : 1] <= zext_ln9_fu_1553_p1[3 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln8_fu_510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        icmp_ln9_reg_2644 <= icmp_ln9_fu_534_p2;
        log_0_cast_reg_2639[3 : 0] <= log_0_cast_fu_520_p1[3 : 0];
        span_2_0_cast_reg_2632 <= span_2_0_cast_fu_516_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        img_0_addr_1_reg_2806 <= zext_ln13_3_reg_2698;
        img_0_addr_reg_2794 <= zext_ln13_reg_2675;
        img_1_addr_1_reg_2812 <= zext_ln13_3_reg_2698;
        img_1_addr_reg_2800 <= zext_ln13_reg_2675;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        img_0_addr_2_reg_3101 <= zext_ln13_5_reg_2982;
        img_0_addr_3_reg_3113 <= zext_ln13_7_reg_3005;
        img_1_addr_2_reg_3107 <= zext_ln13_5_reg_2982;
        img_1_addr_3_reg_3119 <= zext_ln13_7_reg_3005;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        img_0_load_3_reg_2904 <= img_0_q1;
        img_1_load_3_reg_2909 <= img_1_q1;
        real_0_load_3_reg_2882 <= real_0_q1;
        real_1_load_3_reg_2887 <= real_1_q1;
        tmp_10_reg_2892 <= tmp_10_fu_1278_p4;
        tmp_11_reg_2898 <= tmp_11_fu_1323_p4;
        tmp_12_reg_2914 <= tmp_12_fu_1366_p4;
        tmp_9_reg_2876 <= tmp_9_fu_1235_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state59)) begin
        img_0_load_7_reg_3217 <= img_0_q0;
        img_1_load_7_reg_3222 <= img_1_q0;
        real_0_load_7_reg_3195 <= real_0_q0;
        real_1_load_7_reg_3200 <= real_1_q0;
        tmp_21_1_reg_3189 <= tmp_21_1_fu_2284_p4;
        tmp_24_1_reg_3205 <= tmp_24_1_fu_2327_p4;
        tmp_27_1_reg_3211 <= tmp_27_1_fu_2372_p4;
        tmp_30_1_reg_3227 <= tmp_30_1_fu_2415_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        lshr_ln13_2_reg_2747 <= {{or_ln10_fu_623_p2[31:9]}};
        lshr_ln_reg_2726 <= {{xor_ln11_fu_628_p2[31:9]}};
        or_ln10_reg_2716 <= or_ln10_fu_623_p2;
        shl_ln13_1_reg_2754[6] <= shl_ln13_1_fu_706_p3[6];
        shl_ln_reg_2731[6] <= shl_ln_fu_643_p3[6];
        tmp_2_reg_2741 <= tmp_2_fu_686_p4;
        tmp_4_reg_2775 <= or_ln10_fu_623_p2[32'd9];
        tmp_5_reg_2769 <= tmp_5_fu_749_p4;
        xor_ln11_reg_2721 <= xor_ln11_fu_628_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        lshr_ln13_4_reg_3033 <= {{xor_ln11_1_fu_1679_p2[31:9]}};
        lshr_ln13_6_reg_3054 <= {{or_ln10_1_fu_1674_p2[31:9]}};
        or_ln10_1_reg_3023 <= or_ln10_1_fu_1674_p2;
        shl_ln13_2_reg_3038[6] <= shl_ln13_2_fu_1694_p3[6];
        shl_ln13_3_reg_3061[6] <= shl_ln13_3_fu_1757_p3[6];
        tmp_18_reg_3082 <= or_ln10_1_fu_1674_p2[32'd9];
        tmp_2_1_reg_3048 <= tmp_2_1_fu_1737_p4;
        tmp_5_1_reg_3076 <= tmp_5_1_fu_1800_p4;
        xor_ln11_1_reg_3028 <= xor_ln11_1_fu_1679_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_fu_1161_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state22))) begin
        lshr_ln1_reg_2845 <= {{shl_ln21_fu_1149_p2[9:8]}};
        tmp_8_reg_2851 <= shl_ln21_fu_1149_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln22_1_fu_2210_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state56))) begin
        lshr_ln23_2_reg_3158 <= {{shl_ln21_1_fu_2198_p2[9:8]}};
        tmp_20_reg_3164 <= shl_ln21_1_fu_2198_p2[32'd7];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state53) | (1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_459 <= grp_fu_422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state43) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state9))) begin
        reg_463 <= grp_fu_426_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state64) | (1'b1 == ap_CS_fsm_state30))) begin
        reg_477 <= grp_fu_430_p2;
        reg_482 <= grp_fu_434_p2;
        reg_487 <= grp_fu_438_p2;
        reg_492 <= grp_fu_442_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        tmp_11_1_reg_3125 <= tmp_11_1_fu_2005_p4;
        tmp_14_1_reg_3131 <= tmp_14_1_fu_2048_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_7_reg_2824 <= tmp_7_fu_997_p4;
        tmp_s_reg_2818 <= tmp_s_fu_954_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln9_fu_534_p2 == 1'd1) & (icmp_ln8_fu_510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        trunc_ln10_1_reg_2654 <= trunc_ln10_1_fu_544_p1;
        trunc_ln10_reg_2648 <= trunc_ln10_fu_540_p1;
        xor_ln11_2_reg_2660 <= xor_ln11_2_fu_552_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state36) & (((icmp_ln9_2_fu_1567_p2 == 1'd1) & (icmp_ln9_reg_2644 == 1'd0)) | ((icmp_ln9_2_fu_1567_p2 == 1'd1) & (icmp_ln9_1_fu_1528_p2 == 1'd0))))) begin
        trunc_ln10_5_reg_2955 <= {{span_2_0_fu_150[9:1]}};
        trunc_ln10_7_reg_2961 <= {{span_2_0_fu_150[8:1]}};
        xor_ln11_5_reg_2967 <= xor_ln11_5_fu_1603_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((icmp_ln8_fu_510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln8_fu_510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_422_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_422_opcode = 2'd0;
    end else begin
        grp_fu_422_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_422_p0 = tmp_11_1_reg_3125;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_422_p0 = tmp_2_1_reg_3048;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_422_p0 = reg_477;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_422_p0 = tmp_s_reg_2818;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_422_p0 = tmp_2_reg_2741;
    end else begin
        grp_fu_422_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_422_p1 = tmp_14_1_reg_3131;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_422_p1 = tmp_5_1_reg_3076;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_422_p1 = reg_482;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_422_p1 = tmp_7_reg_2824;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_422_p1 = tmp_5_reg_2769;
    end else begin
        grp_fu_422_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state5))) begin
        grp_fu_426_opcode = 2'd1;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_426_opcode = 2'd0;
    end else begin
        grp_fu_426_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_426_p0 = tmp_11_1_reg_3125;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_426_p0 = tmp_2_1_reg_3048;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_426_p0 = reg_487;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_426_p0 = tmp_s_reg_2818;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_426_p0 = tmp_2_reg_2741;
    end else begin
        grp_fu_426_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state49)) begin
        grp_fu_426_p1 = tmp_14_1_reg_3131;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        grp_fu_426_p1 = tmp_5_1_reg_3076;
    end else if (((1'b1 == ap_CS_fsm_state65) | (1'b1 == ap_CS_fsm_state31))) begin
        grp_fu_426_p1 = reg_492;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_426_p1 = tmp_7_reg_2824;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_426_p1 = tmp_5_reg_2769;
    end else begin
        grp_fu_426_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_430_p0 = tmp_21_1_reg_3189;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_430_p0 = tmp_9_reg_2876;
    end else begin
        grp_fu_430_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_430_p1 = tmp_24_1_reg_3205;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_430_p1 = tmp_10_reg_2892;
    end else begin
        grp_fu_430_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_434_p0 = tmp_27_1_reg_3211;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_434_p0 = tmp_11_reg_2898;
    end else begin
        grp_fu_434_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_434_p1 = tmp_30_1_reg_3227;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_434_p1 = tmp_12_reg_2914;
    end else begin
        grp_fu_434_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_438_p0 = tmp_21_1_reg_3189;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_438_p0 = tmp_9_reg_2876;
    end else begin
        grp_fu_438_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_438_p1 = tmp_30_1_reg_3227;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_438_p1 = tmp_12_reg_2914;
    end else begin
        grp_fu_438_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_442_p0 = tmp_27_1_reg_3211;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_442_p0 = tmp_11_reg_2898;
    end else begin
        grp_fu_442_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state60)) begin
        grp_fu_442_p1 = tmp_24_1_reg_3205;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        grp_fu_442_p1 = tmp_10_reg_2892;
    end else begin
        grp_fu_442_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        img_0_address0 = img_0_addr_3_reg_3113;
    end else if ((1'b1 == ap_CS_fsm_state55)) begin
        img_0_address0 = img_0_addr_2_reg_3101;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        img_0_address0 = zext_ln13_5_reg_2982;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        img_0_address0 = img_0_addr_reg_2794;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        img_0_address0 = img_0_addr_1_reg_2806;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_0_address0 = zext_ln13_3_reg_2698;
    end else begin
        img_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        img_0_address1 = img_0_addr_2_reg_3101;
    end else if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state54))) begin
        img_0_address1 = img_0_addr_3_reg_3113;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        img_0_address1 = zext_ln13_7_reg_3005;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        img_0_address1 = img_0_addr_1_reg_2806;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        img_0_address1 = img_0_addr_reg_2794;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_0_address1 = zext_ln13_reg_2675;
    end else begin
        img_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state55) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12))) begin
        img_0_ce0 = 1'b1;
    end else begin
        img_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state12))) begin
        img_0_ce1 = 1'b1;
    end else begin
        img_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        img_0_d0 = or_ln25_1_fu_1411_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        img_0_d0 = or_ln19_1_fu_1105_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        img_0_d0 = or_ln18_1_fu_1041_p2;
    end else begin
        img_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        img_0_d1 = or_ln25_3_fu_2461_p2;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        img_0_d1 = or_ln19_3_fu_2154_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        img_0_d1 = or_ln18_3_fu_2091_p2;
    end else begin
        img_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln22_reg_2841 == 1'd0) & (tmp_4_reg_2775 == 1'd0) & (icmp_ln9_reg_2644 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | ((tmp_6_reg_2784 == 1'd0) & (1'b1 == ap_CS_fsm_state22)) | ((tmp_4_reg_2775 == 1'd0) & (1'b1 == ap_CS_fsm_state20)))) begin
        img_0_we0 = 1'b1;
    end else begin
        img_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln22_1_reg_3154 == 1'd0) & (tmp_18_reg_3082 == 1'd0) & (icmp_ln9_2_reg_2951 == 1'd1) & (1'b1 == ap_CS_fsm_state70)) | ((tmp_19_reg_3091 == 1'd0) & (1'b1 == ap_CS_fsm_state56)) | ((tmp_18_reg_3082 == 1'd0) & (1'b1 == ap_CS_fsm_state54)))) begin
        img_0_we1 = 1'b1;
    end else begin
        img_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        img_1_address0 = img_1_addr_3_reg_3119;
    end else if ((1'b1 == ap_CS_fsm_state56)) begin
        img_1_address0 = img_1_addr_2_reg_3107;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        img_1_address0 = zext_ln13_5_reg_2982;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        img_1_address0 = img_1_addr_reg_2800;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20))) begin
        img_1_address0 = img_1_addr_1_reg_2812;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_1_address0 = zext_ln13_3_reg_2698;
    end else begin
        img_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state57)) begin
        img_1_address1 = img_1_addr_2_reg_3107;
    end else if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state54))) begin
        img_1_address1 = img_1_addr_3_reg_3119;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        img_1_address1 = zext_ln13_7_reg_3005;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        img_1_address1 = img_1_addr_1_reg_2812;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        img_1_address1 = img_1_addr_reg_2800;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        img_1_address1 = zext_ln13_reg_2675;
    end else begin
        img_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state56) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state12))) begin
        img_1_ce0 = 1'b1;
    end else begin
        img_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state57) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state54) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state12))) begin
        img_1_ce1 = 1'b1;
    end else begin
        img_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state56)) begin
        img_1_d0 = or_ln19_2_fu_2191_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        img_1_d0 = or_ln25_fu_1469_p2;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        img_1_d0 = or_ln18_fu_1064_p2;
    end else begin
        img_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        img_1_d1 = or_ln25_2_fu_2519_p2;
    end else if ((1'b1 == ap_CS_fsm_state54)) begin
        img_1_d1 = or_ln18_2_fu_2113_p2;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        img_1_d1 = or_ln19_fu_1142_p2;
    end else begin
        img_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_19_reg_3091 == 1'd1) & (1'b1 == ap_CS_fsm_state56)) | ((tmp_4_reg_2775 == 1'd1) & (1'b1 == ap_CS_fsm_state20)) | ((icmp_ln22_reg_2841 == 1'd0) & (tmp_4_reg_2775 == 1'd1) & (icmp_ln9_reg_2644 == 1'd1) & (1'b1 == ap_CS_fsm_state36)))) begin
        img_1_we0 = 1'b1;
    end else begin
        img_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_18_reg_3082 == 1'd1) & (1'b1 == ap_CS_fsm_state54)) | ((tmp_6_reg_2784 == 1'd1) & (1'b1 == ap_CS_fsm_state22)) | ((icmp_ln22_1_reg_3154 == 1'd0) & (tmp_18_reg_3082 == 1'd1) & (icmp_ln9_2_reg_2951 == 1'd1) & (1'b1 == ap_CS_fsm_state70)))) begin
        img_1_we1 = 1'b1;
    end else begin
        img_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        img_twid_0_address0 = zext_ln23_3_fu_2234_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        img_twid_0_address0 = zext_ln23_fu_1185_p1;
    end else begin
        img_twid_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state24))) begin
        img_twid_0_ce0 = 1'b1;
    end else begin
        img_twid_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        img_twid_1_address0 = zext_ln23_3_fu_2234_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        img_twid_1_address0 = zext_ln23_fu_1185_p1;
    end else begin
        img_twid_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state24))) begin
        img_twid_1_ce0 = 1'b1;
    end else begin
        img_twid_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        real_0_address0 = real_0_addr_3_reg_3011;
    end else if ((1'b1 == ap_CS_fsm_state45)) begin
        real_0_address0 = real_0_addr_2_reg_2988;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        real_0_address0 = zext_ln13_5_fu_1654_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        real_0_address0 = real_0_addr_reg_2681;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state10))) begin
        real_0_address0 = real_0_addr_1_reg_2704;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        real_0_address0 = zext_ln13_3_fu_617_p1;
    end else begin
        real_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        real_0_address1 = real_0_addr_2_reg_2988;
    end else if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state44))) begin
        real_0_address1 = real_0_addr_3_reg_3011;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        real_0_address1 = zext_ln13_7_fu_1668_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        real_0_address1 = real_0_addr_1_reg_2704;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        real_0_address1 = real_0_addr_reg_2681;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        real_0_address1 = zext_ln13_fu_603_p1;
    end else begin
        real_0_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state45) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        real_0_ce0 = 1'b1;
    end else begin
        real_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state3))) begin
        real_0_ce1 = 1'b1;
    end else begin
        real_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        real_0_d0 = or_ln27_1_fu_1448_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        real_0_d0 = or_ln15_1_fu_876_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        real_0_d0 = or_ln14_1_fu_805_p2;
    end else begin
        real_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        real_0_d1 = or_ln27_3_fu_2497_p2;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        real_0_d1 = or_ln15_3_fu_1927_p2;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        real_0_d1 = or_ln14_3_fu_1856_p2;
    end else begin
        real_0_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln22_reg_2841 == 1'd0) & (tmp_4_reg_2775 == 1'd0) & (icmp_ln9_reg_2644 == 1'd1) & (1'b1 == ap_CS_fsm_state36)) | ((tmp_6_reg_2784 == 1'd0) & (1'b1 == ap_CS_fsm_state12)) | ((tmp_4_reg_2775 == 1'd0) & (1'b1 == ap_CS_fsm_state10)))) begin
        real_0_we0 = 1'b1;
    end else begin
        real_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln22_1_reg_3154 == 1'd0) & (tmp_18_reg_3082 == 1'd0) & (icmp_ln9_2_reg_2951 == 1'd1) & (1'b1 == ap_CS_fsm_state70)) | ((tmp_19_reg_3091 == 1'd0) & (1'b1 == ap_CS_fsm_state46)) | ((tmp_18_reg_3082 == 1'd0) & (1'b1 == ap_CS_fsm_state44)))) begin
        real_0_we1 = 1'b1;
    end else begin
        real_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        real_1_address0 = real_1_addr_3_reg_3017;
    end else if ((1'b1 == ap_CS_fsm_state46)) begin
        real_1_address0 = real_1_addr_2_reg_2994;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        real_1_address0 = zext_ln13_5_fu_1654_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        real_1_address0 = real_1_addr_reg_2687;
    end else if (((1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state10))) begin
        real_1_address0 = real_1_addr_1_reg_2710;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        real_1_address0 = zext_ln13_3_fu_617_p1;
    end else begin
        real_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        real_1_address1 = real_1_addr_2_reg_2994;
    end else if (((1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state44))) begin
        real_1_address1 = real_1_addr_3_reg_3017;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        real_1_address1 = zext_ln13_7_fu_1668_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        real_1_address1 = real_1_addr_1_reg_2710;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        real_1_address1 = real_1_addr_reg_2687;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        real_1_address1 = zext_ln13_fu_603_p1;
    end else begin
        real_1_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state46) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state3))) begin
        real_1_ce0 = 1'b1;
    end else begin
        real_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state70) | (1'b1 == ap_CS_fsm_state44) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state3))) begin
        real_1_ce1 = 1'b1;
    end else begin
        real_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state46)) begin
        real_1_d0 = or_ln15_2_fu_1964_p2;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        real_1_d0 = or_ln27_fu_1506_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        real_1_d0 = or_ln14_fu_828_p2;
    end else begin
        real_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state70)) begin
        real_1_d1 = or_ln27_2_fu_2555_p2;
    end else if ((1'b1 == ap_CS_fsm_state44)) begin
        real_1_d1 = or_ln14_2_fu_1879_p2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        real_1_d1 = or_ln15_fu_913_p2;
    end else begin
        real_1_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((tmp_19_reg_3091 == 1'd1) & (1'b1 == ap_CS_fsm_state46)) | ((tmp_4_reg_2775 == 1'd1) & (1'b1 == ap_CS_fsm_state10)) | ((icmp_ln22_reg_2841 == 1'd0) & (tmp_4_reg_2775 == 1'd1) & (icmp_ln9_reg_2644 == 1'd1) & (1'b1 == ap_CS_fsm_state36)))) begin
        real_1_we0 = 1'b1;
    end else begin
        real_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((tmp_18_reg_3082 == 1'd1) & (1'b1 == ap_CS_fsm_state44)) | ((tmp_6_reg_2784 == 1'd1) & (1'b1 == ap_CS_fsm_state12)) | ((icmp_ln22_1_reg_3154 == 1'd0) & (tmp_18_reg_3082 == 1'd1) & (icmp_ln9_2_reg_2951 == 1'd1) & (1'b1 == ap_CS_fsm_state70)))) begin
        real_1_we1 = 1'b1;
    end else begin
        real_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        real_twid_0_address0 = zext_ln23_3_fu_2234_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        real_twid_0_address0 = zext_ln23_fu_1185_p1;
    end else begin
        real_twid_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state24))) begin
        real_twid_0_ce0 = 1'b1;
    end else begin
        real_twid_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state58)) begin
        real_twid_1_address0 = zext_ln23_3_fu_2234_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        real_twid_1_address0 = zext_ln23_fu_1185_p1;
    end else begin
        real_twid_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state58) | (1'b1 == ap_CS_fsm_state24))) begin
        real_twid_1_ce0 = 1'b1;
    end else begin
        real_twid_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln8_fu_510_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln9_fu_534_p2 == 1'd1) & (icmp_ln8_fu_510_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((tmp_6_fu_835_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((tmp_6_reg_2784 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            if (((icmp_ln22_fu_1161_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state22))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((1'b1 == ap_CS_fsm_state36) & (((icmp_ln9_2_fu_1567_p2 == 1'd1) & (icmp_ln9_reg_2644 == 1'd0)) | ((icmp_ln9_2_fu_1567_p2 == 1'd1) & (icmp_ln9_1_fu_1528_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else if (((1'b1 == ap_CS_fsm_state36) & (((icmp_ln9_2_fu_1567_p2 == 1'd0) & (icmp_ln9_reg_2644 == 1'd0)) | ((icmp_ln9_2_fu_1567_p2 == 1'd0) & (icmp_ln9_1_fu_1528_p2 == 1'd0))))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            if (((tmp_19_fu_1886_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            if (((tmp_19_reg_3091 == 1'd1) & (1'b1 == ap_CS_fsm_state54))) begin
                ap_NS_fsm = ap_ST_fsm_state57;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state55;
            end
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            if (((icmp_ln22_1_fu_2210_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state56))) begin
                ap_NS_fsm = ap_ST_fsm_state70;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state58;
            end
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            if (((1'b1 == ap_CS_fsm_state70) & ((icmp_ln9_3_fu_2577_p2 == 1'd0) | (icmp_ln9_2_reg_2951 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln8_fu_2597_p2 = (log_0_fu_146 + 4'd2);

assign add_ln9_1_fu_2562_p2 = (or_ln10_1_reg_3023 + 32'd1);

assign add_ln9_fu_1513_p2 = (or_ln10_reg_2716 + 32'd1);

assign and_ln11_1_fu_1631_p2 = (xor_ln11_5_reg_2967 & trunc_ln10_9_fu_1617_p1);

assign and_ln11_fu_580_p2 = (xor_ln11_2_reg_2660 & trunc_ln10_4_fu_566_p1);

assign and_ln14_1_fu_789_p2 = (xor_ln14_fu_783_p2 & reg_449);

assign and_ln14_2_fu_1863_p2 = (xor_ln14_1_fu_1834_p2 & reg_454);

assign and_ln14_3_fu_1840_p2 = (xor_ln14_1_fu_1834_p2 & reg_449);

assign and_ln14_fu_812_p2 = (xor_ln14_fu_783_p2 & reg_454);

assign and_ln15_1_fu_861_p2 = (xor_ln15_1_fu_855_p2 & real_0_q1);

assign and_ln15_2_fu_1949_p2 = (xor_ln15_2_fu_1943_p2 & real_1_q1);

assign and_ln15_3_fu_1912_p2 = (xor_ln15_3_fu_1906_p2 & real_0_q0);

assign and_ln15_fu_898_p2 = (xor_ln15_fu_892_p2 & real_1_q0);

assign and_ln18_1_fu_1025_p2 = (xor_ln18_fu_1019_p2 & reg_467);

assign and_ln18_2_fu_2098_p2 = (xor_ln18_1_fu_2070_p2 & reg_472);

assign and_ln18_3_fu_2076_p2 = (xor_ln18_1_fu_2070_p2 & reg_467);

assign and_ln18_fu_1048_p2 = (xor_ln18_fu_1019_p2 & reg_472);

assign and_ln19_1_fu_1090_p2 = (xor_ln19_1_fu_1084_p2 & img_0_q1);

assign and_ln19_2_fu_2176_p2 = (xor_ln19_2_fu_2170_p2 & img_1_q1);

assign and_ln19_3_fu_2139_p2 = (xor_ln19_3_fu_2133_p2 & img_0_q0);

assign and_ln19_fu_1127_p2 = (xor_ln19_fu_1121_p2 & img_1_q0);

assign and_ln25_1_fu_1397_p2 = (xor_ln25_fu_1391_p2 & img_0_load_3_reg_2904);

assign and_ln25_2_fu_2504_p2 = (xor_ln25_1_fu_2440_p2 & img_1_load_7_reg_3222);

assign and_ln25_3_fu_2446_p2 = (xor_ln25_1_fu_2440_p2 & img_0_load_7_reg_3217);

assign and_ln25_fu_1455_p2 = (xor_ln25_fu_1391_p2 & img_1_load_3_reg_2909);

assign and_ln27_1_fu_1433_p2 = (xor_ln27_1_fu_1427_p2 & real_0_load_3_reg_2882);

assign and_ln27_2_fu_2541_p2 = (xor_ln27_2_fu_2535_p2 & real_1_load_7_reg_3200);

assign and_ln27_3_fu_2483_p2 = (xor_ln27_3_fu_2477_p2 & real_0_load_7_reg_3195);

assign and_ln27_fu_1491_p2 = (xor_ln27_fu_1485_p2 & real_1_load_3_reg_2887);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state53 = ap_CS_fsm[32'd52];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd53];

assign ap_CS_fsm_state55 = ap_CS_fsm[32'd54];

assign ap_CS_fsm_state56 = ap_CS_fsm[32'd55];

assign ap_CS_fsm_state57 = ap_CS_fsm[32'd56];

assign ap_CS_fsm_state58 = ap_CS_fsm[32'd57];

assign ap_CS_fsm_state59 = ap_CS_fsm[32'd58];

assign ap_CS_fsm_state60 = ap_CS_fsm[32'd59];

assign ap_CS_fsm_state64 = ap_CS_fsm[32'd63];

assign ap_CS_fsm_state65 = ap_CS_fsm[32'd64];

assign ap_CS_fsm_state69 = ap_CS_fsm[32'd68];

assign ap_CS_fsm_state70 = ap_CS_fsm[32'd69];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign bitcast_ln14_1_fu_1821_p1 = reg_463;

assign bitcast_ln14_fu_770_p1 = reg_463;

assign bitcast_ln15_1_fu_1893_p1 = reg_459;

assign bitcast_ln15_fu_842_p1 = reg_459;

assign bitcast_ln18_1_fu_2057_p1 = grp_fu_426_p2;

assign bitcast_ln18_fu_1006_p1 = reg_463;

assign bitcast_ln19_1_fu_2120_p1 = reg_459;

assign bitcast_ln19_fu_1071_p1 = reg_459;

assign bitcast_ln25_1_fu_2428_p1 = add_1_reg_3233;

assign bitcast_ln25_fu_1375_p1 = grp_fu_426_p2;

assign bitcast_ln27_1_fu_2424_p1 = grp_fu_422_p2;

assign bitcast_ln27_fu_1379_p1 = temp_2_reg_2920;

assign icmp_ln22_1_fu_2210_p2 = ((trunc_ln21_2_fu_2202_p1 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_1161_p2 = ((trunc_ln21_fu_1153_p1 == 10'd0) ? 1'b1 : 1'b0);

assign icmp_ln8_fu_510_p2 = ((log_0_fu_146 == 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln9_1_fu_1528_p2 = (($signed(tmp_13_fu_1518_p4) < $signed(22'd1)) ? 1'b1 : 1'b0);

assign icmp_ln9_2_fu_1567_p2 = (($signed(tmp_15_fu_1557_p4) < $signed(17'd1)) ? 1'b1 : 1'b0);

assign icmp_ln9_3_fu_2577_p2 = (($signed(tmp_21_fu_2567_p4) < $signed(22'd1)) ? 1'b1 : 1'b0);

assign icmp_ln9_fu_534_p2 = (($signed(tmp_fu_524_p4) < $signed(18'd1)) ? 1'b1 : 1'b0);

assign log_0_cast_fu_520_p1 = log_0_fu_146;

assign lshr_ln13_10_fu_1786_p2 = real_1_q1 >> zext_ln13_11_fu_1782_p1;

assign lshr_ln13_1_fu_672_p2 = real_1_q1 >> zext_ln13_2_fu_668_p1;

assign lshr_ln13_3_fu_717_p2 = real_0_q0 >> zext_ln13_4_fu_713_p1;

assign lshr_ln13_5_fu_735_p2 = real_1_q0 >> zext_ln13_6_fu_731_p1;

assign lshr_ln13_7_fu_1705_p2 = real_0_q0 >> zext_ln13_8_fu_1701_p1;

assign lshr_ln13_8_fu_1723_p2 = real_1_q0 >> zext_ln13_9_fu_1719_p1;

assign lshr_ln13_9_fu_1768_p2 = real_0_q1 >> zext_ln13_10_fu_1764_p1;

assign lshr_ln13_fu_654_p2 = real_0_q1 >> zext_ln13_1_fu_650_p1;

assign lshr_ln17_1_fu_940_p2 = img_1_q1 >> zext_ln17_1_fu_937_p1;

assign lshr_ln17_2_fu_966_p2 = img_0_q0 >> zext_ln17_2_fu_963_p1;

assign lshr_ln17_3_fu_983_p2 = img_1_q0 >> zext_ln17_3_fu_980_p1;

assign lshr_ln17_4_fu_1974_p2 = img_0_q0 >> zext_ln17_4_fu_1971_p1;

assign lshr_ln17_5_fu_1991_p2 = img_1_q0 >> zext_ln17_5_fu_1988_p1;

assign lshr_ln17_6_fu_2017_p2 = img_0_q1 >> zext_ln17_6_fu_2014_p1;

assign lshr_ln17_7_fu_2034_p2 = img_1_q1 >> zext_ln17_7_fu_2031_p1;

assign lshr_ln17_fu_923_p2 = img_0_q1 >> zext_ln17_fu_920_p1;

assign lshr_ln23_1_fu_1221_p2 = real_twid_1_q0 >> zext_ln23_2_fu_1217_p1;

assign lshr_ln23_3_fu_1247_p2 = real_0_q1 >> zext_ln23_4_fu_1244_p1;

assign lshr_ln23_4_fu_1264_p2 = real_1_q1 >> zext_ln23_5_fu_1261_p1;

assign lshr_ln23_5_fu_2252_p2 = real_twid_0_q0 >> zext_ln23_6_fu_2248_p1;

assign lshr_ln23_6_fu_2270_p2 = real_twid_1_q0 >> zext_ln23_7_fu_2266_p1;

assign lshr_ln23_7_fu_2296_p2 = real_0_q0 >> zext_ln23_8_fu_2293_p1;

assign lshr_ln23_8_fu_2313_p2 = real_1_q0 >> zext_ln23_9_fu_2310_p1;

assign lshr_ln23_fu_1203_p2 = real_twid_0_q0 >> zext_ln23_1_fu_1199_p1;

assign lshr_ln24_1_fu_1309_p2 = img_twid_1_q0 >> zext_ln24_1_fu_1305_p1;

assign lshr_ln24_2_fu_1335_p2 = img_0_q1 >> zext_ln24_2_fu_1332_p1;

assign lshr_ln24_3_fu_1352_p2 = img_1_q1 >> zext_ln24_3_fu_1349_p1;

assign lshr_ln24_4_fu_2340_p2 = img_twid_0_q0 >> zext_ln24_4_fu_2336_p1;

assign lshr_ln24_5_fu_2358_p2 = img_twid_1_q0 >> zext_ln24_5_fu_2354_p1;

assign lshr_ln24_6_fu_2384_p2 = img_0_q0 >> zext_ln24_6_fu_2381_p1;

assign lshr_ln24_7_fu_2401_p2 = img_1_q0 >> zext_ln24_7_fu_2398_p1;

assign lshr_ln24_fu_1291_p2 = img_twid_0_q0 >> zext_ln24_fu_1287_p1;

assign or_ln10_1_fu_1674_p2 = (sext_ln8_reg_2939 | odd_1_1_reg_412);

assign or_ln10_fu_623_p2 = (span_2_0_cast_reg_2632 | odd_1_0_reg_402);

assign or_ln11_1_fu_575_p2 = (trunc_ln10_reg_2648 | trunc_ln10_2_fu_558_p1);

assign or_ln11_2_fu_1621_p2 = (trunc_ln10_8_fu_1613_p1 | trunc_ln10_7_reg_2961);

assign or_ln11_3_fu_1626_p2 = (trunc_ln10_6_fu_1609_p1 | trunc_ln10_5_reg_2955);

assign or_ln11_fu_570_p2 = (trunc_ln10_3_fu_562_p1 | trunc_ln10_1_reg_2654);

assign or_ln14_1_fu_805_p2 = (shl_ln14_2_fu_799_p2 | and_ln14_1_fu_789_p2);

assign or_ln14_2_fu_1879_p2 = (shl_ln14_4_fu_1873_p2 | and_ln14_2_fu_1863_p2);

assign or_ln14_3_fu_1856_p2 = (shl_ln14_5_fu_1850_p2 | and_ln14_3_fu_1840_p2);

assign or_ln14_fu_828_p2 = (shl_ln14_1_fu_822_p2 | and_ln14_fu_812_p2);

assign or_ln15_1_fu_876_p2 = (shl_ln15_3_fu_870_p2 | and_ln15_1_fu_861_p2);

assign or_ln15_2_fu_1964_p2 = (shl_ln15_5_fu_1958_p2 | and_ln15_2_fu_1949_p2);

assign or_ln15_3_fu_1927_p2 = (shl_ln15_7_fu_1921_p2 | and_ln15_3_fu_1912_p2);

assign or_ln15_fu_913_p2 = (shl_ln15_1_fu_907_p2 | and_ln15_fu_898_p2);

assign or_ln18_1_fu_1041_p2 = (shl_ln18_2_fu_1035_p2 | and_ln18_1_fu_1025_p2);

assign or_ln18_2_fu_2113_p2 = (shl_ln18_4_fu_2107_p2 | and_ln18_2_fu_2098_p2);

assign or_ln18_3_fu_2091_p2 = (shl_ln18_5_fu_2085_p2 | and_ln18_3_fu_2076_p2);

assign or_ln18_fu_1064_p2 = (shl_ln18_1_fu_1058_p2 | and_ln18_fu_1048_p2);

assign or_ln19_1_fu_1105_p2 = (shl_ln19_3_fu_1099_p2 | and_ln19_1_fu_1090_p2);

assign or_ln19_2_fu_2191_p2 = (shl_ln19_5_fu_2185_p2 | and_ln19_2_fu_2176_p2);

assign or_ln19_3_fu_2154_p2 = (shl_ln19_7_fu_2148_p2 | and_ln19_3_fu_2139_p2);

assign or_ln19_fu_1142_p2 = (shl_ln19_1_fu_1136_p2 | and_ln19_fu_1127_p2);

assign or_ln25_1_fu_1411_p2 = (shl_ln25_2_fu_1405_p2 | and_ln25_1_fu_1397_p2);

assign or_ln25_2_fu_2519_p2 = (shl_ln25_4_fu_2513_p2 | and_ln25_2_fu_2504_p2);

assign or_ln25_3_fu_2461_p2 = (shl_ln25_5_fu_2455_p2 | and_ln25_3_fu_2446_p2);

assign or_ln25_fu_1469_p2 = (shl_ln25_1_fu_1463_p2 | and_ln25_fu_1455_p2);

assign or_ln27_1_fu_1448_p2 = (shl_ln27_3_fu_1442_p2 | and_ln27_1_fu_1433_p2);

assign or_ln27_2_fu_2555_p2 = (shl_ln27_5_fu_2549_p2 | and_ln27_2_fu_2541_p2);

assign or_ln27_3_fu_2497_p2 = (shl_ln27_7_fu_2491_p2 | and_ln27_3_fu_2483_p2);

assign or_ln27_fu_1506_p2 = (shl_ln27_1_fu_1500_p2 | and_ln27_fu_1491_p2);

assign or_ln8_fu_1548_p2 = (log_0_fu_146 | 4'd1);

assign sext_ln8_1_fu_2593_p1 = $signed(tmp_22_fu_2583_p4);

assign sext_ln8_fu_1544_p1 = $signed(tmp_14_fu_1534_p4);

assign shl_ln13_1_fu_706_p3 = {{tmp_3_reg_2693}, {6'd0}};

assign shl_ln13_2_fu_1694_p3 = {{tmp_16_reg_2977}, {6'd0}};

assign shl_ln13_3_fu_1757_p3 = {{tmp_17_reg_3000}, {6'd0}};

assign shl_ln14_1_fu_822_p2 = zext_ln14_1_fu_818_p1 << zext_ln14_fu_774_p1;

assign shl_ln14_2_fu_799_p2 = zext_ln14_2_fu_795_p1 << zext_ln14_fu_774_p1;

assign shl_ln14_3_fu_1828_p2 = 128'd18446744073709551615 << zext_ln14_3_fu_1825_p1;

assign shl_ln14_4_fu_1873_p2 = zext_ln14_4_fu_1869_p1 << zext_ln14_3_fu_1825_p1;

assign shl_ln14_5_fu_1850_p2 = zext_ln14_5_fu_1846_p1 << zext_ln14_3_fu_1825_p1;

assign shl_ln14_fu_777_p2 = 128'd18446744073709551615 << zext_ln14_fu_774_p1;

assign shl_ln15_1_fu_907_p2 = zext_ln15_1_fu_904_p1 << zext_ln15_fu_883_p1;

assign shl_ln15_2_fu_849_p2 = 128'd18446744073709551615 << zext_ln15_2_fu_846_p1;

assign shl_ln15_3_fu_870_p2 = zext_ln15_3_fu_867_p1 << zext_ln15_2_fu_846_p1;

assign shl_ln15_4_fu_1937_p2 = 128'd18446744073709551615 << zext_ln15_4_fu_1934_p1;

assign shl_ln15_5_fu_1958_p2 = zext_ln15_5_fu_1955_p1 << zext_ln15_4_fu_1934_p1;

assign shl_ln15_6_fu_1900_p2 = 128'd18446744073709551615 << zext_ln15_6_fu_1897_p1;

assign shl_ln15_7_fu_1921_p2 = zext_ln15_7_fu_1918_p1 << zext_ln15_6_fu_1897_p1;

assign shl_ln15_fu_886_p2 = 128'd18446744073709551615 << zext_ln15_fu_883_p1;

assign shl_ln18_1_fu_1058_p2 = zext_ln18_1_fu_1054_p1 << zext_ln18_fu_1010_p1;

assign shl_ln18_2_fu_1035_p2 = zext_ln18_2_fu_1031_p1 << zext_ln18_fu_1010_p1;

assign shl_ln18_3_fu_2064_p2 = 128'd18446744073709551615 << zext_ln18_3_fu_2061_p1;

assign shl_ln18_4_fu_2107_p2 = zext_ln18_4_fu_2104_p1 << zext_ln18_3_fu_2061_p1;

assign shl_ln18_5_fu_2085_p2 = zext_ln18_5_fu_2082_p1 << zext_ln18_3_fu_2061_p1;

assign shl_ln18_fu_1013_p2 = 128'd18446744073709551615 << zext_ln18_fu_1010_p1;

assign shl_ln19_1_fu_1136_p2 = zext_ln19_1_fu_1133_p1 << zext_ln19_fu_1112_p1;

assign shl_ln19_2_fu_1078_p2 = 128'd18446744073709551615 << zext_ln19_2_fu_1075_p1;

assign shl_ln19_3_fu_1099_p2 = zext_ln19_3_fu_1096_p1 << zext_ln19_2_fu_1075_p1;

assign shl_ln19_4_fu_2164_p2 = 128'd18446744073709551615 << zext_ln19_4_fu_2161_p1;

assign shl_ln19_5_fu_2185_p2 = zext_ln19_5_fu_2182_p1 << zext_ln19_4_fu_2161_p1;

assign shl_ln19_6_fu_2127_p2 = 128'd18446744073709551615 << zext_ln19_6_fu_2124_p1;

assign shl_ln19_7_fu_2148_p2 = zext_ln19_7_fu_2145_p1 << zext_ln19_6_fu_2124_p1;

assign shl_ln19_fu_1115_p2 = 128'd18446744073709551615 << zext_ln19_fu_1112_p1;

assign shl_ln1_fu_1192_p3 = {{tmp_8_reg_2851}, {6'd0}};

assign shl_ln21_1_fu_2198_p2 = zext_ln11_1_reg_3086 << zext_ln9_reg_2946;

assign shl_ln21_fu_1149_p2 = zext_ln11_reg_2779 << log_0_cast_reg_2639;

assign shl_ln23_1_fu_2241_p3 = {{tmp_20_reg_3164}, {6'd0}};

assign shl_ln25_1_fu_1463_p2 = zext_ln25_1_fu_1460_p1 << zext_ln25_fu_1382_p1;

assign shl_ln25_2_fu_1405_p2 = zext_ln25_2_fu_1402_p1 << zext_ln25_fu_1382_p1;

assign shl_ln25_3_fu_2434_p2 = 128'd18446744073709551615 << zext_ln25_3_fu_2431_p1;

assign shl_ln25_4_fu_2513_p2 = zext_ln25_4_fu_2509_p1 << zext_ln25_3_fu_2431_p1;

assign shl_ln25_5_fu_2455_p2 = zext_ln25_5_fu_2451_p1 << zext_ln25_3_fu_2431_p1;

assign shl_ln25_fu_1385_p2 = 128'd18446744073709551615 << zext_ln25_fu_1382_p1;

assign shl_ln27_1_fu_1500_p2 = zext_ln27_1_fu_1496_p1 << zext_ln27_fu_1476_p1;

assign shl_ln27_2_fu_1421_p2 = 128'd18446744073709551615 << zext_ln27_2_fu_1418_p1;

assign shl_ln27_3_fu_1442_p2 = zext_ln27_3_fu_1438_p1 << zext_ln27_2_fu_1418_p1;

assign shl_ln27_4_fu_2529_p2 = 128'd18446744073709551615 << zext_ln27_4_fu_2526_p1;

assign shl_ln27_5_fu_2549_p2 = zext_ln27_5_fu_2546_p1 << zext_ln27_4_fu_2526_p1;

assign shl_ln27_6_fu_2471_p2 = 128'd18446744073709551615 << zext_ln27_6_fu_2468_p1;

assign shl_ln27_7_fu_2491_p2 = zext_ln27_7_fu_2488_p1 << zext_ln27_6_fu_2468_p1;

assign shl_ln27_fu_1479_p2 = 128'd18446744073709551615 << zext_ln27_fu_1476_p1;

assign shl_ln_fu_643_p3 = {{tmp_1_reg_2670}, {6'd0}};

assign span_2_0_cast_fu_516_p0 = span_2_0_fu_150;

assign span_2_0_cast_fu_516_p1 = span_2_0_cast_fu_516_p0;

assign tmp_10_fu_1278_p1 = trunc_ln23_2_fu_1253_p1;

assign tmp_10_fu_1278_p2 = trunc_ln23_3_fu_1270_p1;

assign tmp_11_1_fu_2005_p1 = trunc_ln17_4_fu_1980_p1;

assign tmp_11_1_fu_2005_p2 = trunc_ln17_5_fu_1997_p1;

assign tmp_11_fu_1323_p1 = trunc_ln24_fu_1297_p1;

assign tmp_11_fu_1323_p2 = trunc_ln24_1_fu_1315_p1;

assign tmp_12_fu_1366_p1 = trunc_ln24_2_fu_1341_p1;

assign tmp_12_fu_1366_p2 = trunc_ln24_3_fu_1358_p1;

assign tmp_13_fu_1518_p4 = {{add_ln9_fu_1513_p2[31:10]}};

assign tmp_14_1_fu_2048_p1 = trunc_ln17_6_fu_2023_p1;

assign tmp_14_1_fu_2048_p2 = trunc_ln17_7_fu_2040_p1;

assign tmp_14_fu_1534_p4 = {{span_2_0_fu_150[27:1]}};

assign tmp_15_fu_1557_p4 = {{span_2_0_fu_150[27:11]}};

assign tmp_19_fu_1886_p3 = xor_ln11_1_reg_3028[32'd9];

assign tmp_21_1_fu_2284_p1 = trunc_ln23_4_fu_2258_p1;

assign tmp_21_1_fu_2284_p2 = trunc_ln23_5_fu_2276_p1;

assign tmp_21_fu_2567_p4 = {{add_ln9_1_fu_2562_p2[31:10]}};

assign tmp_22_fu_2583_p4 = {{span_2_0_fu_150[27:2]}};

assign tmp_24_1_fu_2327_p1 = trunc_ln23_6_fu_2302_p1;

assign tmp_24_1_fu_2327_p2 = trunc_ln23_7_fu_2319_p1;

assign tmp_27_1_fu_2372_p1 = trunc_ln24_4_fu_2346_p1;

assign tmp_27_1_fu_2372_p2 = trunc_ln24_5_fu_2364_p1;

assign tmp_2_1_fu_1737_p1 = trunc_ln13_4_fu_1711_p1;

assign tmp_2_1_fu_1737_p2 = trunc_ln13_5_fu_1729_p1;

assign tmp_2_1_fu_1737_p3 = {{xor_ln11_1_fu_1679_p2[31:9]}};

assign tmp_2_fu_686_p1 = trunc_ln13_fu_660_p1;

assign tmp_2_fu_686_p2 = trunc_ln13_1_fu_678_p1;

assign tmp_2_fu_686_p3 = {{xor_ln11_fu_628_p2[31:9]}};

assign tmp_30_1_fu_2415_p1 = trunc_ln24_6_fu_2390_p1;

assign tmp_30_1_fu_2415_p2 = trunc_ln24_7_fu_2407_p1;

assign tmp_5_1_fu_1800_p1 = trunc_ln13_6_fu_1774_p1;

assign tmp_5_1_fu_1800_p2 = trunc_ln13_7_fu_1792_p1;

assign tmp_5_1_fu_1800_p3 = {{or_ln10_1_fu_1674_p2[31:9]}};

assign tmp_5_fu_749_p1 = trunc_ln13_2_fu_723_p1;

assign tmp_5_fu_749_p2 = trunc_ln13_3_fu_741_p1;

assign tmp_5_fu_749_p3 = {{or_ln10_fu_623_p2[31:9]}};

assign tmp_6_fu_835_p3 = xor_ln11_reg_2721[32'd9];

assign tmp_7_fu_997_p1 = trunc_ln17_2_fu_972_p1;

assign tmp_7_fu_997_p2 = trunc_ln17_3_fu_989_p1;

assign tmp_9_fu_1235_p1 = trunc_ln23_fu_1209_p1;

assign tmp_9_fu_1235_p2 = trunc_ln23_1_fu_1227_p1;

assign tmp_fu_524_p1 = span_2_0_fu_150;

assign tmp_fu_524_p4 = {{tmp_fu_524_p1[27:10]}};

assign tmp_s_fu_954_p1 = trunc_ln17_fu_929_p1;

assign tmp_s_fu_954_p2 = trunc_ln17_1_fu_946_p1;

assign trunc_ln10_1_fu_544_p0 = span_2_0_fu_150;

assign trunc_ln10_1_fu_544_p1 = trunc_ln10_1_fu_544_p0[7:0];

assign trunc_ln10_2_fu_558_p1 = odd_1_0_reg_402[8:0];

assign trunc_ln10_3_fu_562_p1 = odd_1_0_reg_402[7:0];

assign trunc_ln10_4_fu_566_p1 = odd_1_0_reg_402[9:0];

assign trunc_ln10_6_fu_1609_p1 = odd_1_1_reg_412[8:0];

assign trunc_ln10_8_fu_1613_p1 = odd_1_1_reg_412[7:0];

assign trunc_ln10_9_fu_1617_p1 = odd_1_1_reg_412[9:0];

assign trunc_ln10_fu_540_p0 = span_2_0_fu_150;

assign trunc_ln10_fu_540_p1 = trunc_ln10_fu_540_p0[8:0];

assign trunc_ln11_5_fu_1593_p4 = {{span_2_0_fu_150[10:1]}};

assign trunc_ln11_fu_548_p0 = span_2_0_fu_150;

assign trunc_ln11_fu_548_p1 = trunc_ln11_fu_548_p0[9:0];

assign trunc_ln13_1_fu_678_p1 = lshr_ln13_1_fu_672_p2[63:0];

assign trunc_ln13_2_fu_723_p1 = lshr_ln13_3_fu_717_p2[63:0];

assign trunc_ln13_3_fu_741_p1 = lshr_ln13_5_fu_735_p2[63:0];

assign trunc_ln13_4_fu_1711_p1 = lshr_ln13_7_fu_1705_p2[63:0];

assign trunc_ln13_5_fu_1729_p1 = lshr_ln13_8_fu_1723_p2[63:0];

assign trunc_ln13_6_fu_1774_p1 = lshr_ln13_9_fu_1768_p2[63:0];

assign trunc_ln13_7_fu_1792_p1 = lshr_ln13_10_fu_1786_p2[63:0];

assign trunc_ln13_fu_660_p1 = lshr_ln13_fu_654_p2[63:0];

assign trunc_ln17_1_fu_946_p1 = lshr_ln17_1_fu_940_p2[63:0];

assign trunc_ln17_2_fu_972_p1 = lshr_ln17_2_fu_966_p2[63:0];

assign trunc_ln17_3_fu_989_p1 = lshr_ln17_3_fu_983_p2[63:0];

assign trunc_ln17_4_fu_1980_p1 = lshr_ln17_4_fu_1974_p2[63:0];

assign trunc_ln17_5_fu_1997_p1 = lshr_ln17_5_fu_1991_p2[63:0];

assign trunc_ln17_6_fu_2023_p1 = lshr_ln17_6_fu_2017_p2[63:0];

assign trunc_ln17_7_fu_2040_p1 = lshr_ln17_7_fu_2034_p2[63:0];

assign trunc_ln17_fu_929_p1 = lshr_ln17_fu_923_p2[63:0];

assign trunc_ln21_1_fu_1157_p1 = shl_ln21_fu_1149_p2[6:0];

assign trunc_ln21_2_fu_2202_p1 = shl_ln21_1_fu_2198_p2[9:0];

assign trunc_ln21_3_fu_2206_p1 = shl_ln21_1_fu_2198_p2[6:0];

assign trunc_ln21_fu_1153_p1 = shl_ln21_fu_1149_p2[9:0];

assign trunc_ln23_1_fu_1227_p1 = lshr_ln23_1_fu_1221_p2[63:0];

assign trunc_ln23_2_fu_1253_p1 = lshr_ln23_3_fu_1247_p2[63:0];

assign trunc_ln23_3_fu_1270_p1 = lshr_ln23_4_fu_1264_p2[63:0];

assign trunc_ln23_4_fu_2258_p1 = lshr_ln23_5_fu_2252_p2[63:0];

assign trunc_ln23_5_fu_2276_p1 = lshr_ln23_6_fu_2270_p2[63:0];

assign trunc_ln23_6_fu_2302_p1 = lshr_ln23_7_fu_2296_p2[63:0];

assign trunc_ln23_7_fu_2319_p1 = lshr_ln23_8_fu_2313_p2[63:0];

assign trunc_ln23_fu_1209_p1 = lshr_ln23_fu_1203_p2[63:0];

assign trunc_ln24_1_fu_1315_p1 = lshr_ln24_1_fu_1309_p2[63:0];

assign trunc_ln24_2_fu_1341_p1 = lshr_ln24_2_fu_1335_p2[63:0];

assign trunc_ln24_3_fu_1358_p1 = lshr_ln24_3_fu_1352_p2[63:0];

assign trunc_ln24_4_fu_2346_p1 = lshr_ln24_4_fu_2340_p2[63:0];

assign trunc_ln24_5_fu_2364_p1 = lshr_ln24_5_fu_2358_p2[63:0];

assign trunc_ln24_6_fu_2390_p1 = lshr_ln24_6_fu_2384_p2[63:0];

assign trunc_ln24_7_fu_2407_p1 = lshr_ln24_7_fu_2401_p2[63:0];

assign trunc_ln24_fu_1297_p1 = lshr_ln24_fu_1291_p2[63:0];

assign xor_ln11_1_fu_1679_p2 = (sext_ln8_reg_2939 ^ or_ln10_1_fu_1674_p2);

assign xor_ln11_2_fu_552_p2 = (trunc_ln11_fu_548_p1 ^ 10'd1023);

assign xor_ln11_3_fu_585_p2 = (trunc_ln10_1_reg_2654 ^ or_ln11_fu_570_p2);

assign xor_ln11_4_fu_590_p2 = (trunc_ln10_reg_2648 ^ or_ln11_1_fu_575_p2);

assign xor_ln11_5_fu_1603_p2 = (trunc_ln11_5_fu_1593_p4 ^ 10'd1023);

assign xor_ln11_6_fu_1636_p2 = (trunc_ln10_7_reg_2961 ^ or_ln11_2_fu_1621_p2);

assign xor_ln11_7_fu_1641_p2 = (trunc_ln10_5_reg_2955 ^ or_ln11_3_fu_1626_p2);

assign xor_ln11_fu_628_p2 = (span_2_0_cast_reg_2632 ^ or_ln10_fu_623_p2);

assign xor_ln14_1_fu_1834_p2 = (shl_ln14_3_fu_1828_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln14_fu_783_p2 = (shl_ln14_fu_777_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln15_1_fu_855_p2 = (shl_ln15_2_fu_849_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln15_2_fu_1943_p2 = (shl_ln15_4_fu_1937_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln15_3_fu_1906_p2 = (shl_ln15_6_fu_1900_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln15_fu_892_p2 = (shl_ln15_fu_886_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln18_1_fu_2070_p2 = (shl_ln18_3_fu_2064_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln18_fu_1019_p2 = (shl_ln18_fu_1013_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln19_1_fu_1084_p2 = (shl_ln19_2_fu_1078_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln19_2_fu_2170_p2 = (shl_ln19_4_fu_2164_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln19_3_fu_2133_p2 = (shl_ln19_6_fu_2127_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln19_fu_1121_p2 = (shl_ln19_fu_1115_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln25_1_fu_2440_p2 = (shl_ln25_3_fu_2434_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln25_fu_1391_p2 = (shl_ln25_fu_1385_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln27_1_fu_1427_p2 = (shl_ln27_2_fu_1421_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln27_2_fu_2535_p2 = (shl_ln27_4_fu_2529_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln27_3_fu_2477_p2 = (shl_ln27_6_fu_2471_p2 ^ 128'd340282366920938463463374607431768211455);

assign xor_ln27_fu_1485_p2 = (shl_ln27_fu_1479_p2 ^ 128'd340282366920938463463374607431768211455);

assign zext_ln11_1_fu_1818_p1 = and_ln11_1_reg_2972;

assign zext_ln11_fu_767_p1 = and_ln11_reg_2665;

assign zext_ln13_10_fu_1764_p1 = shl_ln13_3_fu_1757_p3;

assign zext_ln13_11_fu_1782_p1 = shl_ln13_3_fu_1757_p3;

assign zext_ln13_1_fu_650_p1 = shl_ln_fu_643_p3;

assign zext_ln13_2_fu_668_p1 = shl_ln_fu_643_p3;

assign zext_ln13_3_fu_617_p1 = or_ln11_fu_570_p2;

assign zext_ln13_4_fu_713_p1 = shl_ln13_1_fu_706_p3;

assign zext_ln13_5_fu_1654_p1 = xor_ln11_6_fu_1636_p2;

assign zext_ln13_6_fu_731_p1 = shl_ln13_1_fu_706_p3;

assign zext_ln13_7_fu_1668_p1 = or_ln11_2_fu_1621_p2;

assign zext_ln13_8_fu_1701_p1 = shl_ln13_2_fu_1694_p3;

assign zext_ln13_9_fu_1719_p1 = shl_ln13_2_fu_1694_p3;

assign zext_ln13_fu_603_p1 = xor_ln11_3_fu_585_p2;

assign zext_ln14_1_fu_818_p1 = bitcast_ln14_fu_770_p1;

assign zext_ln14_2_fu_795_p1 = bitcast_ln14_fu_770_p1;

assign zext_ln14_3_fu_1825_p1 = shl_ln13_3_reg_3061;

assign zext_ln14_4_fu_1869_p1 = bitcast_ln14_1_fu_1821_p1;

assign zext_ln14_5_fu_1846_p1 = bitcast_ln14_1_fu_1821_p1;

assign zext_ln14_fu_774_p1 = shl_ln13_1_reg_2754;

assign zext_ln15_1_fu_904_p1 = bitcast_ln15_reg_2788;

assign zext_ln15_2_fu_846_p1 = shl_ln_reg_2731;

assign zext_ln15_3_fu_867_p1 = bitcast_ln15_reg_2788;

assign zext_ln15_4_fu_1934_p1 = shl_ln13_2_reg_3038;

assign zext_ln15_5_fu_1955_p1 = bitcast_ln15_1_reg_3095;

assign zext_ln15_6_fu_1897_p1 = shl_ln13_2_reg_3038;

assign zext_ln15_7_fu_1918_p1 = bitcast_ln15_1_reg_3095;

assign zext_ln15_fu_883_p1 = shl_ln_reg_2731;

assign zext_ln17_1_fu_937_p1 = shl_ln_reg_2731;

assign zext_ln17_2_fu_963_p1 = shl_ln13_1_reg_2754;

assign zext_ln17_3_fu_980_p1 = shl_ln13_1_reg_2754;

assign zext_ln17_4_fu_1971_p1 = shl_ln13_2_reg_3038;

assign zext_ln17_5_fu_1988_p1 = shl_ln13_2_reg_3038;

assign zext_ln17_6_fu_2014_p1 = shl_ln13_3_reg_3061;

assign zext_ln17_7_fu_2031_p1 = shl_ln13_3_reg_3061;

assign zext_ln17_fu_920_p1 = shl_ln_reg_2731;

assign zext_ln18_1_fu_1054_p1 = bitcast_ln18_fu_1006_p1;

assign zext_ln18_2_fu_1031_p1 = bitcast_ln18_fu_1006_p1;

assign zext_ln18_3_fu_2061_p1 = shl_ln13_3_reg_3061;

assign zext_ln18_4_fu_2104_p1 = bitcast_ln18_1_reg_3137;

assign zext_ln18_5_fu_2082_p1 = bitcast_ln18_1_reg_3137;

assign zext_ln18_fu_1010_p1 = shl_ln13_1_reg_2754;

assign zext_ln19_1_fu_1133_p1 = bitcast_ln19_reg_2830;

assign zext_ln19_2_fu_1075_p1 = shl_ln_reg_2731;

assign zext_ln19_3_fu_1096_p1 = bitcast_ln19_reg_2830;

assign zext_ln19_4_fu_2161_p1 = shl_ln13_2_reg_3038;

assign zext_ln19_5_fu_2182_p1 = bitcast_ln19_1_reg_3143;

assign zext_ln19_6_fu_2124_p1 = shl_ln13_2_reg_3038;

assign zext_ln19_7_fu_2145_p1 = bitcast_ln19_1_reg_3143;

assign zext_ln19_fu_1112_p1 = shl_ln_reg_2731;

assign zext_ln23_1_fu_1199_p1 = shl_ln1_fu_1192_p3;

assign zext_ln23_2_fu_1217_p1 = shl_ln1_fu_1192_p3;

assign zext_ln23_3_fu_2234_p1 = trunc_ln21_3_reg_3149;

assign zext_ln23_4_fu_1244_p1 = shl_ln13_1_reg_2754;

assign zext_ln23_5_fu_1261_p1 = shl_ln13_1_reg_2754;

assign zext_ln23_6_fu_2248_p1 = shl_ln23_1_fu_2241_p3;

assign zext_ln23_7_fu_2266_p1 = shl_ln23_1_fu_2241_p3;

assign zext_ln23_8_fu_2293_p1 = shl_ln13_3_reg_3061;

assign zext_ln23_9_fu_2310_p1 = shl_ln13_3_reg_3061;

assign zext_ln23_fu_1185_p1 = trunc_ln21_1_reg_2836;

assign zext_ln24_1_fu_1305_p1 = shl_ln1_fu_1192_p3;

assign zext_ln24_2_fu_1332_p1 = shl_ln13_1_reg_2754;

assign zext_ln24_3_fu_1349_p1 = shl_ln13_1_reg_2754;

assign zext_ln24_4_fu_2336_p1 = shl_ln23_1_fu_2241_p3;

assign zext_ln24_5_fu_2354_p1 = shl_ln23_1_fu_2241_p3;

assign zext_ln24_6_fu_2381_p1 = shl_ln13_3_reg_3061;

assign zext_ln24_7_fu_2398_p1 = shl_ln13_3_reg_3061;

assign zext_ln24_fu_1287_p1 = shl_ln1_fu_1192_p3;

assign zext_ln25_1_fu_1460_p1 = bitcast_ln25_reg_2925;

assign zext_ln25_2_fu_1402_p1 = bitcast_ln25_reg_2925;

assign zext_ln25_3_fu_2431_p1 = shl_ln13_3_reg_3061;

assign zext_ln25_4_fu_2509_p1 = bitcast_ln25_1_fu_2428_p1;

assign zext_ln25_5_fu_2451_p1 = bitcast_ln25_1_fu_2428_p1;

assign zext_ln25_fu_1382_p1 = shl_ln13_1_reg_2754;

assign zext_ln27_1_fu_1496_p1 = bitcast_ln27_fu_1379_p1;

assign zext_ln27_2_fu_1418_p1 = shl_ln13_1_reg_2754;

assign zext_ln27_3_fu_1438_p1 = bitcast_ln27_fu_1379_p1;

assign zext_ln27_4_fu_2526_p1 = shl_ln13_3_reg_3061;

assign zext_ln27_5_fu_2546_p1 = bitcast_ln27_1_reg_3238;

assign zext_ln27_6_fu_2468_p1 = shl_ln13_3_reg_3061;

assign zext_ln27_7_fu_2488_p1 = bitcast_ln27_1_reg_3238;

assign zext_ln27_fu_1476_p1 = shl_ln13_1_reg_2754;

assign zext_ln9_fu_1553_p1 = or_ln8_fu_1548_p2;

always @ (posedge ap_clk) begin
    log_0_cast_reg_2639[10:4] <= 7'b0000000;
    zext_ln13_reg_2675[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln13_3_reg_2698[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    shl_ln_reg_2731[5:0] <= 6'b000000;
    shl_ln13_1_reg_2754[5:0] <= 6'b000000;
    zext_ln11_reg_2779[10] <= 1'b0;
    zext_ln9_reg_2946[0] <= 1'b1;
    zext_ln9_reg_2946[15:4] <= 12'b000000000000;
    zext_ln13_5_reg_2982[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    zext_ln13_7_reg_3005[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    shl_ln13_2_reg_3038[5:0] <= 6'b000000;
    shl_ln13_3_reg_3061[5:0] <= 6'b000000;
    zext_ln11_1_reg_3086[15:10] <= 6'b000000;
    trunc_ln21_3_reg_3149[0] <= 1'b0;
end

endmodule //fft
